{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Tgram A developer-friendly Telegram Bot API library designed for Python enthusiasts.  Channel \u2022 Documentation \u2022 Examples"},{"location":"#quick-start","title":"\ud83d\ude80 Quick Start","text":"<p>Here's a basic example to get started with tgram:</p> <pre><code>from tgram import TgBot, filters\nfrom tgram.types import Message\n\nbot = TgBot(\"YOUR_BOT_TOKEN\")\n\n@bot.on_message(filters.text &amp; filters.private)\nasync def on_message(bot: TgBot, message: Message) -&gt; Message:\n    # Echo the incoming message\n    return await message.reply_text(\n        message.text,\n        entities=message.entities\n    )\n\nbot.run()\n</code></pre>"},{"location":"#features","title":"\ud83d\udce6 Features","text":"<ul> <li>Smart Plugins: Auto-loadable plugins for modular development.</li> <li>Filters for Handlers: Simplify event handling with filters.</li> <li>Bound Methods: Access bound methods for different update types easily.</li> </ul>"},{"location":"#documentation","title":"\ud83d\udcda Documentation","text":"<p>Full documentation is available here.</p>"},{"location":"#installation","title":"\ud83d\udd27 Installation","text":"<p>You can install the tgram library using one of the following methods:</p>"},{"location":"#via-git","title":"Via git:","text":"<pre><code>pip install git+https://github.com/z44d/tgram -U\n</code></pre>"},{"location":"#via-pypi-recommended","title":"Via PyPI (Recommended)","text":"<pre><code>pip install tgram -U\n</code></pre>"},{"location":"#requirements","title":"\ud83d\udca1 Requirements","text":"<ul> <li>Python: Version 3.8 or higher.</li> <li>Telegram Bot Token: Obtain one by following this guide.</li> </ul>"},{"location":"#help-support","title":"\ud83d\udcac Help &amp; Support","text":"<ul> <li>For general questions and help, join our Telegram chat.</li> <li>Follow updates via the Telegram Channel.</li> </ul>"},{"location":"filters/","title":"\ud83d\udd2e Filters","text":"<p>Contains custom filters for processing and handling Telegram messages and events.</p>"},{"location":"filters/#custom-filters","title":"\u2699\ufe0f Custom filters","text":"<ul> <li>Here is an example for how to create custom filter:</li> </ul> <pre><code>from tgram.filters import Filter\nfrom tgram import filters\n\nonly_me = Filter(lambda bot_object, message_object: bool(message_object.from_user.id == my_id))\n\n@bot.on_message(only_me &amp; filters.private)\n...\n</code></pre>"},{"location":"filters/#ready-to-use-filters","title":"\ud83d\udd25 Ready to use filters:","text":"<ul> <li> <p><code>all</code>: Matches any update.</p> </li> <li> <p><code>animation</code>: Message contains an animation; Message.animation is set.</p> </li> <li> <p><code>audio</code>: Message contains an audio file; Message.audio is set.</p> </li> <li> <p><code>automatic_forward</code>: Channel post automatically forwarded to the discussion group; Message.is_automatic_forward is True.</p> </li> <li> <p><code>boost_added</code>: Service message: user boosted the chat; Message.boost_added is set.</p> </li> <li> <p><code>business_connection</code>: Message comes via a business connection; Message.business_connection_id is set.</p> </li> <li> <p><code>caption</code>: Message has a caption; Message.caption is set.</p> </li> <li> <p><code>channel_chat_created</code>: Service message: the channel has been created; Message.channel_chat_created is True.</p> </li> <li> <p><code>chat_background_set</code>: Service message: chat background set; Message.chat_background_set is set.</p> </li> <li> <p><code>chat_shared</code>: Service message: a chat was shared with the bot; Message.chat_shared is set.</p> </li> <li> <p><code>checklist</code>: Message is a checklist; Message.checklist is set.</p> </li> <li> <p><code>checklist_tasks_added</code>: Service message: tasks were added to a checklist; Message.checklist_tasks_added is set.</p> </li> <li> <p><code>checklist_tasks_done</code>: Service message: checklist tasks were marked done/undone; Message.checklist_tasks_done is set.</p> </li> <li> <p><code>connected_website</code>: Message contains a connected website domain; Message.connected_website is set.</p> </li> <li> <p><code>contact</code>: Message contains a contact; Message.contact is set.</p> </li> <li> <p><code>delete_chat_photo</code>: Service message: chat photo was deleted; Message.delete_chat_photo is True.</p> </li> <li> <p><code>dice</code>: Message contains a dice; Message.dice is set.</p> </li> <li> <p><code>direct_message</code>: Message belongs to a channel direct messages topic; Message.direct_messages_topic is set.</p> </li> <li> <p><code>direct_message_price_changed</code>: Service message: price for paid messages changed in DM; Message.direct_message_price_changed is set.</p> </li> <li> <p><code>document</code>: Message contains a general file; Message.document is set.</p> </li> <li> <p><code>effected_message</code>: Message has an effect applied; Message.effect_id is set.</p> </li> <li> <p><code>entitied</code>: Message text contains entities; Message.entities is set.</p> </li> <li> <p><code>forum_topic_closed</code>: Service message: forum topic closed; Message.forum_topic_closed is set.</p> </li> <li> <p><code>forum_topic_created</code>: Service message: forum topic created; Message.forum_topic_created is set.</p> </li> <li> <p><code>forum_topic_edited</code>: Service message: forum topic edited; Message.forum_topic_edited is set.</p> </li> <li> <p><code>forum_topic_reopened</code>: Service message: forum topic reopened; Message.forum_topic_reopened is set.</p> </li> <li> <p><code>forward</code>: Message is a forwarded message; Message.forward_origin is set.</p> </li> <li> <p><code>from_offline</code>: Message was sent by an implicit/automated action; Message.is_from_offline is True.</p> </li> <li> <p><code>from_user</code>: Message has from_user (sent by a user).</p> </li> <li> <p><code>game</code>: Message contains a game; Message.game is set.</p> </li> <li> <p><code>general_forum_topic_hidden</code>: Service message: the 'General' forum topic was hidden; Message.general_forum_topic_hidden is set.</p> </li> <li> <p><code>general_forum_topic_unhidden</code>: Service message: the 'General' forum topic was unhidden; Message.general_forum_topic_unhidden is set.</p> </li> <li> <p><code>giveaway</code>: Message is a scheduled giveaway; Message.giveaway is set.</p> </li> <li> <p><code>giveaway_completed</code>: Service message: a giveaway without public winners was completed; Message.giveaway_completed is set.</p> </li> <li> <p><code>giveaway_created</code>: Service message: a scheduled giveaway was created; Message.giveaway_created is set.</p> </li> <li> <p><code>giveaway_winners</code>: Service message: a giveaway with public winners was completed; Message.giveaway_winners is set.</p> </li> <li> <p><code>group</code>: Update is from a group or supergroup chat.</p> </li> <li> <p><code>group_chat_created</code>: Service message: the group has been created; Message.group_chat_created is True.</p> </li> <li> <p><code>invoice</code>: Message is an invoice; Message.invoice is set.</p> </li> <li> <p><code>left_chat_member</code>: Service message: a member left/was removed; Message.left_chat_member is set.</p> </li> <li> <p><code>location</code>: Message contains a location; Message.location is set.</p> </li> <li> <p><code>media</code>: Matches messages that contain any media (photo, video, document, etc.).</p> </li> <li> <p><code>media_group</code>: Message is part of a media group; Message.media_group_id is set.</p> </li> <li> <p><code>media_spoiler</code>: Message media is covered by a spoiler; Message.has_media_spoiler is True.</p> </li> <li> <p><code>message_auto_delete_timer_changed</code>: Service message: auto-delete timer settings changed; Message.message_auto_delete_timer_changed is set.</p> </li> <li> <p><code>migrate_from_chat_id</code>: Service message: supergroup migrated from a group; Message.migrate_from_chat_id is set.</p> </li> <li> <p><code>migrate_to_chat_id</code>: Service message: group migrated to a supergroup; Message.migrate_to_chat_id is set.</p> </li> <li> <p><code>new_chat_members</code>: Service message: new chat members joined; Message.new_chat_members is set.</p> </li> <li> <p><code>new_chat_photo</code>: Service message: chat photo was changed; Message.new_chat_photo is set.</p> </li> <li> <p><code>new_chat_title</code>: Service message: chat title was changed; Message.new_chat_title is set.</p> </li> <li> <p><code>paid_post</code>: Message is a paid post; Message.is_paid_post is True.</p> </li> <li> <p><code>passport_data</code>: Message contains Telegram Passport data; Message.passport_data is set.</p> </li> <li> <p><code>photo</code>: Message contains a photo; Message.photo is set.</p> </li> <li> <p><code>pinned_message</code>: Service message: a message was pinned; Message.pinned_message is set.</p> </li> <li> <p><code>poll</code>: Message contains a native poll; Message.poll is set.</p> </li> <li> <p><code>private</code>: Update is from a private chat.</p> </li> <li> <p><code>protected_content</code>: Message has protected content; Message.has_protected_content is True.</p> </li> <li> <p><code>proximity_alert_triggered</code>: Service message: proximity alert was triggered; Message.proximity_alert_triggered is set.</p> </li> <li> <p><code>quote</code>: Message quotes part of another message; Message.quote is set.</p> </li> <li> <p><code>refunded_payment</code>: Service message: payment was refunded; Message.refunded_payment is set.</p> </li> <li> <p><code>reply</code>: Message is a reply; Message.reply_to_message is set.</p> </li> <li> <p><code>reply_markup</code>: Message has an inline keyboard attached; Message.reply_markup is set.</p> </li> <li> <p><code>reply_to_checklist_task</code>: Message replies to a specific checklist task; Message.reply_to_checklist_task_id is set.</p> </li> <li> <p><code>sender_chat</code>: Message has sender_chat (sent on behalf of a chat).</p> </li> <li> <p><code>service</code>: Matches service messages (e.g., joins, leaves, edits).</p> </li> <li> <p><code>sticker</code>: Message contains a sticker; Message.sticker is set.</p> </li> <li> <p><code>story</code>: Message is a forwarded story; Message.story is set.</p> </li> <li> <p><code>story_reply</code>: Message is a reply to a story; Message.reply_to_story is set.</p> </li> <li> <p><code>successful_payment</code>: Service message: payment was successful; Message.successful_payment is set.</p> </li> <li> <p><code>suggested_post</code>: Message contains suggested post info; Message.suggested_post_info is set.</p> </li> <li> <p><code>suggested_post_approval_failed</code>: Service message: approval of a suggested post failed; Message.suggested_post_approval_failed is set.</p> </li> <li> <p><code>suggested_post_approved</code>: Service message: a suggested post was approved; Message.suggested_post_approved is set.</p> </li> <li> <p><code>suggested_post_declined</code>: Service message: a suggested post was declined; Message.suggested_post_declined is set.</p> </li> <li> <p><code>suggested_post_paid</code>: Service message: payment for a suggested post was received; Message.suggested_post_paid is set.</p> </li> <li> <p><code>suggested_post_refunded</code>: Service message: payment for a suggested post was refunded; Message.suggested_post_refunded is set.</p> </li> <li> <p><code>supergroup_chat_created</code>: Service message: the supergroup has been created; Message.supergroup_chat_created is True.</p> </li> <li> <p><code>text</code>: Message contains text; Message.text is set.</p> </li> <li> <p><code>threaded</code>: Message belongs to a thread in a supergroup; Message.message_thread_id is set.</p> </li> <li> <p><code>topic_message</code>: Message is sent to a forum topic; Message.is_topic_message is True.</p> </li> <li> <p><code>users_shared</code>: Service message: users were shared with the bot; Message.users_shared is set.</p> </li> <li> <p><code>venue</code>: Message contains a venue; Message.venue is set.</p> </li> <li> <p><code>via_bot</code>: Message was sent via a bot; Message.via_bot is set.</p> </li> <li> <p><code>video</code>: Message contains a video; Message.video is set.</p> </li> <li> <p><code>video_chat_ended</code>: Service message: video chat ended; Message.video_chat_ended is set.</p> </li> <li> <p><code>video_chat_participants_invited</code>: Service message: new participants invited to a video chat; Message.video_chat_participants_invited is set.</p> </li> <li> <p><code>video_chat_scheduled</code>: Service message: video chat scheduled; Message.video_chat_scheduled is set.</p> </li> <li> <p><code>video_chat_started</code>: Service message: video chat started; Message.video_chat_started is set.</p> </li> <li> <p><code>video_note</code>: Message contains a video note; Message.video_note is set.</p> </li> <li> <p><code>voice</code>: Message contains a voice note; Message.voice is set.</p> </li> <li> <p><code>web_app_data</code>: Service message: data sent by a Web App; Message.web_app_data is set.</p> </li> <li> <p><code>write_access_allowed</code>: Service message: user allowed the bot to write messages; Message.write_access_allowed is set.</p> </li> <li> <p><code>chat</code>: Filter messages coming from one or more chats</p> </li> <li> <p><code>chat_type</code>: Filter updates that match a given chat type.</p> </li> <li> <p><code>command</code>: Filter commands, i.e.: text messages starting with \"/\" or any other custom prefix.</p> </li> <li> <p><code>parameter</code>: Filters command parameters using the specified regular expression pattern.</p> </li> <li> <p><code>regex</code>: Filter updates that match a given regular expression pattern.</p> </li> <li> <p><code>sender</code>: Filter messages coming from one or more sender chat</p> </li> <li> <p><code>user</code>: Filter messages coming from one or more users</p> </li> </ul>"},{"location":"methods/add_sticker_to_set/","title":"\ud83d\udd27 add_sticker_to_set","text":"<p>Use this method to add a new sticker to a set created by the bot.</p>"},{"location":"methods/add_sticker_to_set/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>user_id</code> (<code>int</code> ): User identifier of created sticker set owner</li> <li><code>name</code> (<code>str</code> ): Sticker set name</li> <li><code>sticker</code> (InputSticker ): A JSON-serialized object for sticker to be added to the sticker set</li> </ul>"},{"location":"methods/add_sticker_to_set/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/add_sticker_to_set/#bool","title":"<code>bool</code>","text":""},{"location":"methods/add_sticker_to_set/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.add_sticker_to_set(\n    user_id=your_user_id_here,\n    name=your_name_here,\n    sticker=your_sticker_here\n)\n</code></pre>"},{"location":"methods/answer_callback_query/","title":"\ud83d\udd27 answer_callback_query","text":"<p>Use this method to send answers to callback queries sent from inline keyboards. The answer will be displayed to</p>"},{"location":"methods/answer_callback_query/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>callback_query_id</code> (<code>str</code> ): Unique identifier for the query to be answered</li> <li><code>text</code> (<code>str</code> ) (<code>optional</code>): Text of the notification. If not specified, nothing will be shown to the user, 0-200 characters</li> <li><code>show_alert</code> (<code>bool</code> ) (<code>optional</code>): If True, an alert will be shown by the client instead of a notification at the top of the chat screen. Defaults to false.</li> <li><code>url</code> (<code>str</code> ) (<code>optional</code>): URL that will be opened by the user's client. If you have created a Game and accepted the conditions via @BotFather, specify the URL that opens your game - note that this will only work if the query comes from a callback_game button.</li> <li><code>cache_time</code> (<code>int</code> ) (<code>optional</code>): The maximum amount of time in seconds that the result of the callback query may be cached client-side. Telegram apps will support caching starting in version 3.14. Defaults to 0.</li> </ul>"},{"location":"methods/answer_callback_query/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/answer_callback_query/#bool","title":"<code>bool</code>","text":""},{"location":"methods/answer_callback_query/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.answer_callback_query(\n    callback_query_id=your_callback_query_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.answer_callback_query(\n    callback_query_id=your_callback_query_id_here,\n    text=your_text_here,\n    show_alert=your_show_alert_here,\n    url=your_url_here,\n    cache_time=your_cache_time_here\n)\n</code></pre>"},{"location":"methods/answer_inline_query/","title":"\ud83d\udd27 answer_inline_query","text":"<p>Use this method to send answers to an inline query. On success, True is returned.</p>"},{"location":"methods/answer_inline_query/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>inline_query_id</code> (<code>str</code> ): Unique identifier for the answered query</li> <li><code>results</code> (List of InlineQueryResultCachedAudio or InlineQueryResultCachedDocument or InlineQueryResultCachedGif or InlineQueryResultCachedMpeg4Gif or InlineQueryResultCachedPhoto or InlineQueryResultCachedSticker or InlineQueryResultCachedVideo or InlineQueryResultCachedVoice or InlineQueryResultArticle or InlineQueryResultAudio or InlineQueryResultContact or InlineQueryResultGame or InlineQueryResultDocument or InlineQueryResultGif or InlineQueryResultLocation or InlineQueryResultMpeg4Gif or InlineQueryResultPhoto or InlineQueryResultVenue or InlineQueryResultVideo or InlineQueryResultVoice ): Array of results for the inline query</li> <li><code>cache_time</code> (<code>int</code> ) (<code>optional</code>): The maximum amount of time in seconds that the result of the inline query may be cached on the server.</li> <li><code>is_personal</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if results may be cached on the server side only for the user that sent the query.</li> <li><code>next_offset</code> (<code>str</code> ) (<code>optional</code>): Pass the offset that a client should send in the next query with the same text to receive more results.</li> <li><code>button</code> (InlineQueryResultsButton ) (<code>optional</code>): A JSON-serialized object describing a button to be shown above inline query results</li> </ul>"},{"location":"methods/answer_inline_query/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/answer_inline_query/#bool","title":"<code>bool</code>","text":""},{"location":"methods/answer_inline_query/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.answer_inline_query(\n    inline_query_id=your_inline_query_id_here,\n    results=your_results_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.answer_inline_query(\n    inline_query_id=your_inline_query_id_here,\n    results=your_results_here,\n    cache_time=your_cache_time_here,\n    is_personal=your_is_personal_here,\n    next_offset=your_next_offset_here,\n    button=your_button_here\n)\n</code></pre>"},{"location":"methods/answer_pre_checkout_query/","title":"\ud83d\udd27 answer_pre_checkout_query","text":"<p>Once the user has confirmed their payment and shipping details, the Bot API sends the final confirmation in the form of an Update with the</p>"},{"location":"methods/answer_pre_checkout_query/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>pre_checkout_query_id</code> (<code>str</code> ): Unique identifier for the query to be answered</li> <li><code>ok</code> (<code>bool</code> ): Specify True if everything is alright (goods are available, etc.) and the bot is ready to proceed with the order. Use False if there are any problems.</li> <li><code>error_message</code> (<code>str</code> ) (<code>optional</code>): Required if ok is False. Error message in human readable form that explains the reason for failure to proceed with the checkout (e.g. \"Sorry, somebody just bought the last of our amazing black T-shirts while you were busy filling out your payment details. Please choose a different color or garment!\"). Telegram will display this message to the user.</li> </ul>"},{"location":"methods/answer_pre_checkout_query/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/answer_pre_checkout_query/#bool","title":"<code>bool</code>","text":""},{"location":"methods/answer_pre_checkout_query/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.answer_pre_checkout_query(\n    pre_checkout_query_id=your_pre_checkout_query_id_here,\n    ok=your_ok_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.answer_pre_checkout_query(\n    pre_checkout_query_id=your_pre_checkout_query_id_here,\n    ok=your_ok_here,\n    error_message=your_error_message_here\n)\n</code></pre>"},{"location":"methods/answer_shipping_query/","title":"\ud83d\udd27 answer_shipping_query","text":"<p>Asks for an answer to a shipping question.</p>"},{"location":"methods/answer_shipping_query/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>shipping_query_id</code> (<code>str</code> ): Unique identifier for the query to be answered</li> <li><code>ok</code> (<code>bool</code> ): Specify True if delivery to the specified address is possible and False if there are any problems (for example, if delivery to the specified address is not possible)</li> <li><code>shipping_options</code> (List of ShippingOption ) (<code>optional</code>): Required if ok is True. A JSON-serialized array of available shipping options.</li> <li><code>error_message</code> (<code>str</code> ) (<code>optional</code>): Required if ok is False. Error message in human readable form that explains why it is impossible to complete the order (e.g. \"Sorry, delivery to your desired address is unavailable'). Telegram will display this message to the user.</li> </ul>"},{"location":"methods/answer_shipping_query/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/answer_shipping_query/#bool","title":"<code>bool</code>","text":""},{"location":"methods/answer_shipping_query/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.answer_shipping_query(\n    shipping_query_id=your_shipping_query_id_here,\n    ok=your_ok_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.answer_shipping_query(\n    shipping_query_id=your_shipping_query_id_here,\n    ok=your_ok_here,\n    shipping_options=your_shipping_options_here,\n    error_message=your_error_message_here\n)\n</code></pre>"},{"location":"methods/answer_web_app_query/","title":"\ud83d\udd27 answer_web_app_query","text":"<p>Use this method to set the result of an interaction with a Web App and</p>"},{"location":"methods/answer_web_app_query/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>web_app_query_id</code> (<code>str</code> ): Unique identifier for the query to be answered</li> <li><code>result</code> (InlineQueryResultCachedAudio or InlineQueryResultCachedDocument or InlineQueryResultCachedGif or InlineQueryResultCachedMpeg4Gif or InlineQueryResultCachedPhoto or InlineQueryResultCachedSticker or InlineQueryResultCachedVideo or InlineQueryResultCachedVoice or InlineQueryResultArticle or InlineQueryResultAudio or InlineQueryResultContact or InlineQueryResultGame or InlineQueryResultDocument or InlineQueryResultGif or InlineQueryResultLocation or InlineQueryResultMpeg4Gif or InlineQueryResultPhoto or InlineQueryResultVenue or InlineQueryResultVideo or InlineQueryResultVoice ): A JSON-serialized object describing the message to be sent</li> </ul>"},{"location":"methods/answer_web_app_query/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/answer_web_app_query/#sentwebappmessage","title":"SentWebAppMessage","text":""},{"location":"methods/answer_web_app_query/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.answer_web_app_query(\n    web_app_query_id=your_web_app_query_id_here,\n    result=your_result_here\n)\n</code></pre>"},{"location":"methods/approve_chat_join_request/","title":"\ud83d\udd27 approve_chat_join_request","text":"<p>Use this method to approve a chat join request.</p>"},{"location":"methods/approve_chat_join_request/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)</li> <li><code>user_id</code> (<code>int</code> ): Unique identifier of the target user</li> </ul>"},{"location":"methods/approve_chat_join_request/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/approve_chat_join_request/#bool","title":"<code>bool</code>","text":""},{"location":"methods/approve_chat_join_request/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.approve_chat_join_request(\n    chat_id=your_chat_id_here,\n    user_id=your_user_id_here\n)\n</code></pre>"},{"location":"methods/approve_suggested_post/","title":"\ud83d\udd27 approve_suggested_post","text":"<p>Approves a suggested post in a direct messages chat.</p>"},{"location":"methods/approve_suggested_post/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> ): Unique identifier for the target direct messages chat</li> <li><code>message_id</code> (<code>int</code> ): Identifier of a suggested post message to approve</li> <li><code>send_date</code> (<code>int</code> ) (<code>optional</code>): Point in time (Unix timestamp) when the post is expected to be published; omit if the date has already been specified when the suggested post was created. If specified, then the date must be not more than 2678400 seconds (30 days) in the future</li> </ul>"},{"location":"methods/approve_suggested_post/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/approve_suggested_post/#bool","title":"<code>bool</code>","text":""},{"location":"methods/approve_suggested_post/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.approve_suggested_post(\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.approve_suggested_post(\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here,\n    send_date=your_send_date_here\n)\n</code></pre>"},{"location":"methods/ask/","title":"\ud83d\udd27 ask","text":"<p>Waits for a user response matching given filters within a time limit.</p>"},{"location":"methods/ask/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> ): The target chat to listen in.</li> <li><code>update_type</code> (<code>str</code> ) (<code>optional</code>): Type of update to listen for ('message', 'callback_query', etc.).</li> <li><code>user_id</code> (<code>int</code> ) (<code>optional</code>): Filter responses to a specific user.</li> <li><code>sender_id</code> (<code>int</code> ) (<code>optional</code>): Filter responses to a specific sender chat (channel's speaker).</li> <li><code>cancel</code> (<code>Callable</code> ) (<code>optional</code>): A function that cancels the waiting when it returns True.</li> <li><code>filters</code> (<code>Filter</code> ) (<code>optional</code>): Custom filters to match incoming updates.</li> <li><code>timeout</code> (<code>float</code> ) (<code>optional</code>): Timeout in seconds.</li> </ul>"},{"location":"methods/ask/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/ask/#message-or-callbackquery-or-update","title":"Message or CallbackQuery or Update","text":""},{"location":"methods/ask/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.ask(\n    chat_id=your_chat_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.ask(\n    chat_id=your_chat_id_here,\n    update_type=your_update_type_here,\n    user_id=your_user_id_here,\n    sender_id=your_sender_id_here,\n    cancel=your_cancel_here,\n    filters=your_filters_here,\n    timeout=your_timeout_here\n)\n</code></pre>"},{"location":"methods/ban_chat_member/","title":"\ud83d\udd27 ban_chat_member","text":"<p>Use this method to ban a user in a group, a supergroup or a channel.</p>"},{"location":"methods/ban_chat_member/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target group or username of the target supergroup or channel (in the format @channelusername)</li> <li><code>user_id</code> (<code>int</code> ): Unique identifier of the target user</li> <li><code>until_date</code> (<code>int</code> ) (<code>optional</code>): Date when the user will be unbanned, unix time. If user is banned for more than 366 days or less than 30 seconds from the current time they are considered to be banned forever</li> <li><code>revoke_messages</code> (<code>bool</code> ) (<code>optional</code>): Bool: Pass True to delete all messages from the chat for the user that is being removed. If False, the user will be able to see messages in the group that were sent before the user was removed. Always True for supergroups and channels.</li> </ul>"},{"location":"methods/ban_chat_member/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/ban_chat_member/#bool","title":"<code>bool</code>","text":""},{"location":"methods/ban_chat_member/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.ban_chat_member(\n    chat_id=your_chat_id_here,\n    user_id=your_user_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.ban_chat_member(\n    chat_id=your_chat_id_here,\n    user_id=your_user_id_here,\n    until_date=your_until_date_here,\n    revoke_messages=your_revoke_messages_here\n)\n</code></pre>"},{"location":"methods/ban_chat_sender_chat/","title":"\ud83d\udd27 ban_chat_sender_chat","text":"<p>Use this method to ban a channel chat in a supergroup or a channel.</p>"},{"location":"methods/ban_chat_sender_chat/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>sender_chat_id</code> (<code>int</code> ): Unique identifier of the target sender chat</li> </ul>"},{"location":"methods/ban_chat_sender_chat/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/ban_chat_sender_chat/#bool","title":"<code>bool</code>","text":""},{"location":"methods/ban_chat_sender_chat/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.ban_chat_sender_chat(\n    chat_id=your_chat_id_here,\n    sender_chat_id=your_sender_chat_id_here\n)\n</code></pre>"},{"location":"methods/close/","title":"\ud83d\udd27 close","text":"<p>Use this method to close the bot instance before moving it from one local server to another.</p>"},{"location":"methods/close/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/close/#bool","title":"<code>bool</code>","text":""},{"location":"methods/close/#examples","title":"\ud83d\udcc0 Examples","text":""},{"location":"methods/close_forum_topic/","title":"\ud83d\udd27 close_forum_topic","text":"<p>Use this method to close an open topic in a forum supergroup chat. The bot must be an administrator</p>"},{"location":"methods/close_forum_topic/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>message_thread_id</code> (<code>int</code> ): Identifier of the topic to close</li> </ul>"},{"location":"methods/close_forum_topic/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/close_forum_topic/#bool","title":"<code>bool</code>","text":""},{"location":"methods/close_forum_topic/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.close_forum_topic(\n    chat_id=your_chat_id_here,\n    message_thread_id=your_message_thread_id_here\n)\n</code></pre>"},{"location":"methods/close_general_forum_topic/","title":"\ud83d\udd27 close_general_forum_topic","text":"<p>Use this method to close the 'General' topic in a forum supergroup chat.</p>"},{"location":"methods/close_general_forum_topic/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> </ul>"},{"location":"methods/close_general_forum_topic/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/close_general_forum_topic/#bool","title":"<code>bool</code>","text":""},{"location":"methods/close_general_forum_topic/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.close_general_forum_topic(\n    chat_id=your_chat_id_here\n)\n</code></pre>"},{"location":"methods/convert_gift_to_stars/","title":"\ud83d\udd27 convert_gift_to_stars","text":"<p>Converts a given regular gift to Telegram Stars. Requires the can_convert_gifts_to_stars business bot right. Returns True on success.</p>"},{"location":"methods/convert_gift_to_stars/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection.</li> <li><code>owned_gift_id</code> (<code>str</code> ): Unique identifier of the regular gift that should be converted to Telegram Stars.</li> </ul>"},{"location":"methods/convert_gift_to_stars/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/convert_gift_to_stars/#bool","title":"<code>bool</code>","text":""},{"location":"methods/convert_gift_to_stars/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.convert_gift_to_stars(\n    business_connection_id=your_business_connection_id_here,\n    owned_gift_id=your_owned_gift_id_here\n)\n</code></pre>"},{"location":"methods/copy_message/","title":"\ud83d\udd27 copy_message","text":"<p>Use this method to copy messages of any kind.</p>"},{"location":"methods/copy_message/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>from_chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the chat where the original message was sent (or channel username in the format @channelusername)</li> <li><code>message_id</code> (<code>int</code> ): Message identifier in the chat specified in from_chat_id</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of a message thread, in which the message will be sent</li> <li><code>video_start_timestamp</code> (<code>int</code> ) (<code>optional</code>): New start timestamp for the copied video in the message</li> <li><code>caption</code> (<code>str</code> ) (<code>optional</code>): New caption for media, 0-1024 characters after entities parsing. If not specified, the original caption is kept</li> <li><code>parse_mode</code> (<code>Literal</code> ) (<code>optional</code>): Mode for parsing entities in the new caption.</li> <li><code>caption_entities</code> (List of MessageEntity ) (<code>optional</code>): A JSON-serialized list of special entities that appear in the new caption, which can be specified instead of parse_mode</li> <li><code>show_caption_above_media</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the caption must be shown above the message media. Supported only for animation, photo and video messages.</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound.</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the sent message from forwarding and saving</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): Reply parameters.</li> <li><code>reply_markup</code> (InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply ) (<code>optional</code>): Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>): Pass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> <li><code>suggested_post_parameters</code> (SuggestedPostParameters ) (<code>optional</code>): A JSON-serialized object containing the parameters of the suggested post to send; for direct messages chats only. If the message is sent as a reply to another suggested post, then that suggested post is automatically declined.</li> </ul>"},{"location":"methods/copy_message/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/copy_message/#messageid","title":"MessageId","text":""},{"location":"methods/copy_message/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.copy_message(\n    chat_id=your_chat_id_here,\n    from_chat_id=your_from_chat_id_here,\n    message_id=your_message_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.copy_message(\n    chat_id=your_chat_id_here,\n    from_chat_id=your_from_chat_id_here,\n    message_id=your_message_id_here,\n    message_thread_id=your_message_thread_id_here,\n    video_start_timestamp=your_video_start_timestamp_here,\n    caption=your_caption_here,\n    parse_mode=your_parse_mode_here,\n    caption_entities=your_caption_entities_here,\n    show_caption_above_media=your_show_caption_above_media_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here,\n    suggested_post_parameters=your_suggested_post_parameters_here\n)\n</code></pre>"},{"location":"methods/copy_messages/","title":"\ud83d\udd27 copy_messages","text":"<p>Use this method to copy messages of any kind. If some of the specified messages can't be found or copied, they are skipped.</p>"},{"location":"methods/copy_messages/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>from_chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the chat where the original message was sent (or channel username in the format @channelusername)</li> <li><code>message_ids</code> (List of <code>int</code> ): Message identifiers in the chat specified in from_chat_id</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of a message thread, in which the messages will be sent</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the forwarded message from forwarding and saving</li> <li><code>remove_caption</code> (<code>bool</code> ) (<code>optional</code>): Pass True to copy the messages without their captions</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> </ul>"},{"location":"methods/copy_messages/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/copy_messages/#list-of-messageid","title":"List of MessageId","text":""},{"location":"methods/copy_messages/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.copy_messages(\n    chat_id=your_chat_id_here,\n    from_chat_id=your_from_chat_id_here,\n    message_ids=your_message_ids_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.copy_messages(\n    chat_id=your_chat_id_here,\n    from_chat_id=your_from_chat_id_here,\n    message_ids=your_message_ids_here,\n    message_thread_id=your_message_thread_id_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    remove_caption=your_remove_caption_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here\n)\n</code></pre>"},{"location":"methods/create_chat_invite_link/","title":"\ud83d\udd27 create_chat_invite_link","text":"<p>Use this method to create an additional invite link for a chat. The bot must be an administrator in the chat for this to work and</p>"},{"location":"methods/create_chat_invite_link/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Id: Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>name</code> (<code>str</code> ) (<code>optional</code>): Invite link name; 0-32 characters</li> <li><code>expire_date</code> (<code>int</code> ) (<code>optional</code>): Point in time (Unix timestamp) when the link will expire</li> <li><code>member_limit</code> (<code>int</code> ) (<code>optional</code>): Maximum number of users that can be members of the chat simultaneously</li> <li><code>creates_join_request</code> (<code>bool</code> ) (<code>optional</code>): True, if users joining the chat via the link need to be approved by chat administrators. If True, member_limit can't be specified</li> </ul>"},{"location":"methods/create_chat_invite_link/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/create_chat_invite_link/#chatinvitelink","title":"ChatInviteLink","text":""},{"location":"methods/create_chat_invite_link/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.create_chat_invite_link(\n    chat_id=your_chat_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.create_chat_invite_link(\n    chat_id=your_chat_id_here,\n    name=your_name_here,\n    expire_date=your_expire_date_here,\n    member_limit=your_member_limit_here,\n    creates_join_request=your_creates_join_request_here\n)\n</code></pre>"},{"location":"methods/create_chat_subscription_invite_link/","title":"\ud83d\udd27 create_chat_subscription_invite_link","text":"<p>Use this method to create a subscription invite link for a channel chat.</p>"},{"location":"methods/create_chat_subscription_invite_link/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Id: Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>subscription_period</code> (<code>int</code> ): The number of seconds the subscription will be active for before the next payment. Currently, it must always be 2592000 (30 days).</li> <li><code>subscription_price</code> (<code>int</code> ): The amount of Telegram Stars a user must pay initially and after each subsequent subscription period to be a member of the chat; 1-2500</li> <li><code>name</code> (<code>str</code> ) (<code>optional</code>): Invite link name; 0-32 characters</li> </ul>"},{"location":"methods/create_chat_subscription_invite_link/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/create_chat_subscription_invite_link/#chatinvitelink","title":"ChatInviteLink","text":""},{"location":"methods/create_chat_subscription_invite_link/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.create_chat_subscription_invite_link(\n    chat_id=your_chat_id_here,\n    subscription_period=your_subscription_period_here,\n    subscription_price=your_subscription_price_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.create_chat_subscription_invite_link(\n    chat_id=your_chat_id_here,\n    subscription_period=your_subscription_period_here,\n    subscription_price=your_subscription_price_here,\n    name=your_name_here\n)\n</code></pre>"},{"location":"methods/create_forum_topic/","title":"\ud83d\udd27 create_forum_topic","text":"<p>Use this method to create a topic in a forum supergroup chat. The bot must be an administrator</p>"},{"location":"methods/create_forum_topic/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>name</code> (<code>str</code> ): Name of the topic, 1-128 characters</li> <li><code>icon_color</code> (<code>int</code> ) (<code>optional</code>): Color of the topic icon in RGB format. Currently, must be one of 0x6FB9F0, 0xFFD67E, 0xCB86DB, 0x8EEE98, 0xFF93B2, or 0xFB6F5F</li> <li><code>icon_custom_emoji_id</code> (<code>str</code> ) (<code>optional</code>): Custom emoji for the topic icon. Must be an emoji of type \u201ctgs\u201d and must be exactly 1 character long</li> </ul>"},{"location":"methods/create_forum_topic/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/create_forum_topic/#forumtopic","title":"ForumTopic","text":""},{"location":"methods/create_forum_topic/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.create_forum_topic(\n    chat_id=your_chat_id_here,\n    name=your_name_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.create_forum_topic(\n    chat_id=your_chat_id_here,\n    name=your_name_here,\n    icon_color=your_icon_color_here,\n    icon_custom_emoji_id=your_icon_custom_emoji_id_here\n)\n</code></pre>"},{"location":"methods/create_invoice_link/","title":"\ud83d\udd27 create_invoice_link","text":"<p>Use this method to create a link for an invoice.</p>"},{"location":"methods/create_invoice_link/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>title</code> (<code>str</code> ): Product name, 1-32 characters</li> <li><code>description</code> (<code>str</code> ): Product description, 1-255 characters</li> <li><code>payload</code> (<code>str</code> ): Bot-defined invoice payload, 1-128 bytes. This will not be displayed to the user, use for your internal processes.</li> <li><code>currency</code> (<code>str</code> ): Three-letter ISO 4217 currency code, see https://core.telegram.org/bots/payments#supported-currencies</li> <li><code>prices</code> (List of LabeledPrice ): Price breakdown, a list of components (e.g. product price, tax, discount, delivery cost, delivery tax, bonus, etc.)</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier of the business connection on behalf of which the link will be created.</li> <li><code>subscription_period</code> (<code>int</code> ) (<code>optional</code>): The number of seconds the subscription will be active for before the next payment. The currency must be set to \u201cXTR\u201d (Telegram Stars) if the parameter is used. Currently, it must always be 2592000 (30 days) if specified.</li> <li><code>provider_token</code> (<code>str</code> ) (<code>optional</code>): Payments provider token, obtained via @Botfather; Pass None to omit the parameter to use \"XTR\" currency</li> <li><code>max_tip_amount</code> (<code>int</code> ) (<code>optional</code>): The maximum accepted amount for tips in the smallest units of the currency</li> <li><code>suggested_tip_amounts</code> (List of <code>int</code> ) (<code>optional</code>): A JSON-serialized array of suggested amounts of tips in the smallest units of the currency.  At most 4 suggested tip amounts can be specified. The suggested tip amounts must be positive, passed in a strictly increased order and must not exceed max_tip_amount.</li> <li><code>provider_data</code> (<code>str</code> ) (<code>optional</code>): A JSON-serialized data about the invoice, which will be shared with the payment provider. A detailed description of required fields should be provided by the payment provider.</li> <li><code>photo_url</code> (<code>str</code> ) (<code>optional</code>): URL of the product photo for the invoice. Can be a photo of the goods or a photo of the invoice. People like it better when they see a photo of what they are paying for.</li> <li><code>photo_size</code> (<code>int</code> ) (<code>optional</code>): Photo size in bytes</li> <li><code>photo_width</code> (<code>int</code> ) (<code>optional</code>): Photo width</li> <li><code>photo_height</code> (<code>int</code> ) (<code>optional</code>): Photo height</li> <li><code>need_name</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if you require the user's full name to complete the order</li> <li><code>need_phone_number</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if you require the user's phone number to complete the order</li> <li><code>need_email</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if you require the user's email to complete the order</li> <li><code>need_shipping_address</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if you require the user's shipping address to complete the order</li> <li><code>send_phone_number_to_provider</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if user's phone number should be sent to provider</li> <li><code>send_email_to_provider</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if user's email address should be sent to provider</li> <li><code>is_flexible</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the final price depends on the shipping method</li> </ul>"},{"location":"methods/create_invoice_link/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/create_invoice_link/#str","title":"<code>str</code>","text":""},{"location":"methods/create_invoice_link/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.create_invoice_link(\n    title=your_title_here,\n    description=your_description_here,\n    payload=your_payload_here,\n    currency=your_currency_here,\n    prices=your_prices_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.create_invoice_link(\n    title=your_title_here,\n    description=your_description_here,\n    payload=your_payload_here,\n    currency=your_currency_here,\n    prices=your_prices_here,\n    business_connection_id=your_business_connection_id_here,\n    subscription_period=your_subscription_period_here,\n    provider_token=your_provider_token_here,\n    max_tip_amount=your_max_tip_amount_here,\n    suggested_tip_amounts=your_suggested_tip_amounts_here,\n    provider_data=your_provider_data_here,\n    photo_url=your_photo_url_here,\n    photo_size=your_photo_size_here,\n    photo_width=your_photo_width_here,\n    photo_height=your_photo_height_here,\n    need_name=your_need_name_here,\n    need_phone_number=your_need_phone_number_here,\n    need_email=your_need_email_here,\n    need_shipping_address=your_need_shipping_address_here,\n    send_phone_number_to_provider=your_send_phone_number_to_provider_here,\n    send_email_to_provider=your_send_email_to_provider_here,\n    is_flexible=your_is_flexible_here\n)\n</code></pre>"},{"location":"methods/create_new_sticker_set/","title":"\ud83d\udd27 create_new_sticker_set","text":"<p>Use this method to create new sticker set owned by a user.</p>"},{"location":"methods/create_new_sticker_set/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>user_id</code> (<code>int</code> ): User identifier of created sticker set owner</li> <li><code>name</code> (<code>str</code> ): Short name of sticker set, to be used in t.me/addstickers/ URLs (e.g., animals). Can contain only English letters, digits and underscores. Must begin with a letter, can't contain consecutive underscores and must end in \"by\".  is case insensitive. 1-64 characters. <li><code>title</code> (<code>str</code> ): Sticker set title, 1-64 characters</li> <li><code>stickers</code> (List of InputSticker ): List of stickers to be added to the set</li> <li><code>sticker_type</code> (<code>str</code> ) (<code>optional</code>): Type of stickers in the set, pass \u201cregular\u201d, \u201cmask\u201d, or \u201ccustom_emoji\u201d. By default, a regular sticker set is created.</li> <li><code>needs_repainting</code> (<code>bool</code> ) (<code>optional</code>): Pass True if stickers in the sticker set must be repainted to the color of text when used in messages, the accent color if used as emoji status, white on chat photos, or another appropriate color based on context; for custom emoji sticker sets only</li>"},{"location":"methods/create_new_sticker_set/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/create_new_sticker_set/#bool","title":"<code>bool</code>","text":""},{"location":"methods/create_new_sticker_set/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.create_new_sticker_set(\n    user_id=your_user_id_here,\n    name=your_name_here,\n    title=your_title_here,\n    stickers=your_stickers_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.create_new_sticker_set(\n    user_id=your_user_id_here,\n    name=your_name_here,\n    title=your_title_here,\n    stickers=your_stickers_here,\n    sticker_type=your_sticker_type_here,\n    needs_repainting=your_needs_repainting_here\n)\n</code></pre>"},{"location":"methods/decline_chat_join_request/","title":"\ud83d\udd27 decline_chat_join_request","text":"<p>Use this method to decline a chat join request.</p>"},{"location":"methods/decline_chat_join_request/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)</li> <li><code>user_id</code> (<code>int</code> ): Unique identifier of the target user</li> </ul>"},{"location":"methods/decline_chat_join_request/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/decline_chat_join_request/#bool","title":"<code>bool</code>","text":""},{"location":"methods/decline_chat_join_request/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.decline_chat_join_request(\n    chat_id=your_chat_id_here,\n    user_id=your_user_id_here\n)\n</code></pre>"},{"location":"methods/decline_suggested_post/","title":"\ud83d\udd27 decline_suggested_post","text":"<p>Declines a suggested post in a direct messages chat.</p>"},{"location":"methods/decline_suggested_post/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> ): Unique identifier for the target direct messages chat</li> <li><code>message_id</code> (<code>int</code> ): Identifier of a suggested post message to decline</li> <li><code>comment</code> (<code>str</code> ) (<code>optional</code>): Comment for the creator of the suggested post; 0-128 characters</li> </ul>"},{"location":"methods/decline_suggested_post/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/decline_suggested_post/#bool","title":"<code>bool</code>","text":""},{"location":"methods/decline_suggested_post/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.decline_suggested_post(\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.decline_suggested_post(\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here,\n    comment=your_comment_here\n)\n</code></pre>"},{"location":"methods/delete_business_messages/","title":"\ud83d\udd27 delete_business_messages","text":"<p>Deletes messages on behalf of a business account.</p>"},{"location":"methods/delete_business_messages/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection on behalf of which to delete the messages</li> <li><code>message_ids</code> (List of <code>int</code> ): A JSON-serialized list of 1-100 identifiers of messages to delete. All messages must be from the same chat.</li> </ul>"},{"location":"methods/delete_business_messages/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/delete_business_messages/#bool","title":"<code>bool</code>","text":""},{"location":"methods/delete_business_messages/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.delete_business_messages(\n    business_connection_id=your_business_connection_id_here,\n    message_ids=your_message_ids_here\n)\n</code></pre>"},{"location":"methods/delete_chat_photo/","title":"\ud83d\udd27 delete_chat_photo","text":"<p>Use this method to delete a chat photo. Photos can't be changed for private chats.</p>"},{"location":"methods/delete_chat_photo/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Int or Str: Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> </ul>"},{"location":"methods/delete_chat_photo/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/delete_chat_photo/#bool","title":"<code>bool</code>","text":""},{"location":"methods/delete_chat_photo/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.delete_chat_photo(\n    chat_id=your_chat_id_here\n)\n</code></pre>"},{"location":"methods/delete_chat_sticker_set/","title":"\ud83d\udd27 delete_chat_sticker_set","text":"<p>Use this method to delete a group sticker set from a supergroup. The bot must be an administrator in the chat</p>"},{"location":"methods/delete_chat_sticker_set/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)</li> </ul>"},{"location":"methods/delete_chat_sticker_set/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/delete_chat_sticker_set/#bool","title":"<code>bool</code>","text":""},{"location":"methods/delete_chat_sticker_set/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.delete_chat_sticker_set(\n    chat_id=your_chat_id_here\n)\n</code></pre>"},{"location":"methods/delete_forum_topic/","title":"\ud83d\udd27 delete_forum_topic","text":"<p>Use this method to delete a topic in a forum supergroup chat. The bot must be an administrator in the chat for this</p>"},{"location":"methods/delete_forum_topic/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>message_thread_id</code> (<code>int</code> ): Identifier of the topic to delete</li> </ul>"},{"location":"methods/delete_forum_topic/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/delete_forum_topic/#bool","title":"<code>bool</code>","text":""},{"location":"methods/delete_forum_topic/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.delete_forum_topic(\n    chat_id=your_chat_id_here,\n    message_thread_id=your_message_thread_id_here\n)\n</code></pre>"},{"location":"methods/delete_message/","title":"\ud83d\udd27 delete_message","text":"<p>Use this method to delete a message, including service messages, with the following limitations:</p>"},{"location":"methods/delete_message/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>message_id</code> (<code>int</code> ): Identifier of the message to delete</li> </ul>"},{"location":"methods/delete_message/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/delete_message/#bool","title":"<code>bool</code>","text":""},{"location":"methods/delete_message/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.delete_message(\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here\n)\n</code></pre>"},{"location":"methods/delete_messages/","title":"\ud83d\udd27 delete_messages","text":"<p>Use this method to delete multiple messages simultaneously.</p>"},{"location":"methods/delete_messages/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>message_ids</code> (List of <code>int</code> ): Identifiers of the messages to be deleted</li> </ul>"},{"location":"methods/delete_messages/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/delete_messages/#bool","title":"<code>bool</code>","text":""},{"location":"methods/delete_messages/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.delete_messages(\n    chat_id=your_chat_id_here,\n    message_ids=your_message_ids_here\n)\n</code></pre>"},{"location":"methods/delete_my_commands/","title":"\ud83d\udd27 delete_my_commands","text":"<p>Use this method to delete the list of the bot's commands for the given scope and user language.</p>"},{"location":"methods/delete_my_commands/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>scope</code> (BotCommandScope ) (<code>optional</code>): The scope of users for which the commands are relevant. Defaults to BotCommandScopeDefault.</li> <li><code>language_code</code> (<code>str</code> ) (<code>optional</code>): A two-letter ISO 639-1 language code. If empty, commands will be applied to all users from the given scope, for whose language there are no dedicated commands</li> </ul>"},{"location":"methods/delete_my_commands/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/delete_my_commands/#bool","title":"<code>bool</code>","text":""},{"location":"methods/delete_my_commands/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.delete_my_commands(\n    scope=your_scope_here,\n    language_code=your_language_code_here\n)\n</code></pre>"},{"location":"methods/delete_sticker_from_set/","title":"\ud83d\udd27 delete_sticker_from_set","text":"<p>Use this method to delete a sticker from a set created by the bot. Returns True on success.</p>"},{"location":"methods/delete_sticker_from_set/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>sticker</code> (<code>str</code> ): File identifier of the sticker</li> </ul>"},{"location":"methods/delete_sticker_from_set/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/delete_sticker_from_set/#bool","title":"<code>bool</code>","text":""},{"location":"methods/delete_sticker_from_set/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.delete_sticker_from_set(\n    sticker=your_sticker_here\n)\n</code></pre>"},{"location":"methods/delete_sticker_set/","title":"\ud83d\udd27 delete_sticker_set","text":"<p>Use this method to delete a sticker set. Returns True on success.</p>"},{"location":"methods/delete_sticker_set/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>name</code> (<code>str</code> ): Sticker set name</li> </ul>"},{"location":"methods/delete_sticker_set/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/delete_sticker_set/#bool","title":"<code>bool</code>","text":""},{"location":"methods/delete_sticker_set/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.delete_sticker_set(\n    name=your_name_here\n)\n</code></pre>"},{"location":"methods/delete_story/","title":"\ud83d\udd27 delete_story","text":"<p>Deletes a story previously posted by the bot on behalf of a managed business account.</p>"},{"location":"methods/delete_story/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection</li> <li><code>story_id</code> (<code>int</code> ): Unique identifier of the story to delete</li> </ul>"},{"location":"methods/delete_story/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/delete_story/#bool","title":"<code>bool</code>","text":""},{"location":"methods/delete_story/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.delete_story(\n    business_connection_id=your_business_connection_id_here,\n    story_id=your_story_id_here\n)\n</code></pre>"},{"location":"methods/delete_webhook/","title":"\ud83d\udd27 delete_webhook","text":"<p>Use this method to remove webhook integration if you decide to switch back to getUpdates.</p>"},{"location":"methods/delete_webhook/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>drop_pending_updates</code> (<code>bool</code> ) (<code>optional</code>): Pass True to drop all pending updates, defaults to None</li> </ul>"},{"location":"methods/delete_webhook/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/delete_webhook/#bool","title":"<code>bool</code>","text":""},{"location":"methods/delete_webhook/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.delete_webhook(\n    drop_pending_updates=your_drop_pending_updates_here\n)\n</code></pre>"},{"location":"methods/demote_chat_member/","title":"\ud83d\udd27 demote_chat_member","text":"<p>Use this method to demote a user in a supergroup or a channel. The bot must be an administrator</p>"},{"location":"methods/demote_chat_member/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel ( in the format @channelusername)</li> <li><code>user_id</code> (<code>int</code> ): Unique identifier of the target user</li> </ul>"},{"location":"methods/demote_chat_member/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/demote_chat_member/#bool","title":"<code>bool</code>","text":""},{"location":"methods/demote_chat_member/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.demote_chat_member(\n    chat_id=your_chat_id_here,\n    user_id=your_user_id_here\n)\n</code></pre>"},{"location":"methods/download_file/","title":"\ud83d\udd27 download_file","text":""},{"location":"methods/download_file/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>file_id</code> (<code>str</code> )</li> <li><code>file_path</code> (<code>str</code> ) (<code>optional</code>)</li> <li><code>in_memory</code> (<code>bool</code> ) (<code>optional</code>)</li> </ul>"},{"location":"methods/download_file/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/download_file/#path-or-bytesio","title":"<code>Path</code> or <code>BytesIO</code>","text":""},{"location":"methods/download_file/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.download_file(\n    file_id=your_file_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.download_file(\n    file_id=your_file_id_here,\n    file_path=your_file_path_here,\n    in_memory=your_in_memory_here\n)\n</code></pre>"},{"location":"methods/edit_chat_invite_link/","title":"\ud83d\udd27 edit_chat_invite_link","text":"<p>Use this method to edit a non-primary invite link created by the bot.</p>"},{"location":"methods/edit_chat_invite_link/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Id: Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>invite_link</code> (<code>str</code> ): The invite link to edit</li> <li><code>name</code> (<code>str</code> ) (<code>optional</code>): Invite link name; 0-32 characters</li> <li><code>expire_date</code> (<code>int</code> ) (<code>optional</code>): Point in time (Unix timestamp) when the link will expire</li> <li><code>member_limit</code> (<code>int</code> ) (<code>optional</code>): Maximum number of users that can be members of the chat simultaneously</li> <li><code>creates_join_request</code> (<code>bool</code> ) (<code>optional</code>): True, if users joining the chat via the link need to be approved by chat administrators. If True, member_limit can't be specified</li> </ul>"},{"location":"methods/edit_chat_invite_link/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/edit_chat_invite_link/#chatinvitelink","title":"ChatInviteLink","text":""},{"location":"methods/edit_chat_invite_link/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.edit_chat_invite_link(\n    chat_id=your_chat_id_here,\n    invite_link=your_invite_link_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.edit_chat_invite_link(\n    chat_id=your_chat_id_here,\n    invite_link=your_invite_link_here,\n    name=your_name_here,\n    expire_date=your_expire_date_here,\n    member_limit=your_member_limit_here,\n    creates_join_request=your_creates_join_request_here\n)\n</code></pre>"},{"location":"methods/edit_chat_subscription_invite_link/","title":"\ud83d\udd27 edit_chat_subscription_invite_link","text":"<p>Use this method to edit a subscription invite link created by the bot.</p>"},{"location":"methods/edit_chat_subscription_invite_link/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Id: Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>invite_link</code> (<code>str</code> ): The invite link to edit</li> <li><code>name</code> (<code>str</code> ) (<code>optional</code>): Invite link name; 0-32 characters</li> </ul>"},{"location":"methods/edit_chat_subscription_invite_link/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/edit_chat_subscription_invite_link/#chatinvitelink","title":"ChatInviteLink","text":""},{"location":"methods/edit_chat_subscription_invite_link/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.edit_chat_subscription_invite_link(\n    chat_id=your_chat_id_here,\n    invite_link=your_invite_link_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.edit_chat_subscription_invite_link(\n    chat_id=your_chat_id_here,\n    invite_link=your_invite_link_here,\n    name=your_name_here\n)\n</code></pre>"},{"location":"methods/edit_forum_topic/","title":"\ud83d\udd27 edit_forum_topic","text":"<p>Use this method to edit name and icon of a topic in a forum supergroup chat. The bot must be an</p>"},{"location":"methods/edit_forum_topic/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>message_thread_id</code> (<code>int</code> ): Identifier of the topic to edit</li> <li><code>name</code> (<code>str</code> ) (<code>optional</code>): Optional, New name of the topic, 1-128 characters. If not specififed or empty, the current name of the topic will be kept</li> <li><code>icon_custom_emoji_id</code> (<code>str</code> ) (<code>optional</code>): Optional, New unique identifier of the custom emoji shown as the topic icon. Use getForumTopicIconStickers to get all allowed custom emoji identifiers. Pass an empty string to remove the icon. If not specified, the current icon will be kept</li> </ul>"},{"location":"methods/edit_forum_topic/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/edit_forum_topic/#bool","title":"<code>bool</code>","text":""},{"location":"methods/edit_forum_topic/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.edit_forum_topic(\n    chat_id=your_chat_id_here,\n    message_thread_id=your_message_thread_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.edit_forum_topic(\n    chat_id=your_chat_id_here,\n    message_thread_id=your_message_thread_id_here,\n    name=your_name_here,\n    icon_custom_emoji_id=your_icon_custom_emoji_id_here\n)\n</code></pre>"},{"location":"methods/edit_general_forum_topic/","title":"\ud83d\udd27 edit_general_forum_topic","text":"<p>Use this method to edit the name of the 'General' topic in a forum supergroup chat.</p>"},{"location":"methods/edit_general_forum_topic/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>name</code> (<code>str</code> ): New topic name, 1-128 characters</li> </ul>"},{"location":"methods/edit_general_forum_topic/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/edit_general_forum_topic/#bool","title":"<code>bool</code>","text":""},{"location":"methods/edit_general_forum_topic/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.edit_general_forum_topic(\n    chat_id=your_chat_id_here,\n    name=your_name_here\n)\n</code></pre>"},{"location":"methods/edit_message_caption/","title":"\ud83d\udd27 edit_message_caption","text":"<p>Use this method to edit captions of messages.</p>"},{"location":"methods/edit_message_caption/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>)</li> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ) (<code>optional</code>)</li> <li><code>message_id</code> (<code>int</code> ) (<code>optional</code>)</li> <li><code>inline_message_id</code> (<code>str</code> ) (<code>optional</code>)</li> <li><code>caption</code> (<code>str</code> ) (<code>optional</code>)</li> <li><code>parse_mode</code> (<code>Literal</code> ) (<code>optional</code>)</li> <li><code>caption_entities</code> (List of MessageEntity ) (<code>optional</code>)</li> <li><code>show_caption_above_media</code> (<code>bool</code> ) (<code>optional</code>)</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ) (<code>optional</code>)</li> </ul>"},{"location":"methods/edit_message_caption/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/edit_message_caption/#message-or-bool","title":"Message or <code>bool</code>","text":""},{"location":"methods/edit_message_caption/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.edit_message_caption(\n    business_connection_id=your_business_connection_id_here,\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here,\n    inline_message_id=your_inline_message_id_here,\n    caption=your_caption_here,\n    parse_mode=your_parse_mode_here,\n    caption_entities=your_caption_entities_here,\n    show_caption_above_media=your_show_caption_above_media_here,\n    reply_markup=your_reply_markup_here\n)\n</code></pre>"},{"location":"methods/edit_message_checklist/","title":"\ud83d\udd27 edit_message_checklist","text":"<p>Use this method to edit a checklist on behalf of a connected business account.</p>"},{"location":"methods/edit_message_checklist/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection on behalf of which the message will be sent</li> <li><code>chat_id</code> (<code>int</code> ): Unique identifier for the target chat</li> <li><code>message_id</code> (<code>int</code> ): Unique identifier for the target message</li> <li><code>checklist</code> (InputChecklist ): A JSON-serialized object for the new checklist</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ) (<code>optional</code>): A JSON-serialized object for the new inline keyboard for the message</li> </ul>"},{"location":"methods/edit_message_checklist/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/edit_message_checklist/#message","title":"Message","text":""},{"location":"methods/edit_message_checklist/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.edit_message_checklist(\n    business_connection_id=your_business_connection_id_here,\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here,\n    checklist=your_checklist_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.edit_message_checklist(\n    business_connection_id=your_business_connection_id_here,\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here,\n    checklist=your_checklist_here,\n    reply_markup=your_reply_markup_here\n)\n</code></pre>"},{"location":"methods/edit_message_live_location/","title":"\ud83d\udd27 edit_message_live_location","text":"<p>Use this method to edit live location messages.</p>"},{"location":"methods/edit_message_live_location/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>latitude</code> (<code>float</code> )</li> <li><code>longitude</code> (<code>float</code> )</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>)</li> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ) (<code>optional</code>)</li> <li><code>message_id</code> (<code>int</code> ) (<code>optional</code>)</li> <li><code>inline_message_id</code> (<code>str</code> ) (<code>optional</code>)</li> <li><code>live_period</code> (<code>int</code> ) (<code>optional</code>)</li> <li><code>horizontal_accuracy</code> (<code>float</code> ) (<code>optional</code>)</li> <li><code>heading</code> (<code>int</code> ) (<code>optional</code>)</li> <li><code>proximity_alert_radius</code> (<code>int</code> ) (<code>optional</code>)</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ) (<code>optional</code>)</li> </ul>"},{"location":"methods/edit_message_live_location/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/edit_message_live_location/#message-or-bool","title":"Message or <code>bool</code>","text":""},{"location":"methods/edit_message_live_location/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.edit_message_live_location(\n    latitude=your_latitude_here,\n    longitude=your_longitude_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.edit_message_live_location(\n    latitude=your_latitude_here,\n    longitude=your_longitude_here,\n    business_connection_id=your_business_connection_id_here,\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here,\n    inline_message_id=your_inline_message_id_here,\n    live_period=your_live_period_here,\n    horizontal_accuracy=your_horizontal_accuracy_here,\n    heading=your_heading_here,\n    proximity_alert_radius=your_proximity_alert_radius_here,\n    reply_markup=your_reply_markup_here\n)\n</code></pre>"},{"location":"methods/edit_message_media/","title":"\ud83d\udd27 edit_message_media","text":"<p>Use this method to edit animation, audio, document, photo, or video messages, or to add media to text messages.</p>"},{"location":"methods/edit_message_media/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>media</code> (InputMediaAudio or InputMediaDocument or InputMediaPhoto or InputMediaVideo )</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>)</li> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ) (<code>optional</code>)</li> <li><code>message_id</code> (<code>int</code> ) (<code>optional</code>)</li> <li><code>inline_message_id</code> (<code>str</code> ) (<code>optional</code>)</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ) (<code>optional</code>)</li> </ul>"},{"location":"methods/edit_message_media/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/edit_message_media/#message-or-bool","title":"Message or <code>bool</code>","text":""},{"location":"methods/edit_message_media/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.edit_message_media(\n    media=your_media_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.edit_message_media(\n    media=your_media_here,\n    business_connection_id=your_business_connection_id_here,\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here,\n    inline_message_id=your_inline_message_id_here,\n    reply_markup=your_reply_markup_here\n)\n</code></pre>"},{"location":"methods/edit_message_reply_markup/","title":"\ud83d\udd27 edit_message_reply_markup","text":"<p>Use this method to edit only the reply markup of messages.</p>"},{"location":"methods/edit_message_reply_markup/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>)</li> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ) (<code>optional</code>)</li> <li><code>message_id</code> (<code>int</code> ) (<code>optional</code>)</li> <li><code>inline_message_id</code> (<code>str</code> ) (<code>optional</code>)</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ) (<code>optional</code>)</li> </ul>"},{"location":"methods/edit_message_reply_markup/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/edit_message_reply_markup/#message-or-bool","title":"Message or <code>bool</code>","text":""},{"location":"methods/edit_message_reply_markup/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.edit_message_reply_markup(\n    business_connection_id=your_business_connection_id_here,\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here,\n    inline_message_id=your_inline_message_id_here,\n    reply_markup=your_reply_markup_here\n)\n</code></pre>"},{"location":"methods/edit_message_text/","title":"\ud83d\udd27 edit_message_text","text":"<p>Use this method to edit text and game messages.</p>"},{"location":"methods/edit_message_text/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>text</code> (<code>str</code> )</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>)</li> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ) (<code>optional</code>)</li> <li><code>message_id</code> (<code>int</code> ) (<code>optional</code>)</li> <li><code>inline_message_id</code> (<code>str</code> ) (<code>optional</code>)</li> <li><code>parse_mode</code> (<code>Literal</code> ) (<code>optional</code>)</li> <li><code>entities</code> (List of MessageEntity ) (<code>optional</code>)</li> <li><code>link_preview_options</code> (LinkPreviewOptions ) (<code>optional</code>)</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ) (<code>optional</code>)</li> </ul>"},{"location":"methods/edit_message_text/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/edit_message_text/#message-or-bool","title":"Message or <code>bool</code>","text":""},{"location":"methods/edit_message_text/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.edit_message_text(\n    text=your_text_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.edit_message_text(\n    text=your_text_here,\n    business_connection_id=your_business_connection_id_here,\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here,\n    inline_message_id=your_inline_message_id_here,\n    parse_mode=your_parse_mode_here,\n    entities=your_entities_here,\n    link_preview_options=your_link_preview_options_here,\n    reply_markup=your_reply_markup_here\n)\n</code></pre>"},{"location":"methods/edit_story/","title":"\ud83d\udd27 edit_story","text":"<p>Edits a story previously posted by the bot on behalf of a managed business account.</p>"},{"location":"methods/edit_story/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection</li> <li><code>story_id</code> (<code>int</code> ): Unique identifier of the story to edit</li> <li><code>content</code> (InputStoryContentPhoto or InputStoryContentVideo ): Content of the story</li> <li><code>caption</code> (<code>str</code> ) (<code>optional</code>): Caption of the story, 0-2048 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ) (<code>optional</code>): Mode for parsing entities in the story caption</li> <li><code>caption_entities</code> (List of MessageEntity ) (<code>optional</code>): A JSON-serialized list of special entities that appear in the caption</li> <li><code>areas</code> (List of StoryArea ) (<code>optional</code>): A JSON-serialized list of clickable areas to be shown on the story</li> </ul>"},{"location":"methods/edit_story/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/edit_story/#story","title":"Story","text":""},{"location":"methods/edit_story/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.edit_story(\n    business_connection_id=your_business_connection_id_here,\n    story_id=your_story_id_here,\n    content=your_content_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.edit_story(\n    business_connection_id=your_business_connection_id_here,\n    story_id=your_story_id_here,\n    content=your_content_here,\n    caption=your_caption_here,\n    parse_mode=your_parse_mode_here,\n    caption_entities=your_caption_entities_here,\n    areas=your_areas_here\n)\n</code></pre>"},{"location":"methods/edit_user_star_subscription/","title":"\ud83d\udd27 edit_user_star_subscription","text":"<p>Allows the bot to cancel or re-enable extension of a subscription paid in Telegram Stars. Returns True on success.</p>"},{"location":"methods/edit_user_star_subscription/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>user_id</code> (<code>int</code> )</li> <li><code>telegram_payment_charge_id</code> (<code>str</code> )</li> <li><code>is_canceled</code> (<code>bool</code> )</li> </ul>"},{"location":"methods/edit_user_star_subscription/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/edit_user_star_subscription/#bool","title":"<code>bool</code>","text":""},{"location":"methods/edit_user_star_subscription/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.edit_user_star_subscription(\n    user_id=your_user_id_here,\n    telegram_payment_charge_id=your_telegram_payment_charge_id_here,\n    is_canceled=your_is_canceled_here\n)\n</code></pre>"},{"location":"methods/export_chat_invite_link/","title":"\ud83d\udd27 export_chat_invite_link","text":"<p>Use this method to export an invite link to a supergroup or a channel. The bot must be an administrator</p>"},{"location":"methods/export_chat_invite_link/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Id: Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> </ul>"},{"location":"methods/export_chat_invite_link/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/export_chat_invite_link/#str","title":"<code>str</code>","text":""},{"location":"methods/export_chat_invite_link/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.export_chat_invite_link(\n    chat_id=your_chat_id_here\n)\n</code></pre>"},{"location":"methods/forward_message/","title":"\ud83d\udd27 forward_message","text":"<p>Use this method to forward messages of any kind.</p>"},{"location":"methods/forward_message/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>from_chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the chat where the original message was sent (or channel username in the format @channelusername)</li> <li><code>message_id</code> (<code>int</code> ): Message identifier in the chat specified in from_chat_id</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): Unique identifier for the target message thread (topic) of the forum; for forum supergroups only</li> <li><code>video_start_timestamp</code> (<code>int</code> ) (<code>optional</code>): New start timestamp for the forwarded video in the message</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the forwarded message from forwarding and saving</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> <li><code>suggested_post_parameters</code> (SuggestedPostParameters ) (<code>optional</code>): A JSON-serialized object containing the parameters of the suggested post to send; for direct messages chats only. If the message is sent as a reply to another suggested post, then that suggested post is automatically declined.</li> </ul>"},{"location":"methods/forward_message/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/forward_message/#message","title":"Message","text":""},{"location":"methods/forward_message/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.forward_message(\n    chat_id=your_chat_id_here,\n    from_chat_id=your_from_chat_id_here,\n    message_id=your_message_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.forward_message(\n    chat_id=your_chat_id_here,\n    from_chat_id=your_from_chat_id_here,\n    message_id=your_message_id_here,\n    message_thread_id=your_message_thread_id_here,\n    video_start_timestamp=your_video_start_timestamp_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here,\n    suggested_post_parameters=your_suggested_post_parameters_here\n)\n</code></pre>"},{"location":"methods/forward_messages/","title":"\ud83d\udd27 forward_messages","text":"<p>Use this method to forward multiple messages of any kind. If some of the specified messages can't be found or forwarded,</p>"},{"location":"methods/forward_messages/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>from_chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the chat where the original message was sent (or channel username in the format @channelusername)</li> <li><code>message_ids</code> (List of <code>int</code> ): Message identifiers in the chat specified in from_chat_id</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of a message thread, in which the messages will be sent</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the forwarded message from forwarding and saving</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> </ul>"},{"location":"methods/forward_messages/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/forward_messages/#list-of-messageid","title":"List of MessageId","text":""},{"location":"methods/forward_messages/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.forward_messages(\n    chat_id=your_chat_id_here,\n    from_chat_id=your_from_chat_id_here,\n    message_ids=your_message_ids_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.forward_messages(\n    chat_id=your_chat_id_here,\n    from_chat_id=your_from_chat_id_here,\n    message_ids=your_message_ids_here,\n    message_thread_id=your_message_thread_id_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here\n)\n</code></pre>"},{"location":"methods/get_available_gifts/","title":"\ud83d\udd27 get_available_gifts","text":"<p>Returns the list of gifts that can be sent by the bot to users. Requires no parameters. Returns a Gifts object.</p>"},{"location":"methods/get_available_gifts/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_available_gifts/#gifts","title":"Gifts","text":""},{"location":"methods/get_available_gifts/#examples","title":"\ud83d\udcc0 Examples","text":""},{"location":"methods/get_business_account_gifts/","title":"\ud83d\udd27 get_business_account_gifts","text":"<p>Use this method to get the gifts received and owned by a managed business account.</p>"},{"location":"methods/get_business_account_gifts/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection</li> <li><code>exclude_unsaved</code> (<code>bool</code> ) (<code>optional</code>): Exclude gifts that aren't saved to the account's profile page</li> <li><code>exclude_saved</code> (<code>bool</code> ) (<code>optional</code>): Exclude gifts that are saved to the account's profile page</li> <li><code>exclude_unlimited</code> (<code>bool</code> ) (<code>optional</code>): Exclude gifts that can be purchased an unlimited number of times</li> <li><code>exclude_limited</code> (<code>bool</code> ) (<code>optional</code>): Exclude gifts that can be purchased a limited number of times</li> <li><code>exclude_unique</code> (<code>bool</code> ) (<code>optional</code>): Exclude unique gifts</li> <li><code>sort_by_price</code> (<code>bool</code> ) (<code>optional</code>): Sort results by gift price instead of send date</li> <li><code>offset</code> (<code>str</code> ) (<code>optional</code>): Offset of the first entry to return; use empty string for first chunk</li> <li><code>limit</code> (<code>int</code> ) (<code>optional</code>): Maximum number of gifts to return; 1-100, defaults to 100</li> </ul>"},{"location":"methods/get_business_account_gifts/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_business_account_gifts/#ownedgifts","title":"OwnedGifts","text":""},{"location":"methods/get_business_account_gifts/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.get_business_account_gifts(\n    business_connection_id=your_business_connection_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.get_business_account_gifts(\n    business_connection_id=your_business_connection_id_here,\n    exclude_unsaved=your_exclude_unsaved_here,\n    exclude_saved=your_exclude_saved_here,\n    exclude_unlimited=your_exclude_unlimited_here,\n    exclude_limited=your_exclude_limited_here,\n    exclude_unique=your_exclude_unique_here,\n    sort_by_price=your_sort_by_price_here,\n    offset=your_offset_here,\n    limit=your_limit_here\n)\n</code></pre>"},{"location":"methods/get_business_account_star_balance/","title":"\ud83d\udd27 get_business_account_star_balance","text":"<p>Returns the amount of Telegram Stars owned by a managed business account.</p>"},{"location":"methods/get_business_account_star_balance/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection</li> </ul>"},{"location":"methods/get_business_account_star_balance/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_business_account_star_balance/#staramount","title":"StarAmount","text":""},{"location":"methods/get_business_account_star_balance/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.get_business_account_star_balance(\n    business_connection_id=your_business_connection_id_here\n)\n</code></pre>"},{"location":"methods/get_business_connection/","title":"\ud83d\udd27 get_business_connection","text":"<p>Use this method to get information about the connection of the bot with a business account.</p>"},{"location":"methods/get_business_connection/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection</li> </ul>"},{"location":"methods/get_business_connection/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_business_connection/#businessconnection","title":"BusinessConnection","text":""},{"location":"methods/get_business_connection/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.get_business_connection(\n    business_connection_id=your_business_connection_id_here\n)\n</code></pre>"},{"location":"methods/get_chat/","title":"\ud83d\udd27 get_chat","text":"<p>Use this method to get up to date information about the chat (current name of the user for one-on-one</p>"},{"location":"methods/get_chat/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)</li> </ul>"},{"location":"methods/get_chat/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_chat/#chatfullinfo","title":"ChatFullInfo","text":""},{"location":"methods/get_chat/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.get_chat(\n    chat_id=your_chat_id_here\n)\n</code></pre>"},{"location":"methods/get_chat_administrators/","title":"\ud83d\udd27 get_chat_administrators","text":""},{"location":"methods/get_chat_administrators/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> )</li> </ul>"},{"location":"methods/get_chat_administrators/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_chat_administrators/#list-of-chatmemberadministrator-or-chatmemberowner","title":"List of ChatMemberAdministrator or ChatMemberOwner","text":""},{"location":"methods/get_chat_administrators/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.get_chat_administrators(\n    chat_id=your_chat_id_here\n)\n</code></pre>"},{"location":"methods/get_chat_member/","title":"\ud83d\udd27 get_chat_member","text":""},{"location":"methods/get_chat_member/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> )</li> <li><code>user_id</code> (<code>int</code> )</li> </ul>"},{"location":"methods/get_chat_member/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_chat_member/#chatmemberowner-or-chatmemberadministrator-or-chatmembermember-or-chatmemberrestricted-or-chatmemberbanned-or-chatmemberleft","title":"ChatMemberOwner or ChatMemberAdministrator or ChatMemberMember or ChatMemberRestricted or ChatMemberBanned or ChatMemberLeft","text":""},{"location":"methods/get_chat_member/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.get_chat_member(\n    chat_id=your_chat_id_here,\n    user_id=your_user_id_here\n)\n</code></pre>"},{"location":"methods/get_chat_member_count/","title":"\ud83d\udd27 get_chat_member_count","text":"<p>Use this method to get the number of members in a chat.</p>"},{"location":"methods/get_chat_member_count/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)</li> </ul>"},{"location":"methods/get_chat_member_count/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_chat_member_count/#int","title":"<code>int</code>","text":""},{"location":"methods/get_chat_member_count/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.get_chat_member_count(\n    chat_id=your_chat_id_here\n)\n</code></pre>"},{"location":"methods/get_chat_menu_button/","title":"\ud83d\udd27 get_chat_menu_button","text":"<p>Use this method to get the current value of the bot's menu button</p>"},{"location":"methods/get_chat_menu_button/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> ) (<code>optional</code>): Unique identifier for the target private chat. If not specified, default bot's menu button will be returned.</li> </ul>"},{"location":"methods/get_chat_menu_button/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_chat_menu_button/#menubutton","title":"MenuButton","text":""},{"location":"methods/get_chat_menu_button/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.get_chat_menu_button(\n    chat_id=your_chat_id_here\n)\n</code></pre>"},{"location":"methods/get_custom_emoji_stickers/","title":"\ud83d\udd27 get_custom_emoji_stickers","text":"<p>Use this method to get information about custom emoji stickers by their identifiers.</p>"},{"location":"methods/get_custom_emoji_stickers/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>custom_emoji_ids</code> (List of <code>str</code> ): List of custom emoji identifiers. At most 200 custom emoji identifiers can be specified.</li> </ul>"},{"location":"methods/get_custom_emoji_stickers/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_custom_emoji_stickers/#list-of-sticker","title":"List of Sticker","text":""},{"location":"methods/get_custom_emoji_stickers/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.get_custom_emoji_stickers(\n    custom_emoji_ids=your_custom_emoji_ids_here\n)\n</code></pre>"},{"location":"methods/get_file/","title":"\ud83d\udd27 get_file","text":"<p>Use this method to get basic info about a file and prepare it for downloading.</p>"},{"location":"methods/get_file/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>file_id</code> (<code>str</code> ): File identifier</li> </ul>"},{"location":"methods/get_file/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_file/#file","title":"File","text":""},{"location":"methods/get_file/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.get_file(\n    file_id=your_file_id_here\n)\n</code></pre>"},{"location":"methods/get_file_url/","title":"\ud83d\udd27 get_file_url","text":"<p>Get a valid URL for downloading a file.</p>"},{"location":"methods/get_file_url/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>file_id</code> (<code>str</code> ): File identifier to get download URL for.</li> </ul>"},{"location":"methods/get_file_url/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_file_url/#str","title":"<code>str</code>","text":""},{"location":"methods/get_file_url/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.get_file_url(\n    file_id=your_file_id_here\n)\n</code></pre>"},{"location":"methods/get_forum_topic_icon_stickers/","title":"\ud83d\udd27 get_forum_topic_icon_stickers","text":"<p>Use this method to get custom emoji stickers, which can be used as a forum topic icon by any user.</p>"},{"location":"methods/get_forum_topic_icon_stickers/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_forum_topic_icon_stickers/#list-of-sticker","title":"List of Sticker","text":""},{"location":"methods/get_forum_topic_icon_stickers/#examples","title":"\ud83d\udcc0 Examples","text":""},{"location":"methods/get_game_high_scores/","title":"\ud83d\udd27 get_game_high_scores","text":"<p>Use this method to get data for high score tables. Will return the score of the specified user and several of</p>"},{"location":"methods/get_game_high_scores/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>user_id</code> (<code>int</code> ): User identifier</li> <li><code>chat_id</code> (<code>int</code> ) (<code>optional</code>): Required if inline_message_id is not specified. Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>message_id</code> (<code>int</code> ) (<code>optional</code>): Required if inline_message_id is not specified. Identifier of the sent message</li> <li><code>inline_message_id</code> (<code>str</code> ) (<code>optional</code>): Required if chat_id and message_id are not specified. Identifier of the inline message</li> </ul>"},{"location":"methods/get_game_high_scores/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_game_high_scores/#list-of-gamehighscore","title":"List of GameHighScore","text":""},{"location":"methods/get_game_high_scores/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.get_game_high_scores(\n    user_id=your_user_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.get_game_high_scores(\n    user_id=your_user_id_here,\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here,\n    inline_message_id=your_inline_message_id_here\n)\n</code></pre>"},{"location":"methods/get_me/","title":"\ud83d\udd27 get_me","text":"<p>Returns basic information about the bot in form of a User object.</p>"},{"location":"methods/get_me/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_me/#user","title":"User","text":""},{"location":"methods/get_me/#examples","title":"\ud83d\udcc0 Examples","text":""},{"location":"methods/get_my_commands/","title":"\ud83d\udd27 get_my_commands","text":"<p>Use this method to get the current list of the bot's commands.</p>"},{"location":"methods/get_my_commands/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>scope</code> (BotCommandScope ) (<code>optional</code>): The scope of users for which the commands are relevant. Defaults to BotCommandScopeDefault.</li> <li><code>language_code</code> (<code>str</code> ) (<code>optional</code>): A two-letter ISO 639-1 language code. If empty, commands will be applied to all users from the given scope, for whose language there are no dedicated commands</li> </ul>"},{"location":"methods/get_my_commands/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_my_commands/#list-of-botcommand","title":"List of BotCommand","text":""},{"location":"methods/get_my_commands/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.get_my_commands(\n    scope=your_scope_here,\n    language_code=your_language_code_here\n)\n</code></pre>"},{"location":"methods/get_my_default_administrator_rights/","title":"\ud83d\udd27 get_my_default_administrator_rights","text":"<p>Use this method to get the current default administrator rights of the bot.</p>"},{"location":"methods/get_my_default_administrator_rights/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>for_channels</code> (<code>bool</code> ) (<code>optional</code>): Pass True to get the default administrator rights of the bot in channels. Otherwise, the default administrator rights of the bot for groups and supergroups will be returned.</li> </ul>"},{"location":"methods/get_my_default_administrator_rights/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_my_default_administrator_rights/#chatadministratorrights","title":"ChatAdministratorRights","text":""},{"location":"methods/get_my_default_administrator_rights/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.get_my_default_administrator_rights(\n    for_channels=your_for_channels_here\n)\n</code></pre>"},{"location":"methods/get_my_description/","title":"\ud83d\udd27 get_my_description","text":"<p>Use this method to get the current bot description for the given user language.</p>"},{"location":"methods/get_my_description/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>language_code</code> (<code>str</code> ) (<code>optional</code>): A two-letter ISO 639-1 language code or an empty string</li> </ul>"},{"location":"methods/get_my_description/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_my_description/#botdescription","title":"BotDescription","text":""},{"location":"methods/get_my_description/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.get_my_description(\n    language_code=your_language_code_here\n)\n</code></pre>"},{"location":"methods/get_my_name/","title":"\ud83d\udd27 get_my_name","text":"<p>Use this method to get the current bot name for the given user language.</p>"},{"location":"methods/get_my_name/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>language_code</code> (<code>str</code> ) (<code>optional</code>): Optional. A two-letter ISO 639-1 language code or an empty string</li> </ul>"},{"location":"methods/get_my_name/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_my_name/#botname","title":"BotName","text":""},{"location":"methods/get_my_name/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.get_my_name(\n    language_code=your_language_code_here\n)\n</code></pre>"},{"location":"methods/get_my_short_description/","title":"\ud83d\udd27 get_my_short_description","text":"<p>Use this method to get the current bot short description for the given user language.</p>"},{"location":"methods/get_my_short_description/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>language_code</code> (<code>str</code> ) (<code>optional</code>): A two-letter ISO 639-1 language code or an empty string</li> </ul>"},{"location":"methods/get_my_short_description/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_my_short_description/#botshortdescription","title":"BotShortDescription","text":""},{"location":"methods/get_my_short_description/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.get_my_short_description(\n    language_code=your_language_code_here\n)\n</code></pre>"},{"location":"methods/get_my_star_balance/","title":"\ud83d\udd27 get_my_star_balance","text":"<p>Use this method to get the current Telegram Stars balance of the bot.</p>"},{"location":"methods/get_my_star_balance/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_my_star_balance/#staramount","title":"StarAmount","text":""},{"location":"methods/get_my_star_balance/#examples","title":"\ud83d\udcc0 Examples","text":""},{"location":"methods/get_star_transactions/","title":"\ud83d\udd27 get_star_transactions","text":"<p>Returns the bot's Telegram Star transactions in chronological order.</p>"},{"location":"methods/get_star_transactions/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>offset</code> (<code>int</code> ) (<code>optional</code>): Number of transactions to skip in the response</li> <li><code>limit</code> (<code>int</code> ) (<code>optional</code>): The maximum number of transactions to be retrieved. Values between 1-100 are accepted. Defaults to 100.</li> </ul>"},{"location":"methods/get_star_transactions/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_star_transactions/#startransactions","title":"StarTransactions","text":""},{"location":"methods/get_star_transactions/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.get_star_transactions(\n    offset=your_offset_here,\n    limit=your_limit_here\n)\n</code></pre>"},{"location":"methods/get_sticker_set/","title":"\ud83d\udd27 get_sticker_set","text":"<p>Use this method to get a sticker set. On success, a StickerSet object is returned.</p>"},{"location":"methods/get_sticker_set/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>name</code> (<code>str</code> ): Sticker set name</li> </ul>"},{"location":"methods/get_sticker_set/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_sticker_set/#stickerset","title":"StickerSet","text":""},{"location":"methods/get_sticker_set/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.get_sticker_set(\n    name=your_name_here\n)\n</code></pre>"},{"location":"methods/get_updates/","title":"\ud83d\udd27 get_updates","text":"<p>Use this method to receive incoming updates using long polling (wiki). An Array of Update objects is returned.</p>"},{"location":"methods/get_updates/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>offset</code> (<code>int</code> ) (<code>optional</code>): Identifier of the first update to be returned. Must be greater by one than the highest among the identifiers of previously received updates. By default, updates starting with the earliest unconfirmed update are returned. An update is considered confirmed as soon as getUpdates is called with an offset higher than its update_id. The negative offset can be specified to retrieve updates starting from -offset update from the end of the updates queue. All previous updates will forgotten.</li> <li><code>limit</code> (<code>int</code> ) (<code>optional</code>): Limits the number of updates to be retrieved. Values between 1-100 are accepted. Defaults to 100.</li> <li><code>timeout</code> (<code>int</code> ) (<code>optional</code>): Request connection timeout</li> <li><code>allowed_updates</code> (List of <code>str</code> ) (<code>optional</code>): Array of string. List the types of updates you want your bot to receive.</li> </ul>"},{"location":"methods/get_updates/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_updates/#list-of-update","title":"List of Update","text":""},{"location":"methods/get_updates/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.get_updates(\n    offset=your_offset_here,\n    limit=your_limit_here,\n    timeout=your_timeout_here,\n    allowed_updates=your_allowed_updates_here\n)\n</code></pre>"},{"location":"methods/get_user_chat_boosts/","title":"\ud83d\udd27 get_user_chat_boosts","text":"<p>Use this method to get the list of boosts added to a chat by a user. Requires administrator rights in the chat. Returns a UserChatBoosts object.</p>"},{"location":"methods/get_user_chat_boosts/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel</li> <li><code>user_id</code> (<code>int</code> ): Unique identifier of the target user</li> </ul>"},{"location":"methods/get_user_chat_boosts/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_user_chat_boosts/#userchatboosts","title":"UserChatBoosts","text":""},{"location":"methods/get_user_chat_boosts/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.get_user_chat_boosts(\n    chat_id=your_chat_id_here,\n    user_id=your_user_id_here\n)\n</code></pre>"},{"location":"methods/get_user_profile_photos/","title":"\ud83d\udd27 get_user_profile_photos","text":"<p>Use this method to get a list of profile pictures for a user.</p>"},{"location":"methods/get_user_profile_photos/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>user_id</code> (<code>int</code> ): Unique identifier of the target user</li> <li><code>offset</code> (<code>int</code> ) (<code>optional</code>): Sequential number of the first photo to be returned. By default, all photos are returned.</li> <li><code>limit</code> (<code>int</code> ) (<code>optional</code>): Limits the number of photos to be retrieved. Values between 1-100 are accepted. Defaults to 100.</li> </ul>"},{"location":"methods/get_user_profile_photos/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_user_profile_photos/#userprofilephotos","title":"UserProfilePhotos","text":""},{"location":"methods/get_user_profile_photos/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.get_user_profile_photos(\n    user_id=your_user_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.get_user_profile_photos(\n    user_id=your_user_id_here,\n    offset=your_offset_here,\n    limit=your_limit_here\n)\n</code></pre>"},{"location":"methods/get_webhook_info/","title":"\ud83d\udd27 get_webhook_info","text":"<p>Use this method to get current webhook status. Requires no parameters.</p>"},{"location":"methods/get_webhook_info/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/get_webhook_info/#webhookinfo","title":"WebhookInfo","text":""},{"location":"methods/get_webhook_info/#examples","title":"\ud83d\udcc0 Examples","text":""},{"location":"methods/gift_premium_subscription/","title":"\ud83d\udd27 gift_premium_subscription","text":"<p>Gifts a Telegram Premium subscription to the given user.</p>"},{"location":"methods/gift_premium_subscription/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>user_id</code> (<code>int</code> ): Unique identifier of the target user who will receive a Telegram Premium subscription</li> <li><code>month_count</code> (<code>int</code> ): Number of months the Telegram Premium subscription will be active for the user; must be one of 3, 6, or 12</li> <li><code>star_count</code> (<code>int</code> ): Number of Telegram Stars to pay for the Telegram Premium subscription; must be 1000 for 3 months, 1500 for 6 months, and 2500 for 12 months</li> <li><code>text</code> (<code>str</code> ) (<code>optional</code>): Text that will be shown along with the service message about the subscription; 0-128 characters</li> <li><code>text_parse_mode</code> (<code>str</code> ) (<code>optional</code>): Mode for parsing entities in the text</li> <li><code>text_entities</code> (List of MessageEntity ) (<code>optional</code>): A JSON-serialized list of special entities that appear in the gift text</li> </ul>"},{"location":"methods/gift_premium_subscription/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/gift_premium_subscription/#bool","title":"<code>bool</code>","text":""},{"location":"methods/gift_premium_subscription/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.gift_premium_subscription(\n    user_id=your_user_id_here,\n    month_count=your_month_count_here,\n    star_count=your_star_count_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.gift_premium_subscription(\n    user_id=your_user_id_here,\n    month_count=your_month_count_here,\n    star_count=your_star_count_here,\n    text=your_text_here,\n    text_parse_mode=your_text_parse_mode_here,\n    text_entities=your_text_entities_here\n)\n</code></pre>"},{"location":"methods/hide_general_forum_topic/","title":"\ud83d\udd27 hide_general_forum_topic","text":"<p>Use this method to hide the 'General' topic in a forum supergroup chat.</p>"},{"location":"methods/hide_general_forum_topic/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> </ul>"},{"location":"methods/hide_general_forum_topic/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/hide_general_forum_topic/#bool","title":"<code>bool</code>","text":""},{"location":"methods/hide_general_forum_topic/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.hide_general_forum_topic(\n    chat_id=your_chat_id_here\n)\n</code></pre>"},{"location":"methods/leave_chat/","title":"\ud83d\udd27 leave_chat","text":"<p>Use this method for your bot to leave a group, supergroup or channel. Returns True on success.</p>"},{"location":"methods/leave_chat/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)</li> </ul>"},{"location":"methods/leave_chat/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/leave_chat/#bool","title":"<code>bool</code>","text":""},{"location":"methods/leave_chat/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.leave_chat(\n    chat_id=your_chat_id_here\n)\n</code></pre>"},{"location":"methods/log_out/","title":"\ud83d\udd27 log_out","text":"<p>Use this method to log out from the cloud Bot API server before launching the bot locally.</p>"},{"location":"methods/log_out/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/log_out/#bool","title":"<code>bool</code>","text":""},{"location":"methods/log_out/#examples","title":"\ud83d\udcc0 Examples","text":""},{"location":"methods/pin_chat_message/","title":"\ud83d\udd27 pin_chat_message","text":"<p>Use this method to pin a message in a supergroup.</p>"},{"location":"methods/pin_chat_message/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>message_id</code> (<code>int</code> ): Identifier of a message to pin</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if it is not necessary to send a notification to all group members about the new pinned message</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier of the business connection on behalf of which the message will be pinned</li> </ul>"},{"location":"methods/pin_chat_message/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/pin_chat_message/#bool","title":"<code>bool</code>","text":""},{"location":"methods/pin_chat_message/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.pin_chat_message(\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.pin_chat_message(\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here,\n    disable_notification=your_disable_notification_here,\n    business_connection_id=your_business_connection_id_here\n)\n</code></pre>"},{"location":"methods/post_story/","title":"\ud83d\udd27 post_story","text":"<p>Posts a story on behalf of a managed business account.</p>"},{"location":"methods/post_story/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection</li> <li><code>content</code> (InputStoryContentPhoto or InputStoryContentVideo ): Content of the story</li> <li><code>active_period</code> (<code>int</code> ): Period after which the story is moved to the archive, in seconds; must be one of 6 * 3600, 12 * 3600, 86400, or 2 * 86400</li> <li><code>caption</code> (<code>str</code> ) (<code>optional</code>): Caption of the story, 0-2048 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ) (<code>optional</code>): Mode for parsing entities in the story caption</li> <li><code>caption_entities</code> (List of MessageEntity ) (<code>optional</code>): A JSON-serialized list of special entities that appear in the caption</li> <li><code>areas</code> (List of StoryArea ) (<code>optional</code>): A JSON-serialized list of clickable areas to be shown on the story</li> <li><code>post_to_chat_page</code> (<code>bool</code> ) (<code>optional</code>): Pass True to keep the story accessible after it expires</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Pass True if the content of the story must be protected from forwarding and screenshotting</li> </ul>"},{"location":"methods/post_story/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/post_story/#story","title":"Story","text":""},{"location":"methods/post_story/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.post_story(\n    business_connection_id=your_business_connection_id_here,\n    content=your_content_here,\n    active_period=your_active_period_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.post_story(\n    business_connection_id=your_business_connection_id_here,\n    content=your_content_here,\n    active_period=your_active_period_here,\n    caption=your_caption_here,\n    parse_mode=your_parse_mode_here,\n    caption_entities=your_caption_entities_here,\n    areas=your_areas_here,\n    post_to_chat_page=your_post_to_chat_page_here,\n    protect_content=your_protect_content_here\n)\n</code></pre>"},{"location":"methods/promote_chat_member/","title":"\ud83d\udd27 promote_chat_member","text":"<p>Use this method to promote or demote a user in a supergroup or a channel. The bot must be an administrator</p>"},{"location":"methods/promote_chat_member/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel ( in the format @channelusername)</li> <li><code>user_id</code> (<code>int</code> ): Unique identifier of the target user</li> <li><code>is_anonymous</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the administrator's presence in the chat is hidden</li> <li><code>can_manage_chat</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the administrator can access the chat event log, chat statistics, message statistics in channels, see channel members, see anonymous administrators in supergroups and ignore slow mode. Implied by any other administrator privilege</li> <li><code>can_delete_messages</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the administrator can delete messages of other users</li> <li><code>can_manage_video_chats</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the administrator can manage voice chats For now, bots can use this privilege only for passing to other administrators.</li> <li><code>can_restrict_members</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the administrator can restrict, ban or unban chat members</li> <li><code>can_promote_members</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the administrator can add new administrators with a subset of his own privileges or demote administrators that he has promoted, directly or indirectly (promoted by administrators that were appointed by him)</li> <li><code>can_change_info</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the administrator can change chat title, photo and other settings</li> <li><code>can_invite_users</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the administrator can invite new users to the chat</li> <li><code>can_post_stories</code> (<code>bool</code> ) (<code>optional</code>): Pass True if the administrator can create the channel's stories</li> <li><code>can_edit_stories</code> (<code>bool</code> ) (<code>optional</code>): Pass True if the administrator can edit the channel's stories</li> <li><code>can_delete_stories</code> (<code>bool</code> ) (<code>optional</code>): Pass True if the administrator can delete the channel's stories</li> <li><code>can_post_messages</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the administrator can create channel posts, channels only</li> <li><code>can_edit_messages</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the administrator can edit messages of other users, channels only</li> <li><code>can_pin_messages</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the administrator can pin messages, supergroups only</li> <li><code>can_manage_topics</code> (<code>bool</code> ) (<code>optional</code>): Pass True if the user is allowed to create, rename, close, and reopen forum topics, supergroups only</li> </ul>"},{"location":"methods/promote_chat_member/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/promote_chat_member/#bool","title":"<code>bool</code>","text":""},{"location":"methods/promote_chat_member/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.promote_chat_member(\n    chat_id=your_chat_id_here,\n    user_id=your_user_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.promote_chat_member(\n    chat_id=your_chat_id_here,\n    user_id=your_user_id_here,\n    is_anonymous=your_is_anonymous_here,\n    can_manage_chat=your_can_manage_chat_here,\n    can_delete_messages=your_can_delete_messages_here,\n    can_manage_video_chats=your_can_manage_video_chats_here,\n    can_restrict_members=your_can_restrict_members_here,\n    can_promote_members=your_can_promote_members_here,\n    can_change_info=your_can_change_info_here,\n    can_invite_users=your_can_invite_users_here,\n    can_post_stories=your_can_post_stories_here,\n    can_edit_stories=your_can_edit_stories_here,\n    can_delete_stories=your_can_delete_stories_here,\n    can_post_messages=your_can_post_messages_here,\n    can_edit_messages=your_can_edit_messages_here,\n    can_pin_messages=your_can_pin_messages_here,\n    can_manage_topics=your_can_manage_topics_here\n)\n</code></pre>"},{"location":"methods/read_business_message/","title":"\ud83d\udd27 read_business_message","text":"<p>Marks an incoming message as read on behalf of a business account.</p>"},{"location":"methods/read_business_message/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection on behalf of which to read the message</li> <li><code>chat_id</code> (<code>int</code> ): Unique identifier of the chat in which the message was received. The chat must have been active in the last 24 hours.</li> <li><code>message_id</code> (<code>int</code> ): Unique identifier of the message to mark as read</li> </ul>"},{"location":"methods/read_business_message/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/read_business_message/#bool","title":"<code>bool</code>","text":""},{"location":"methods/read_business_message/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.read_business_message(\n    business_connection_id=your_business_connection_id_here,\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here\n)\n</code></pre>"},{"location":"methods/refund_star_payment/","title":"\ud83d\udd27 refund_star_payment","text":"<p>Refunds a successful payment in Telegram Stars. Returns True on success.</p>"},{"location":"methods/refund_star_payment/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>user_id</code> (<code>int</code> ): Identifier of the user whose payment will be refunded</li> <li><code>telegram_payment_charge_id</code> (<code>str</code> ): Telegram payment identifier</li> </ul>"},{"location":"methods/refund_star_payment/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/refund_star_payment/#bool","title":"<code>bool</code>","text":""},{"location":"methods/refund_star_payment/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.refund_star_payment(\n    user_id=your_user_id_here,\n    telegram_payment_charge_id=your_telegram_payment_charge_id_here\n)\n</code></pre>"},{"location":"methods/remove_business_account_profile_photo/","title":"\ud83d\udd27 remove_business_account_profile_photo","text":"<p>Removes the current profile photo of a managed business account.</p>"},{"location":"methods/remove_business_account_profile_photo/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection</li> <li><code>is_public</code> (<code>bool</code> ) (<code>optional</code>): Pass True to remove the public photo, which is visible even if the main photo is hidden by the business account's privacy settings. After the main photo is removed, the previous profile photo (if present) becomes the main photo.</li> </ul>"},{"location":"methods/remove_business_account_profile_photo/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/remove_business_account_profile_photo/#bool","title":"<code>bool</code>","text":""},{"location":"methods/remove_business_account_profile_photo/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.remove_business_account_profile_photo(\n    business_connection_id=your_business_connection_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.remove_business_account_profile_photo(\n    business_connection_id=your_business_connection_id_here,\n    is_public=your_is_public_here\n)\n</code></pre>"},{"location":"methods/remove_chat_verification/","title":"\ud83d\udd27 remove_chat_verification","text":"<p>Removes verification from a chat that is currently verified on behalf of the organization represented by the bot. Returns True on success.</p>"},{"location":"methods/remove_chat_verification/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>str</code> or <code>int</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> </ul>"},{"location":"methods/remove_chat_verification/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/remove_chat_verification/#bool","title":"<code>bool</code>","text":""},{"location":"methods/remove_chat_verification/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.remove_chat_verification(\n    chat_id=your_chat_id_here\n)\n</code></pre>"},{"location":"methods/remove_user_verification/","title":"\ud83d\udd27 remove_user_verification","text":"<p>Removes verification from a user who is currently verified on behalf of the organization represented by the bot. Returns True on success.</p>"},{"location":"methods/remove_user_verification/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>user_id</code> (<code>int</code> ): Unique identifier of the target user</li> </ul>"},{"location":"methods/remove_user_verification/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/remove_user_verification/#bool","title":"<code>bool</code>","text":""},{"location":"methods/remove_user_verification/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.remove_user_verification(\n    user_id=your_user_id_here\n)\n</code></pre>"},{"location":"methods/reopen_forum_topic/","title":"\ud83d\udd27 reopen_forum_topic","text":"<p>Use this method to reopen a closed topic in a forum supergroup chat. The bot must be an administrator in the chat</p>"},{"location":"methods/reopen_forum_topic/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>message_thread_id</code> (<code>int</code> ): Identifier of the topic to reopen</li> </ul>"},{"location":"methods/reopen_forum_topic/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/reopen_forum_topic/#bool","title":"<code>bool</code>","text":""},{"location":"methods/reopen_forum_topic/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.reopen_forum_topic(\n    chat_id=your_chat_id_here,\n    message_thread_id=your_message_thread_id_here\n)\n</code></pre>"},{"location":"methods/reopen_general_forum_topic/","title":"\ud83d\udd27 reopen_general_forum_topic","text":"<p>Use this method to reopen the 'General' topic in a forum supergroup chat.</p>"},{"location":"methods/reopen_general_forum_topic/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> </ul>"},{"location":"methods/reopen_general_forum_topic/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/reopen_general_forum_topic/#bool","title":"<code>bool</code>","text":""},{"location":"methods/reopen_general_forum_topic/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.reopen_general_forum_topic(\n    chat_id=your_chat_id_here\n)\n</code></pre>"},{"location":"methods/replace_sticker_in_set/","title":"\ud83d\udd27 replace_sticker_in_set","text":"<p>Use this method to replace an existing sticker in a sticker set with a new one. The method is equivalent to calling deleteStickerFromSet, then addStickerToSet,</p>"},{"location":"methods/replace_sticker_in_set/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>user_id</code> (<code>int</code> ): User identifier of the sticker set owner</li> <li><code>name</code> (<code>str</code> ): Sticker set name</li> <li><code>old_sticker</code> (<code>str</code> ): File identifier of the replaced sticker</li> <li><code>sticker</code> (InputSticker ): A JSON-serialized object with information about the added sticker. If exactly the same sticker had already been added to the set, then the set remains unchanged.</li> </ul>"},{"location":"methods/replace_sticker_in_set/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/replace_sticker_in_set/#bool","title":"<code>bool</code>","text":""},{"location":"methods/replace_sticker_in_set/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.replace_sticker_in_set(\n    user_id=your_user_id_here,\n    name=your_name_here,\n    old_sticker=your_old_sticker_here,\n    sticker=your_sticker_here\n)\n</code></pre>"},{"location":"methods/restrict_chat_member/","title":"\ud83d\udd27 restrict_chat_member","text":"<p>Use this method to restrict a user in a supergroup.</p>"},{"location":"methods/restrict_chat_member/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target group or username of the target supergroup or channel (in the format @channelusername)</li> <li><code>user_id</code> (<code>int</code> ): Unique identifier of the target user</li> <li><code>permissions</code> (ChatPermissions ): Pass ChatPermissions object to set all permissions at once. Use this parameter instead of passing all boolean parameters to avoid backward compatibility problems in future.</li> <li><code>use_independent_chat_permissions</code> (<code>bool</code> ) (<code>optional</code>): Pass True if chat permissions are set independently. Otherwise, the can_send_other_messages and can_add_web_page_previews permissions will imply the can_send_messages, can_send_audios, can_send_documents, can_send_photos, can_send_videos, can_send_video_notes, and can_send_voice_notes permissions; the can_send_polls permission will imply the can_send_messages permission.</li> <li><code>until_date</code> (<code>int</code> ) (<code>optional</code>): Date when restrictions will be lifted for the user, unix time. If user is restricted for more than 366 days or less than 30 seconds from the current time, they are considered to be restricted forever</li> </ul>"},{"location":"methods/restrict_chat_member/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/restrict_chat_member/#bool","title":"<code>bool</code>","text":""},{"location":"methods/restrict_chat_member/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.restrict_chat_member(\n    chat_id=your_chat_id_here,\n    user_id=your_user_id_here,\n    permissions=your_permissions_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.restrict_chat_member(\n    chat_id=your_chat_id_here,\n    user_id=your_user_id_here,\n    permissions=your_permissions_here,\n    use_independent_chat_permissions=your_use_independent_chat_permissions_here,\n    until_date=your_until_date_here\n)\n</code></pre>"},{"location":"methods/revoke_chat_invite_link/","title":"\ud83d\udd27 revoke_chat_invite_link","text":"<p>Use this method to revoke an invite link created by the bot.</p>"},{"location":"methods/revoke_chat_invite_link/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Id: Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>invite_link</code> (<code>str</code> ): The invite link to revoke</li> </ul>"},{"location":"methods/revoke_chat_invite_link/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/revoke_chat_invite_link/#chatinvitelink","title":"ChatInviteLink","text":""},{"location":"methods/revoke_chat_invite_link/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.revoke_chat_invite_link(\n    chat_id=your_chat_id_here,\n    invite_link=your_invite_link_here\n)\n</code></pre>"},{"location":"methods/run/","title":"\ud83d\udd27 run","text":"<p>Use this method to run a couroutine function or handle new updates.</p>"},{"location":"methods/run/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>main</code> (<code>Coroutine</code> ) (<code>optional</code>): The couroutine function.</li> </ul>"},{"location":"methods/run/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/run/#any","title":"<code>Any</code>","text":""},{"location":"methods/run/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.run(\n    main=your_main_here\n)\n</code></pre>"},{"location":"methods/save_prepared_inline_message/","title":"\ud83d\udd27 save_prepared_inline_message","text":"<p>Stores a message that can be sent by a user of a Mini App. Returns a PreparedInlineMessage object.</p>"},{"location":"methods/save_prepared_inline_message/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>user_id</code> (<code>int</code> )</li> <li><code>result</code> (InlineQueryResultCachedAudio or InlineQueryResultCachedDocument or InlineQueryResultCachedGif or InlineQueryResultCachedMpeg4Gif or InlineQueryResultCachedPhoto or InlineQueryResultCachedSticker or InlineQueryResultCachedVideo or InlineQueryResultCachedVoice or InlineQueryResultArticle or InlineQueryResultAudio or InlineQueryResultContact or InlineQueryResultGame or InlineQueryResultDocument or InlineQueryResultGif or InlineQueryResultLocation or InlineQueryResultMpeg4Gif or InlineQueryResultPhoto or InlineQueryResultVenue or InlineQueryResultVideo or InlineQueryResultVoice )</li> <li><code>allow_user_chats</code> (<code>bool</code> ) (<code>optional</code>)</li> <li><code>allow_bot_chats</code> (<code>bool</code> ) (<code>optional</code>)</li> <li><code>allow_group_chats</code> (<code>bool</code> ) (<code>optional</code>)</li> <li><code>allow_channel_chats</code> (<code>bool</code> ) (<code>optional</code>)</li> </ul>"},{"location":"methods/save_prepared_inline_message/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/save_prepared_inline_message/#preparedinlinemessage","title":"PreparedInlineMessage","text":""},{"location":"methods/save_prepared_inline_message/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.save_prepared_inline_message(\n    user_id=your_user_id_here,\n    result=your_result_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.save_prepared_inline_message(\n    user_id=your_user_id_here,\n    result=your_result_here,\n    allow_user_chats=your_allow_user_chats_here,\n    allow_bot_chats=your_allow_bot_chats_here,\n    allow_group_chats=your_allow_group_chats_here,\n    allow_channel_chats=your_allow_channel_chats_here\n)\n</code></pre>"},{"location":"methods/send_animation/","title":"\ud83d\udd27 send_animation","text":"<p>Use this method to send animation files (GIF or H.264/MPEG-4 AVC video without sound).</p>"},{"location":"methods/send_animation/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>animation</code> (<code>Path</code> or <code>bytes</code> or <code>str</code> ): Animation to send. Pass a file_id as String to send an animation that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get an animation from the Internet, or upload a new animation using multipart/form-data.</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Identifier of a business connection, in which the message will be sent</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of a message thread, in which the video will be sent</li> <li><code>duration</code> (<code>int</code> ) (<code>optional</code>): Duration of sent animation in seconds</li> <li><code>width</code> (<code>int</code> ) (<code>optional</code>): Animation width</li> <li><code>height</code> (<code>int</code> ) (<code>optional</code>): Animation height</li> <li><code>thumbnail</code> (<code>Path</code> or <code>bytes</code> or <code>str</code> ) (<code>optional</code>): Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass \u201cattach://\u201d if the thumbnail was uploaded using multipart/form-data under . <li><code>caption</code> (<code>str</code> ) (<code>optional</code>): Animation caption (may also be used when resending animation by file_id), 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>Literal</code> ) (<code>optional</code>): Mode for parsing entities in the animation caption</li> <li><code>caption_entities</code> (List of MessageEntity ) (<code>optional</code>): List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>show_caption_above_media</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the caption must be shown above the message media. Supported only for animation, photo and video messages.</li> <li><code>has_spoiler</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the animation should be sent as a spoiler</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound.</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the sent message from forwarding and saving</li> <li><code>message_effect_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier of the message effect</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): Reply parameters.</li> <li><code>reply_markup</code> (InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply ) (<code>optional</code>): Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>): Pass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> <li><code>suggested_post_parameters</code> (SuggestedPostParameters ) (<code>optional</code>): A JSON-serialized object containing the parameters of the suggested post to send; for direct messages chats only. If the message is sent as a reply to another suggested post, then that suggested post is automatically declined.</li>"},{"location":"methods/send_animation/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_animation/#message","title":"Message","text":""},{"location":"methods/send_animation/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_animation(\n    chat_id=your_chat_id_here,\n    animation=your_animation_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_animation(\n    chat_id=your_chat_id_here,\n    animation=your_animation_here,\n    business_connection_id=your_business_connection_id_here,\n    message_thread_id=your_message_thread_id_here,\n    duration=your_duration_here,\n    width=your_width_here,\n    height=your_height_here,\n    thumbnail=your_thumbnail_here,\n    caption=your_caption_here,\n    parse_mode=your_parse_mode_here,\n    caption_entities=your_caption_entities_here,\n    show_caption_above_media=your_show_caption_above_media_here,\n    has_spoiler=your_has_spoiler_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    message_effect_id=your_message_effect_id_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here,\n    suggested_post_parameters=your_suggested_post_parameters_here\n)\n</code></pre>"},{"location":"methods/send_audio/","title":"\ud83d\udd27 send_audio","text":"<p>Use this method to send audio files, if you want Telegram clients to display them in the music player.</p>"},{"location":"methods/send_audio/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>audio</code> (<code>Path</code> or <code>bytes</code> or <code>str</code> ): Audio file to send. Pass a file_id as String to send an audio file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get an audio file from the Internet, or upload a new one using multipart/form-data. Audio must be in the .MP3 or .M4A format.</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier for the target business connection</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of a message thread, in which the message will be sent</li> <li><code>caption</code> (<code>str</code> ) (<code>optional</code>): Audio caption, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>Literal</code> ) (<code>optional</code>): Mode for parsing entities in the audio caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ) (<code>optional</code>): A JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>duration</code> (<code>int</code> ) (<code>optional</code>): Duration of the audio in seconds</li> <li><code>performer</code> (<code>str</code> ) (<code>optional</code>): Performer</li> <li><code>title</code> (<code>str</code> ) (<code>optional</code>): Track name</li> <li><code>thumbnail</code> (<code>Path</code> or <code>bytes</code> or <code>str</code> ) (<code>optional</code>): Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass \u201cattach://\u201d if the thumbnail was uploaded using multipart/form-data under  <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound.</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the sent message from forwarding and saving</li> <li><code>message_effect_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier for the message effect</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): Reply parameters.</li> <li><code>reply_markup</code> (InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply ) (<code>optional</code>)</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>): Pass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> <li><code>suggested_post_parameters</code> (SuggestedPostParameters ) (<code>optional</code>): A JSON-serialized object containing the parameters of the suggested post to send; for direct messages chats only. If the message is sent as a reply to another suggested post, then that suggested post is automatically declined.</li>"},{"location":"methods/send_audio/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_audio/#message","title":"Message","text":""},{"location":"methods/send_audio/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_audio(\n    chat_id=your_chat_id_here,\n    audio=your_audio_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_audio(\n    chat_id=your_chat_id_here,\n    audio=your_audio_here,\n    business_connection_id=your_business_connection_id_here,\n    message_thread_id=your_message_thread_id_here,\n    caption=your_caption_here,\n    parse_mode=your_parse_mode_here,\n    caption_entities=your_caption_entities_here,\n    duration=your_duration_here,\n    performer=your_performer_here,\n    title=your_title_here,\n    thumbnail=your_thumbnail_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    message_effect_id=your_message_effect_id_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here,\n    suggested_post_parameters=your_suggested_post_parameters_here\n)\n</code></pre>"},{"location":"methods/send_chat_action/","title":"\ud83d\udd27 send_chat_action","text":"<p>Use this method when you need to tell the user that something is happening on the bot's side.</p>"},{"location":"methods/send_chat_action/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel</li> <li><code>action</code> (<code>str</code> ): Type of action to broadcast. Choose one, depending on what the user is about to receive: typing for text messages, upload_photo for photos, record_video or upload_video for videos, record_voice or upload_voice for voice notes, upload_document for general files, choose_sticker for stickers, find_location for location data, record_video_note or upload_video_note for video notes.</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Identifier of a business connection, in which the message will be sent</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): The thread to which the message will be sent(supergroups only)</li> </ul>"},{"location":"methods/send_chat_action/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_chat_action/#bool","title":"<code>bool</code>","text":""},{"location":"methods/send_chat_action/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_chat_action(\n    chat_id=your_chat_id_here,\n    action=your_action_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_chat_action(\n    chat_id=your_chat_id_here,\n    action=your_action_here,\n    business_connection_id=your_business_connection_id_here,\n    message_thread_id=your_message_thread_id_here\n)\n</code></pre>"},{"location":"methods/send_checklist/","title":"\ud83d\udd27 send_checklist","text":"<p>Use this method to send a checklist on behalf of a connected business account.</p>"},{"location":"methods/send_checklist/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection on behalf of which the message will be sent</li> <li><code>chat_id</code> (<code>int</code> ): Unique identifier for the target chat</li> <li><code>checklist</code> (InputChecklist ): A JSON-serialized object for the checklist to send</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the sent message from forwarding and saving</li> <li><code>message_effect_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier of the message effect to be added to the message</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): A JSON-serialized object for description of the message to reply to</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ) (<code>optional</code>): A JSON-serialized object for an inline keyboard</li> </ul>"},{"location":"methods/send_checklist/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_checklist/#message","title":"Message","text":""},{"location":"methods/send_checklist/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_checklist(\n    business_connection_id=your_business_connection_id_here,\n    chat_id=your_chat_id_here,\n    checklist=your_checklist_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_checklist(\n    business_connection_id=your_business_connection_id_here,\n    chat_id=your_chat_id_here,\n    checklist=your_checklist_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    message_effect_id=your_message_effect_id_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here\n)\n</code></pre>"},{"location":"methods/send_contact/","title":"\ud83d\udd27 send_contact","text":"<p>Use this method to send phone contacts. On success, the sent Message is returned.</p>"},{"location":"methods/send_contact/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel</li> <li><code>phone_number</code> (<code>str</code> ): Contact's phone number</li> <li><code>first_name</code> (<code>str</code> ): Contact's first name</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Identifier of a business connection, in which the message will be sent</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): The thread to which the message will be sent</li> <li><code>last_name</code> (<code>str</code> ) (<code>optional</code>): Contact's last name</li> <li><code>vcard</code> (<code>str</code> ) (<code>optional</code>): Additional data about the contact in the form of a vCard, 0-2048 bytes</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound.</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the sent message from forwarding and saving</li> <li><code>message_effect_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier of the message effect</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): Reply parameters.</li> <li><code>reply_markup</code> (InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply ) (<code>optional</code>): Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>): Pass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> <li><code>suggested_post_parameters</code> (SuggestedPostParameters ) (<code>optional</code>): A JSON-serialized object containing the parameters of the suggested post to send; for direct messages chats only. If the message is sent as a reply to another suggested post, then that suggested post is automatically declined.</li> </ul>"},{"location":"methods/send_contact/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_contact/#message","title":"Message","text":""},{"location":"methods/send_contact/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_contact(\n    chat_id=your_chat_id_here,\n    phone_number=your_phone_number_here,\n    first_name=your_first_name_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_contact(\n    chat_id=your_chat_id_here,\n    phone_number=your_phone_number_here,\n    first_name=your_first_name_here,\n    business_connection_id=your_business_connection_id_here,\n    message_thread_id=your_message_thread_id_here,\n    last_name=your_last_name_here,\n    vcard=your_vcard_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    message_effect_id=your_message_effect_id_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here,\n    suggested_post_parameters=your_suggested_post_parameters_here\n)\n</code></pre>"},{"location":"methods/send_dice/","title":"\ud83d\udd27 send_dice","text":"<p>Use this method to send an animated emoji that will display a random value. On success, the sent Message is returned.</p>"},{"location":"methods/send_dice/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier for the target business connection</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): The identifier of a message thread, unique within the chat to which the message with the thread identifier belongs</li> <li><code>emoji</code> (<code>str</code> ) (<code>optional</code>): Emoji on which the dice throw animation is based. Currently, must be one of \u201c\ud83c\udfb2\u201d, \u201c\ud83c\udfaf\u201d, \u201c\ud83c\udfc0\u201d, \u201c\u26bd\u201d, \u201c\ud83c\udfb3\u201d, or \u201c\ud83c\udfb0\u201d. Dice can have values 1-6 for \u201c\ud83c\udfb2\u201d, \u201c\ud83c\udfaf\u201d and \u201c\ud83c\udfb3\u201d, values 1-5 for \u201c\ud83c\udfc0\u201d and \u201c\u26bd\u201d, and values 1-64 for \u201c\ud83c\udfb0\u201d. Defaults to \u201c\ud83c\udfb2\u201d</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound.</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the sent message from forwarding</li> <li><code>message_effect_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier for the message effect</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): Reply parameters.</li> <li><code>reply_markup</code> (InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply ) (<code>optional</code>): Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>): Pass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> <li><code>suggested_post_parameters</code> (SuggestedPostParameters ) (<code>optional</code>): A JSON-serialized object containing the parameters of the suggested post to send; for direct messages chats only. If the message is sent as a reply to another suggested post, then that suggested post is automatically declined.</li> </ul>"},{"location":"methods/send_dice/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_dice/#message","title":"Message","text":""},{"location":"methods/send_dice/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_dice(\n    chat_id=your_chat_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_dice(\n    chat_id=your_chat_id_here,\n    business_connection_id=your_business_connection_id_here,\n    message_thread_id=your_message_thread_id_here,\n    emoji=your_emoji_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    message_effect_id=your_message_effect_id_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here,\n    suggested_post_parameters=your_suggested_post_parameters_here\n)\n</code></pre>"},{"location":"methods/send_document/","title":"\ud83d\udd27 send_document","text":"<p>Use this method to send general files.</p>"},{"location":"methods/send_document/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>document</code> (<code>Path</code> or <code>bytes</code> or <code>str</code> ): (document) File to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier for the target business connection</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of a message thread, in which the message will be sent</li> <li><code>thumbnail</code> (<code>Path</code> or <code>bytes</code> or <code>str</code> ) (<code>optional</code>): InputFile or String : Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass \u201cattach://\u201d if the thumbnail was uploaded using multipart/form-data under  <li><code>caption</code> (<code>str</code> ) (<code>optional</code>): Document caption (may also be used when resending documents by file_id), 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>Literal</code> ) (<code>optional</code>): Mode for parsing entities in the document caption</li> <li><code>caption_entities</code> (List of MessageEntity ) (<code>optional</code>): A JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>disable_content_type_detection</code> (<code>bool</code> ) (<code>optional</code>): Disables automatic server-side content type detection for files uploaded using multipart/form-data</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound.</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the sent message from forwarding and saving</li> <li><code>message_effect_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier for the message effect</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): Reply parameters.</li> <li><code>reply_markup</code> (InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply ) (<code>optional</code>): Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>): Pass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> <li><code>suggested_post_parameters</code> (SuggestedPostParameters ) (<code>optional</code>): A JSON-serialized object containing the parameters of the suggested post to send; for direct messages chats only. If the message is sent as a reply to another suggested post, then that suggested post is automatically declined.</li>"},{"location":"methods/send_document/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_document/#message","title":"Message","text":""},{"location":"methods/send_document/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_document(\n    chat_id=your_chat_id_here,\n    document=your_document_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_document(\n    chat_id=your_chat_id_here,\n    document=your_document_here,\n    business_connection_id=your_business_connection_id_here,\n    message_thread_id=your_message_thread_id_here,\n    thumbnail=your_thumbnail_here,\n    caption=your_caption_here,\n    parse_mode=your_parse_mode_here,\n    caption_entities=your_caption_entities_here,\n    disable_content_type_detection=your_disable_content_type_detection_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    message_effect_id=your_message_effect_id_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here,\n    suggested_post_parameters=your_suggested_post_parameters_here\n)\n</code></pre>"},{"location":"methods/send_game/","title":"\ud83d\udd27 send_game","text":"<p>Used to send the game.</p>"},{"location":"methods/send_game/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>game_short_name</code> (<code>str</code> ): Short name of the game, serves as the unique identifier for the game. Set up your games via @BotFather.</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Identifier of the business connection.</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the thread to which the message will be sent.</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound.</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if content of the message needs to be protected from being viewed by the bot.</li> <li><code>message_effect_id</code> (<code>str</code> ) (<code>optional</code>): Identifier of the message effect.</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): Reply parameters.</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ) (<code>optional</code>): Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>): Pass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance</li> </ul>"},{"location":"methods/send_game/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_game/#message","title":"Message","text":""},{"location":"methods/send_game/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_game(\n    chat_id=your_chat_id_here,\n    game_short_name=your_game_short_name_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_game(\n    chat_id=your_chat_id_here,\n    game_short_name=your_game_short_name_here,\n    business_connection_id=your_business_connection_id_here,\n    message_thread_id=your_message_thread_id_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    message_effect_id=your_message_effect_id_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here\n)\n</code></pre>"},{"location":"methods/send_gift/","title":"\ud83d\udd27 send_gift","text":"<p>Sends a gift to the given user or channel chat. The gift can't be converted to Telegram Stars by the receiver. Returns True on success.</p>"},{"location":"methods/send_gift/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>gift_id</code> (<code>str</code> ): Identifier of the gift</li> <li><code>user_id</code> (<code>int</code> ) (<code>optional</code>): Required if chat_id is not specified. Unique identifier of the target user who will receive the gift.</li> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ) (<code>optional</code>): Required if user_id is not specified. Unique identifier for the chat or username of the channel (in the format @channelusername) that will receive the gift.</li> <li><code>pay_for_upgrade</code> (<code>bool</code> ) (<code>optional</code>): Pass True to pay for the gift upgrade from the bot's balance, thereby making the upgrade free for the receiver</li> <li><code>text</code> (<code>str</code> ) (<code>optional</code>): Text that will be shown along with the gift; 0-255 characters</li> <li><code>text_parse_mode</code> (<code>Literal</code> ) (<code>optional</code>): Mode for parsing entities in the text. See formatting options for more details. Entities other than \u201cbold\u201d, \u201citalic\u201d, \u201cunderline\u201d, \u201cstrikethrough\u201d, \u201cspoiler\u201d, and \u201ccustom_emoji\u201d are ignored.</li> <li><code>text_entities</code> (List of MessageEntity ) (<code>optional</code>): A JSON-serialized list of special entities that appear in the gift text. It can be specified instead of text_parse_mode. Entities other than \u201cbold\u201d, \u201citalic\u201d, \u201cunderline\u201d, \u201cstrikethrough\u201d, \u201cspoiler\u201d, and \u201ccustom_emoji\u201d are ignored.</li> </ul>"},{"location":"methods/send_gift/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_gift/#bool","title":"<code>bool</code>","text":""},{"location":"methods/send_gift/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_gift(\n    gift_id=your_gift_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_gift(\n    gift_id=your_gift_id_here,\n    user_id=your_user_id_here,\n    chat_id=your_chat_id_here,\n    pay_for_upgrade=your_pay_for_upgrade_here,\n    text=your_text_here,\n    text_parse_mode=your_text_parse_mode_here,\n    text_entities=your_text_entities_here\n)\n</code></pre>"},{"location":"methods/send_invoice/","title":"\ud83d\udd27 send_invoice","text":"<p>Sends invoice.</p>"},{"location":"methods/send_invoice/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target private chat</li> <li><code>title</code> (<code>str</code> ): Product name, 1-32 characters</li> <li><code>description</code> (<code>str</code> ): Product description, 1-255 characters</li> <li><code>payload</code> (<code>str</code> )</li> <li><code>currency</code> (<code>str</code> ): Three-letter ISO 4217 currency code, see https://core.telegram.org/bots/payments#supported-currencies</li> <li><code>prices</code> (List of LabeledPrice ): Price breakdown, a list of components (e.g. product price, tax, discount, delivery cost, delivery tax, bonus, etc.)</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): The identifier of a message thread, in which the invoice message will be sent</li> <li><code>provider_token</code> (<code>str</code> ) (<code>optional</code>): Payments provider token, obtained via @Botfather; Pass None to omit the parameter to use \"XTR\" currency</li> <li><code>max_tip_amount</code> (<code>int</code> ) (<code>optional</code>): The maximum accepted amount for tips in the smallest units of the currency</li> <li><code>suggested_tip_amounts</code> (List of <code>int</code> ) (<code>optional</code>): A JSON-serialized array of suggested amounts of tips in the smallest units of the currency.  At most 4 suggested tip amounts can be specified. The suggested tip amounts must be positive, passed in a strictly increased order and must not exceed max_tip_amount.</li> <li><code>start_parameter</code> (<code>str</code> ) (<code>optional</code>): Unique deep-linking parameter that can be used to generate this invoice when used as a start parameter</li> <li><code>provider_data</code> (<code>str</code> ) (<code>optional</code>): A JSON-serialized data about the invoice, which will be shared with the payment provider. A detailed description of required fields should be provided by the payment provider.</li> <li><code>photo_url</code> (<code>str</code> ) (<code>optional</code>): URL of the product photo for the invoice. Can be a photo of the goods or a marketing image for a service. People like it better when they see what they are paying for.</li> <li><code>photo_size</code> (<code>int</code> ) (<code>optional</code>): Photo size in bytes</li> <li><code>photo_width</code> (<code>int</code> ) (<code>optional</code>): Photo width</li> <li><code>photo_height</code> (<code>int</code> ) (<code>optional</code>): Photo height</li> <li><code>need_name</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if you require the user's full name to complete the order</li> <li><code>need_phone_number</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if you require the user's phone number to complete the order</li> <li><code>need_email</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if you require the user's email to complete the order</li> <li><code>need_shipping_address</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if you require the user's shipping address to complete the order</li> <li><code>send_phone_number_to_provider</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if user's phone number should be sent to provider</li> <li><code>send_email_to_provider</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if user's email address should be sent to provider</li> <li><code>is_flexible</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the final price depends on the shipping method</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound.</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the sent message from forwarding and saving</li> <li><code>message_effect_id</code> (<code>str</code> ) (<code>optional</code>): The identifier of a message effect to be applied to the message</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): Reply parameters.</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ) (<code>optional</code>): A JSON-serialized object for an inline keyboard. If empty, one 'Pay total price' button will be shown. If not empty, the first button must be a Pay button</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>): Pass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> <li><code>suggested_post_parameters</code> (SuggestedPostParameters ) (<code>optional</code>): A JSON-serialized object containing the parameters of the suggested post to send; for direct messages chats only. If the message is sent as a reply to another suggested post, then that suggested post is automatically declined.</li> </ul>"},{"location":"methods/send_invoice/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_invoice/#message","title":"Message","text":""},{"location":"methods/send_invoice/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_invoice(\n    chat_id=your_chat_id_here,\n    title=your_title_here,\n    description=your_description_here,\n    payload=your_payload_here,\n    currency=your_currency_here,\n    prices=your_prices_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_invoice(\n    chat_id=your_chat_id_here,\n    title=your_title_here,\n    description=your_description_here,\n    payload=your_payload_here,\n    currency=your_currency_here,\n    prices=your_prices_here,\n    message_thread_id=your_message_thread_id_here,\n    provider_token=your_provider_token_here,\n    max_tip_amount=your_max_tip_amount_here,\n    suggested_tip_amounts=your_suggested_tip_amounts_here,\n    start_parameter=your_start_parameter_here,\n    provider_data=your_provider_data_here,\n    photo_url=your_photo_url_here,\n    photo_size=your_photo_size_here,\n    photo_width=your_photo_width_here,\n    photo_height=your_photo_height_here,\n    need_name=your_need_name_here,\n    need_phone_number=your_need_phone_number_here,\n    need_email=your_need_email_here,\n    need_shipping_address=your_need_shipping_address_here,\n    send_phone_number_to_provider=your_send_phone_number_to_provider_here,\n    send_email_to_provider=your_send_email_to_provider_here,\n    is_flexible=your_is_flexible_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    message_effect_id=your_message_effect_id_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here,\n    suggested_post_parameters=your_suggested_post_parameters_here\n)\n</code></pre>"},{"location":"methods/send_location/","title":"\ud83d\udd27 send_location","text":"<p>Use this method to send point on the map. On success, the sent Message is returned.</p>"},{"location":"methods/send_location/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>latitude</code> (<code>float</code> ): Latitude of the location</li> <li><code>longitude</code> (<code>float</code> ): Longitude of the location</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Identifier of a business connection, in which the message will be sent</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of a message thread, in which the message will be sent</li> <li><code>horizontal_accuracy</code> (<code>float</code> ) (<code>optional</code>): The radius of uncertainty for the location, measured in meters; 0-1500</li> <li><code>live_period</code> (<code>int</code> ) (<code>optional</code>): Period in seconds during which the location will be updated (see Live Locations, should be between 60 and 86400, or 0x7FFFFFFF for live locations that can be edited indefinitely.</li> <li><code>heading</code> (<code>int</code> ) (<code>optional</code>): For live locations, a direction in which the user is moving, in degrees. Must be between 1 and 360 if specified.</li> <li><code>proximity_alert_radius</code> (<code>int</code> ) (<code>optional</code>): For live locations, a maximum distance for proximity alerts about approaching another chat member, in meters. Must be between 1 and 100000 if specified.</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound.</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the sent message from forwarding and saving</li> <li><code>message_effect_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier of the message effect</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): Reply parameters.</li> <li><code>reply_markup</code> (InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply ) (<code>optional</code>): Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>): Pass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> <li><code>suggested_post_parameters</code> (SuggestedPostParameters ) (<code>optional</code>): A JSON-serialized object containing the parameters of the suggested post to send; for direct messages chats only. If the message is sent as a reply to another suggested post, then that suggested post is automatically declined.</li> </ul>"},{"location":"methods/send_location/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_location/#message","title":"Message","text":""},{"location":"methods/send_location/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_location(\n    chat_id=your_chat_id_here,\n    latitude=your_latitude_here,\n    longitude=your_longitude_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_location(\n    chat_id=your_chat_id_here,\n    latitude=your_latitude_here,\n    longitude=your_longitude_here,\n    business_connection_id=your_business_connection_id_here,\n    message_thread_id=your_message_thread_id_here,\n    horizontal_accuracy=your_horizontal_accuracy_here,\n    live_period=your_live_period_here,\n    heading=your_heading_here,\n    proximity_alert_radius=your_proximity_alert_radius_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    message_effect_id=your_message_effect_id_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here,\n    suggested_post_parameters=your_suggested_post_parameters_here\n)\n</code></pre>"},{"location":"methods/send_media_from_file_id/","title":"\ud83d\udd27 send_media_from_file_id","text":""},{"location":"methods/send_media_from_file_id/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> )</li> <li><code>file_id</code> (<code>str</code> )</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>)</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>)</li> <li><code>caption</code> (<code>str</code> ) (<code>optional</code>)</li> <li><code>parse_mode</code> (<code>Literal</code> ) (<code>optional</code>)</li> <li><code>caption_entities</code> (List of MessageEntity ) (<code>optional</code>)</li> <li><code>show_caption_above_media</code> (<code>bool</code> ) (<code>optional</code>)</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>)</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>)</li> <li><code>message_effect_id</code> (<code>str</code> ) (<code>optional</code>)</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>)</li> <li><code>reply_markup</code> (InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply ) (<code>optional</code>)</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>)</li> </ul>"},{"location":"methods/send_media_from_file_id/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_media_from_file_id/#message","title":"Message","text":""},{"location":"methods/send_media_from_file_id/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_media_from_file_id(\n    chat_id=your_chat_id_here,\n    file_id=your_file_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_media_from_file_id(\n    chat_id=your_chat_id_here,\n    file_id=your_file_id_here,\n    business_connection_id=your_business_connection_id_here,\n    message_thread_id=your_message_thread_id_here,\n    caption=your_caption_here,\n    parse_mode=your_parse_mode_here,\n    caption_entities=your_caption_entities_here,\n    show_caption_above_media=your_show_caption_above_media_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    message_effect_id=your_message_effect_id_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here\n)\n</code></pre>"},{"location":"methods/send_media_group/","title":"\ud83d\udd27 send_media_group","text":"<p>Use this method to send a group of photos, videos, documents or audios as an album. Documents and audio files</p>"},{"location":"methods/send_media_group/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>media</code> (List of InputMediaAudio or InputMediaDocument or InputMediaPhoto or InputMediaVideo ): A JSON-serialized array describing messages to be sent, must include 2-10 items</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Identifier of a business connection, in which the message will be sent</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of a message thread, in which the messages will be sent</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the messages silently. Users will receive a notification with no sound.</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the sent message from forwarding and saving</li> <li><code>message_effect_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier of the message effect</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): Reply parameters.</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>): Pass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> </ul>"},{"location":"methods/send_media_group/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_media_group/#list-of-message","title":"List of Message","text":""},{"location":"methods/send_media_group/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_media_group(\n    chat_id=your_chat_id_here,\n    media=your_media_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_media_group(\n    chat_id=your_chat_id_here,\n    media=your_media_here,\n    business_connection_id=your_business_connection_id_here,\n    message_thread_id=your_message_thread_id_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    message_effect_id=your_message_effect_id_here,\n    reply_parameters=your_reply_parameters_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here\n)\n</code></pre>"},{"location":"methods/send_message/","title":"\ud83d\udd27 send_message","text":"<p>Use this method to send text messages.</p>"},{"location":"methods/send_message/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>text</code> (<code>str</code> ): Text of the message to be sent</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier for the target business connection</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): Unique identifier for the target message thread (topic) of the forum; for forum supergroups only</li> <li><code>parse_mode</code> (<code>Literal</code> ) (<code>optional</code>): Mode for parsing entities in the message text.</li> <li><code>entities</code> (List of MessageEntity ) (<code>optional</code>): List of special entities that appear in message text, which can be specified instead of parse_mode</li> <li><code>link_preview_options</code> (LinkPreviewOptions ) (<code>optional</code>): Options for previewing links.</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound.</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): If True, the message content will be hidden for all users except for the target user</li> <li><code>message_effect_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier for the message effect</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): Reply parameters.</li> <li><code>reply_markup</code> (InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply ) (<code>optional</code>): Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>): Pass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> <li><code>suggested_post_parameters</code> (SuggestedPostParameters ) (<code>optional</code>): A JSON-serialized object containing the parameters of the suggested post to send; for direct messages chats only. If the message is sent as a reply to another suggested post, then that suggested post is automatically declined.</li> </ul>"},{"location":"methods/send_message/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_message/#message","title":"Message","text":""},{"location":"methods/send_message/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_message(\n    chat_id=your_chat_id_here,\n    text=your_text_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_message(\n    chat_id=your_chat_id_here,\n    text=your_text_here,\n    business_connection_id=your_business_connection_id_here,\n    message_thread_id=your_message_thread_id_here,\n    parse_mode=your_parse_mode_here,\n    entities=your_entities_here,\n    link_preview_options=your_link_preview_options_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    message_effect_id=your_message_effect_id_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here,\n    suggested_post_parameters=your_suggested_post_parameters_here\n)\n</code></pre>"},{"location":"methods/send_paid_media/","title":"\ud83d\udd27 send_paid_media","text":"<p>Use this method to send paid media to channel chats. On success, the sent Message is returned.</p>"},{"location":"methods/send_paid_media/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>star_count</code> (<code>int</code> ): The number of Telegram Stars that must be paid to buy access to the media</li> <li><code>media</code> (List of InputPaidMediaPhoto or InputPaidMediaVideo ): A JSON-serialized array describing the media to be sent; up to 10 items</li> <li><code>payload</code> (<code>str</code> ) (<code>optional</code>): Bot-defined paid media payload, 0-128 bytes. This will not be displayed to the user, use it for your internal processes.</li> <li><code>caption</code> (<code>str</code> ) (<code>optional</code>): Media caption, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>Literal</code> ) (<code>optional</code>): Mode for parsing entities in the media caption</li> <li><code>caption_entities</code> (List of MessageEntity ) (<code>optional</code>): List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>show_caption_above_media</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the caption must be shown above the message media</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound.</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the sent message from forwarding and saving</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): Description of the message to reply to</li> <li><code>reply_markup</code> (InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply ) (<code>optional</code>): Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove a reply keyboard or to force a reply from the user</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier of the business connection on behalf of which the message will be sent</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>): Pass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> <li><code>suggested_post_parameters</code> (SuggestedPostParameters ) (<code>optional</code>): A JSON-serialized object containing the parameters of the suggested post to send; for direct messages chats only. If the message is sent as a reply to another suggested post, then that suggested post is automatically declined.</li> </ul>"},{"location":"methods/send_paid_media/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_paid_media/#message","title":"Message","text":""},{"location":"methods/send_paid_media/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_paid_media(\n    chat_id=your_chat_id_here,\n    star_count=your_star_count_here,\n    media=your_media_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_paid_media(\n    chat_id=your_chat_id_here,\n    star_count=your_star_count_here,\n    media=your_media_here,\n    payload=your_payload_here,\n    caption=your_caption_here,\n    parse_mode=your_parse_mode_here,\n    caption_entities=your_caption_entities_here,\n    show_caption_above_media=your_show_caption_above_media_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here,\n    business_connection_id=your_business_connection_id_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here,\n    suggested_post_parameters=your_suggested_post_parameters_here\n)\n</code></pre>"},{"location":"methods/send_photo/","title":"\ud83d\udd27 send_photo","text":"<p>Use this method to send photos. On success, the sent Message is returned.</p>"},{"location":"methods/send_photo/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>photo</code> (<code>Path</code> or <code>bytes</code> or <code>str</code> ): Photo to send. Pass a file_id as String to send a photo that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a photo from the Internet, or upload a new photo using multipart/form-data. The photo must be at most 10 MB in size. The photo's width and height must not exceed 10000 in total. Width and height ratio must be at most 20.</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier for the target business connection</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of a message thread, in which the message will be sent</li> <li><code>caption</code> (<code>str</code> ) (<code>optional</code>): Photo caption (may also be used when resending photos by file_id), 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>Literal</code> ) (<code>optional</code>): Mode for parsing entities in the photo caption.</li> <li><code>caption_entities</code> (List of MessageEntity ) (<code>optional</code>): A JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>show_caption_above_media</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the caption must be shown above the message media. Supported only for animation, photo and video messages.</li> <li><code>has_spoiler</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the photo should be sent as a spoiler</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound.</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the sent message from forwarding and saving</li> <li><code>message_effect_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier for the message effect</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): Reply parameters.</li> <li><code>reply_markup</code> (InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply ) (<code>optional</code>): Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>): Pass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> <li><code>suggested_post_parameters</code> (SuggestedPostParameters ) (<code>optional</code>): A JSON-serialized object containing the parameters of the suggested post to send; for direct messages chats only. If the message is sent as a reply to another suggested post, then that suggested post is automatically declined.</li> </ul>"},{"location":"methods/send_photo/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_photo/#message","title":"Message","text":""},{"location":"methods/send_photo/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_photo(\n    chat_id=your_chat_id_here,\n    photo=your_photo_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_photo(\n    chat_id=your_chat_id_here,\n    photo=your_photo_here,\n    business_connection_id=your_business_connection_id_here,\n    message_thread_id=your_message_thread_id_here,\n    caption=your_caption_here,\n    parse_mode=your_parse_mode_here,\n    caption_entities=your_caption_entities_here,\n    show_caption_above_media=your_show_caption_above_media_here,\n    has_spoiler=your_has_spoiler_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    message_effect_id=your_message_effect_id_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here,\n    suggested_post_parameters=your_suggested_post_parameters_here\n)\n</code></pre>"},{"location":"methods/send_poll/","title":"\ud83d\udd27 send_poll","text":"<p>Use this method to send a native poll.</p>"},{"location":"methods/send_poll/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel</li> <li><code>question</code> (<code>str</code> ): Poll question, 1-300 characters</li> <li><code>options</code> (List of InputPollOption ): A JSON-serialized list of 2-10 answer options</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Identifier of the business connection to send the message through</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): The identifier of a message thread, in which the poll will be sent</li> <li><code>question_parse_mode</code> (<code>Literal</code> ) (<code>optional</code>): Mode for parsing entities in the question. See formatting options for more details. Currently, only custom emoji entities are allowed</li> <li><code>question_entities</code> (List of MessageEntity ) (<code>optional</code>): A JSON-serialized list of special entities that appear in the poll question. It can be specified instead of question_parse_mode</li> <li><code>is_anonymous</code> (<code>bool</code> ) (<code>optional</code>): True, if the poll needs to be anonymous, defaults to True</li> <li><code>type</code> (<code>str</code> ) (<code>optional</code>): Poll type, \u201cquiz\u201d or \u201cregular\u201d, defaults to \u201cregular\u201d</li> <li><code>allows_multiple_answers</code> (<code>bool</code> ) (<code>optional</code>): True, if the poll allows multiple answers, ignored for polls in quiz mode, defaults to False</li> <li><code>correct_option_id</code> (<code>int</code> ) (<code>optional</code>): 0-based identifier of the correct answer option. Available only for polls in quiz mode, defaults to None</li> <li><code>explanation</code> (<code>str</code> ) (<code>optional</code>): Text that is shown when a user chooses an incorrect answer or taps on the lamp icon in a quiz-style poll, 0-200 characters with at most 2 line feeds after entities parsing</li> <li><code>explanation_parse_mode</code> (<code>Literal</code> ) (<code>optional</code>): Mode for parsing entities in the explanation. See formatting options for more details.</li> <li><code>explanation_entities</code> (List of MessageEntity ) (<code>optional</code>): A JSON-serialized list of special entities that appear in the explanation, which can be specified instead of parse_mode</li> <li><code>open_period</code> (<code>int</code> ) (<code>optional</code>): Amount of time in seconds the poll will be active after creation, 5-600. Can't be used together with close_date.</li> <li><code>close_date</code> (<code>int</code> ) (<code>optional</code>): Point in time (Unix timestamp) when the poll will be automatically closed.</li> <li><code>is_closed</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the poll needs to be immediately closed. This can be useful for poll preview.</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound.</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the sent message from forwarding and saving</li> <li><code>message_effect_id</code> (<code>str</code> ) (<code>optional</code>): Identifier of the message effect to apply to the sent message</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): Reply parameters.</li> <li><code>reply_markup</code> (InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply ) (<code>optional</code>): Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>): Pass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance</li> </ul>"},{"location":"methods/send_poll/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_poll/#message","title":"Message","text":""},{"location":"methods/send_poll/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_poll(\n    chat_id=your_chat_id_here,\n    question=your_question_here,\n    options=your_options_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_poll(\n    chat_id=your_chat_id_here,\n    question=your_question_here,\n    options=your_options_here,\n    business_connection_id=your_business_connection_id_here,\n    message_thread_id=your_message_thread_id_here,\n    question_parse_mode=your_question_parse_mode_here,\n    question_entities=your_question_entities_here,\n    is_anonymous=your_is_anonymous_here,\n    type=your_type_here,\n    allows_multiple_answers=your_allows_multiple_answers_here,\n    correct_option_id=your_correct_option_id_here,\n    explanation=your_explanation_here,\n    explanation_parse_mode=your_explanation_parse_mode_here,\n    explanation_entities=your_explanation_entities_here,\n    open_period=your_open_period_here,\n    close_date=your_close_date_here,\n    is_closed=your_is_closed_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    message_effect_id=your_message_effect_id_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here\n)\n</code></pre>"},{"location":"methods/send_sticker/","title":"\ud83d\udd27 send_sticker","text":"<p>Use this method to send static .WEBP, animated .TGS, or video .WEBM stickers.</p>"},{"location":"methods/send_sticker/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>sticker</code> (<code>Path</code> or <code>bytes</code> or <code>str</code> ): Sticker to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a .webp file from the Internet, or upload a new one using multipart/form-data.</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier for the target business connection</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of a message thread, in which the message will be sent</li> <li><code>emoji</code> (<code>str</code> ) (<code>optional</code>): Emoji associated with the sticker; only for just uploaded stickers</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): to disable the notification</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the sent message from forwarding and saving</li> <li><code>message_effect_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier for the message effect</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): Reply parameters.</li> <li><code>reply_markup</code> (InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply ) (<code>optional</code>): Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>): Pass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> <li><code>suggested_post_parameters</code> (SuggestedPostParameters ) (<code>optional</code>): A JSON-serialized object containing the parameters of the suggested post to send; for direct messages chats only. If the message is sent as a reply to another suggested post, then that suggested post is automatically declined.</li> </ul>"},{"location":"methods/send_sticker/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_sticker/#message","title":"Message","text":""},{"location":"methods/send_sticker/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_sticker(\n    chat_id=your_chat_id_here,\n    sticker=your_sticker_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_sticker(\n    chat_id=your_chat_id_here,\n    sticker=your_sticker_here,\n    business_connection_id=your_business_connection_id_here,\n    message_thread_id=your_message_thread_id_here,\n    emoji=your_emoji_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    message_effect_id=your_message_effect_id_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here,\n    suggested_post_parameters=your_suggested_post_parameters_here\n)\n</code></pre>"},{"location":"methods/send_venue/","title":"\ud83d\udd27 send_venue","text":"<p>Use this method to send information about a venue. On success, the sent Message is returned.</p>"},{"location":"methods/send_venue/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel</li> <li><code>latitude</code> (<code>float</code> ): Latitude of the venue</li> <li><code>longitude</code> (<code>float</code> ): Longitude of the venue</li> <li><code>title</code> (<code>str</code> ): Name of the venue</li> <li><code>address</code> (<code>str</code> ): Address of the venue</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Identifier of a business connection, in which the message will be sent</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): The thread to which the message will be sent</li> <li><code>foursquare_id</code> (<code>str</code> ) (<code>optional</code>): Foursquare identifier of the venue</li> <li><code>foursquare_type</code> (<code>str</code> ) (<code>optional</code>): Foursquare type of the venue, if known. (For example, \u201carts_entertainment/default\u201d, \u201carts_entertainment/aquarium\u201d or \u201cfood/icecream\u201d.)</li> <li><code>google_place_id</code> (<code>str</code> ) (<code>optional</code>): Google Places identifier of the venue</li> <li><code>google_place_type</code> (<code>str</code> ) (<code>optional</code>): Google Places type of the venue.</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound.</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the sent message from forwarding and saving</li> <li><code>message_effect_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier of the message effect</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): Reply parameters.</li> <li><code>reply_markup</code> (InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply ) (<code>optional</code>): Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>): Pass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> <li><code>suggested_post_parameters</code> (SuggestedPostParameters ) (<code>optional</code>): A JSON-serialized object containing the parameters of the suggested post to send; for direct messages chats only. If the message is sent as a reply to another suggested post, then that suggested post is automatically declined.</li> </ul>"},{"location":"methods/send_venue/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_venue/#message","title":"Message","text":""},{"location":"methods/send_venue/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_venue(\n    chat_id=your_chat_id_here,\n    latitude=your_latitude_here,\n    longitude=your_longitude_here,\n    title=your_title_here,\n    address=your_address_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_venue(\n    chat_id=your_chat_id_here,\n    latitude=your_latitude_here,\n    longitude=your_longitude_here,\n    title=your_title_here,\n    address=your_address_here,\n    business_connection_id=your_business_connection_id_here,\n    message_thread_id=your_message_thread_id_here,\n    foursquare_id=your_foursquare_id_here,\n    foursquare_type=your_foursquare_type_here,\n    google_place_id=your_google_place_id_here,\n    google_place_type=your_google_place_type_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    message_effect_id=your_message_effect_id_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here,\n    suggested_post_parameters=your_suggested_post_parameters_here\n)\n</code></pre>"},{"location":"methods/send_video/","title":"\ud83d\udd27 send_video","text":"<p>Use this method to send video files, Telegram clients support MPEG4 videos (other formats may be sent as Document). On success, the sent Message is returned. Bots can currently send video files of up to 50 MB in size, this limit may be changed in the future.</p>"},{"location":"methods/send_video/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>video</code> (<code>Path</code> or <code>bytes</code> or <code>str</code> ): Video to send. You can either pass a file_id as String to resend a video that is already on the Telegram servers, or upload a new video file using multipart/form-data.</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Identifier of a business connection, in which the message will be sent</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of a message thread, in which the video will be sent</li> <li><code>duration</code> (<code>int</code> ) (<code>optional</code>): Duration of sent video in seconds</li> <li><code>width</code> (<code>int</code> ) (<code>optional</code>): Video width</li> <li><code>height</code> (<code>int</code> ) (<code>optional</code>): Video height</li> <li><code>thumbnail</code> (<code>Path</code> or <code>bytes</code> or <code>str</code> ) (<code>optional</code>): Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass \u201cattach://\u201d if the thumbnail was uploaded using multipart/form-data under . <li><code>cover</code> (<code>Path</code> or <code>bytes</code> or <code>str</code> ) (<code>optional</code>): Cover for the video in the message. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass \u201cattach://\u201d to upload a new one using multipart/form-data under  name. <li><code>start_timestamp</code> (<code>int</code> ) (<code>optional</code>)</li> <li><code>caption</code> (<code>str</code> ) (<code>optional</code>): Video caption (may also be used when resending videos by file_id), 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>Literal</code> ) (<code>optional</code>): Mode for parsing entities in the video caption</li> <li><code>caption_entities</code> (List of MessageEntity ) (<code>optional</code>): List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>show_caption_above_media</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the caption must be shown above the message media. Supported only for animation, photo and video messages.</li> <li><code>has_spoiler</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the video should be sent as a spoiler</li> <li><code>supports_streaming</code> (<code>bool</code> ) (<code>optional</code>): Pass True, if the uploaded video is suitable for streaming</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound.</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the sent message from forwarding and saving</li> <li><code>message_effect_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier of the message effect</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): Reply parameters.</li> <li><code>reply_markup</code> (InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply ) (<code>optional</code>): Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>): Pass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> <li><code>suggested_post_parameters</code> (SuggestedPostParameters ) (<code>optional</code>): A JSON-serialized object containing the parameters of the suggested post to send; for direct messages chats only. If the message is sent as a reply to another suggested post, then that suggested post is automatically declined.</li>"},{"location":"methods/send_video/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_video/#message","title":"Message","text":""},{"location":"methods/send_video/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_video(\n    chat_id=your_chat_id_here,\n    video=your_video_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_video(\n    chat_id=your_chat_id_here,\n    video=your_video_here,\n    business_connection_id=your_business_connection_id_here,\n    message_thread_id=your_message_thread_id_here,\n    duration=your_duration_here,\n    width=your_width_here,\n    height=your_height_here,\n    thumbnail=your_thumbnail_here,\n    cover=your_cover_here,\n    start_timestamp=your_start_timestamp_here,\n    caption=your_caption_here,\n    parse_mode=your_parse_mode_here,\n    caption_entities=your_caption_entities_here,\n    show_caption_above_media=your_show_caption_above_media_here,\n    has_spoiler=your_has_spoiler_here,\n    supports_streaming=your_supports_streaming_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    message_effect_id=your_message_effect_id_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here,\n    suggested_post_parameters=your_suggested_post_parameters_here\n)\n</code></pre>"},{"location":"methods/send_video_note/","title":"\ud83d\udd27 send_video_note","text":"<p>As of v.4.0, Telegram clients support rounded square MPEG4 videos of up to 1 minute long.</p>"},{"location":"methods/send_video_note/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>video_note</code> (<code>Path</code> or <code>bytes</code> or <code>str</code> )</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Identifier of a business connection, in which the message will be sent</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of a message thread, in which the video note will be sent</li> <li><code>duration</code> (<code>int</code> ) (<code>optional</code>): Duration of sent video in seconds</li> <li><code>length</code> (<code>int</code> ) (<code>optional</code>): Video width and height, i.e. diameter of the video message</li> <li><code>thumbnail</code> (<code>Path</code> or <code>bytes</code> or <code>str</code> ) (<code>optional</code>): Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass \u201cattach://\u201d if the thumbnail was uploaded using multipart/form-data under . <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound.</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the sent message from forwarding and saving</li> <li><code>message_effect_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier of the message effect</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): Reply parameters.</li> <li><code>reply_markup</code> (InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply ) (<code>optional</code>): Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>): Pass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> <li><code>suggested_post_parameters</code> (SuggestedPostParameters ) (<code>optional</code>): A JSON-serialized object containing the parameters of the suggested post to send; for direct messages chats only. If the message is sent as a reply to another suggested post, then that suggested post is automatically declined.</li>"},{"location":"methods/send_video_note/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_video_note/#message","title":"Message","text":""},{"location":"methods/send_video_note/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_video_note(\n    chat_id=your_chat_id_here,\n    video_note=your_video_note_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_video_note(\n    chat_id=your_chat_id_here,\n    video_note=your_video_note_here,\n    business_connection_id=your_business_connection_id_here,\n    message_thread_id=your_message_thread_id_here,\n    duration=your_duration_here,\n    length=your_length_here,\n    thumbnail=your_thumbnail_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    message_effect_id=your_message_effect_id_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here,\n    suggested_post_parameters=your_suggested_post_parameters_here\n)\n</code></pre>"},{"location":"methods/send_voice/","title":"\ud83d\udd27 send_voice","text":"<p>Use this method to send audio files, if you want Telegram clients to display the file as a playable voice message. For this to work, your audio must be in an .OGG file encoded with OPUS, or in .MP3 format, or in .M4A format (other formats may be sent as Audio or Document). On success, the sent Message is returned. Bots can currently send voice messages of up to 50 MB in size, this limit may be changed in the future.</p>"},{"location":"methods/send_voice/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>voice</code> (<code>Path</code> or <code>bytes</code> or <code>str</code> ): Audio file to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data.</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier for the target business connection</li> <li><code>message_thread_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of a message thread, in which the message will be sent</li> <li><code>caption</code> (<code>str</code> ) (<code>optional</code>): Voice message caption, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>Literal</code> ) (<code>optional</code>): Mode for parsing entities in the voice message caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ) (<code>optional</code>): A JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>duration</code> (<code>int</code> ) (<code>optional</code>): Duration of the voice message in seconds</li> <li><code>disable_notification</code> (<code>bool</code> ) (<code>optional</code>): Sends the message silently. Users will receive a notification with no sound.</li> <li><code>protect_content</code> (<code>bool</code> ) (<code>optional</code>): Protects the contents of the sent message from forwarding and saving</li> <li><code>message_effect_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier for the message effect</li> <li><code>reply_parameters</code> (ReplyParameters ) (<code>optional</code>): Reply parameters.</li> <li><code>reply_markup</code> (InlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply ) (<code>optional</code>): Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.</li> <li><code>allow_paid_broadcast</code> (<code>bool</code> ) (<code>optional</code>): Pass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance</li> <li><code>direct_messages_topic_id</code> (<code>int</code> ) (<code>optional</code>): Identifier of the direct messages topic to which the message will be sent; required if the message is sent to a direct messages chat</li> <li><code>suggested_post_parameters</code> (SuggestedPostParameters ) (<code>optional</code>): A JSON-serialized object containing the parameters of the suggested post to send; for direct messages chats only. If the message is sent as a reply to another suggested post, then that suggested post is automatically declined.</li> </ul>"},{"location":"methods/send_voice/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/send_voice/#message","title":"Message","text":""},{"location":"methods/send_voice/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.send_voice(\n    chat_id=your_chat_id_here,\n    voice=your_voice_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.send_voice(\n    chat_id=your_chat_id_here,\n    voice=your_voice_here,\n    business_connection_id=your_business_connection_id_here,\n    message_thread_id=your_message_thread_id_here,\n    caption=your_caption_here,\n    parse_mode=your_parse_mode_here,\n    caption_entities=your_caption_entities_here,\n    duration=your_duration_here,\n    disable_notification=your_disable_notification_here,\n    protect_content=your_protect_content_here,\n    message_effect_id=your_message_effect_id_here,\n    reply_parameters=your_reply_parameters_here,\n    reply_markup=your_reply_markup_here,\n    allow_paid_broadcast=your_allow_paid_broadcast_here,\n    direct_messages_topic_id=your_direct_messages_topic_id_here,\n    suggested_post_parameters=your_suggested_post_parameters_here\n)\n</code></pre>"},{"location":"methods/set_business_account_bio/","title":"\ud83d\udd27 set_business_account_bio","text":"<p>Changes the bio of a managed business account.</p>"},{"location":"methods/set_business_account_bio/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection</li> <li><code>bio</code> (<code>str</code> ) (<code>optional</code>): The new value of the bio for the business account; 0-140 characters</li> </ul>"},{"location":"methods/set_business_account_bio/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_business_account_bio/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_business_account_bio/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_business_account_bio(\n    business_connection_id=your_business_connection_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_business_account_bio(\n    business_connection_id=your_business_connection_id_here,\n    bio=your_bio_here\n)\n</code></pre>"},{"location":"methods/set_business_account_gift_settings/","title":"\ud83d\udd27 set_business_account_gift_settings","text":"<p>Changes the privacy settings pertaining to incoming gifts in a managed business account.</p>"},{"location":"methods/set_business_account_gift_settings/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection</li> <li><code>show_gift_button</code> (<code>bool</code> ): Pass True, if a button for sending a gift to the user or by the business account must always be shown in the input field</li> <li><code>accepted_gift_types</code> (AcceptedGiftTypes ): Types of gifts accepted by the business account</li> </ul>"},{"location":"methods/set_business_account_gift_settings/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_business_account_gift_settings/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_business_account_gift_settings/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_business_account_gift_settings(\n    business_connection_id=your_business_connection_id_here,\n    show_gift_button=your_show_gift_button_here,\n    accepted_gift_types=your_accepted_gift_types_here\n)\n</code></pre>"},{"location":"methods/set_business_account_name/","title":"\ud83d\udd27 set_business_account_name","text":"<p>Changes the first and last name of a managed business account.</p>"},{"location":"methods/set_business_account_name/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection</li> <li><code>first_name</code> (<code>str</code> ): The new value of the first name for the business account; 1-64 characters</li> <li><code>last_name</code> (<code>str</code> ) (<code>optional</code>): The new value of the last name for the business account; 0-64 characters</li> </ul>"},{"location":"methods/set_business_account_name/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_business_account_name/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_business_account_name/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_business_account_name(\n    business_connection_id=your_business_connection_id_here,\n    first_name=your_first_name_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_business_account_name(\n    business_connection_id=your_business_connection_id_here,\n    first_name=your_first_name_here,\n    last_name=your_last_name_here\n)\n</code></pre>"},{"location":"methods/set_business_account_profile_photo/","title":"\ud83d\udd27 set_business_account_profile_photo","text":"<p>Changes the profile photo of a managed business account.</p>"},{"location":"methods/set_business_account_profile_photo/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection</li> <li><code>photo</code> (InputProfilePhotoStatic or InputProfilePhotoAnimated ): The new profile photo to set</li> <li><code>is_public</code> (<code>bool</code> ) (<code>optional</code>): Pass True to set the public photo, which will be visible even if the main photo is hidden by the business account's privacy settings. An account can have only one public photo.</li> </ul>"},{"location":"methods/set_business_account_profile_photo/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_business_account_profile_photo/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_business_account_profile_photo/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_business_account_profile_photo(\n    business_connection_id=your_business_connection_id_here,\n    photo=your_photo_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_business_account_profile_photo(\n    business_connection_id=your_business_connection_id_here,\n    photo=your_photo_here,\n    is_public=your_is_public_here\n)\n</code></pre>"},{"location":"methods/set_business_account_username/","title":"\ud83d\udd27 set_business_account_username","text":"<p>Changes the username of a managed business account.</p>"},{"location":"methods/set_business_account_username/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection</li> <li><code>username</code> (<code>str</code> ) (<code>optional</code>): The new value of the username for the business account; 0-32 characters</li> </ul>"},{"location":"methods/set_business_account_username/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_business_account_username/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_business_account_username/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_business_account_username(\n    business_connection_id=your_business_connection_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_business_account_username(\n    business_connection_id=your_business_connection_id_here,\n    username=your_username_here\n)\n</code></pre>"},{"location":"methods/set_chat_administrator_custom_title/","title":"\ud83d\udd27 set_chat_administrator_custom_title","text":"<p>Use this method to set a custom title for an administrator in a supergroup promoted by the bot.</p>"},{"location":"methods/set_chat_administrator_custom_title/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)</li> <li><code>user_id</code> (<code>int</code> ): Unique identifier of the target user</li> <li><code>custom_title</code> (<code>str</code> ): New custom title for the administrator; 0-16 characters, emoji are not allowed</li> </ul>"},{"location":"methods/set_chat_administrator_custom_title/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_chat_administrator_custom_title/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_chat_administrator_custom_title/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_chat_administrator_custom_title(\n    chat_id=your_chat_id_here,\n    user_id=your_user_id_here,\n    custom_title=your_custom_title_here\n)\n</code></pre>"},{"location":"methods/set_chat_description/","title":"\ud83d\udd27 set_chat_description","text":"<p>Use this method to change the description of a supergroup or a channel.</p>"},{"location":"methods/set_chat_description/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>description</code> (<code>str</code> ) (<code>optional</code>): Str: New chat description, 0-255 characters</li> </ul>"},{"location":"methods/set_chat_description/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_chat_description/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_chat_description/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_chat_description(\n    chat_id=your_chat_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_chat_description(\n    chat_id=your_chat_id_here,\n    description=your_description_here\n)\n</code></pre>"},{"location":"methods/set_chat_menu_button/","title":"\ud83d\udd27 set_chat_menu_button","text":"<p>Use this method to change the bot's menu button in a private chat,</p>"},{"location":"methods/set_chat_menu_button/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> ) (<code>optional</code>): Unique identifier for the target private chat. If not specified, default bot's menu button will be changed.</li> <li><code>menu_button</code> (MenuButton ) (<code>optional</code>): A JSON-serialized object for the new bot's menu button. Defaults to MenuButtonDefault</li> </ul>"},{"location":"methods/set_chat_menu_button/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_chat_menu_button/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_chat_menu_button/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_chat_menu_button(\n    chat_id=your_chat_id_here,\n    menu_button=your_menu_button_here\n)\n</code></pre>"},{"location":"methods/set_chat_permissions/","title":"\ud83d\udd27 set_chat_permissions","text":"<p>Use this method to set default chat permissions for all members.</p>"},{"location":"methods/set_chat_permissions/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)</li> <li><code>permissions</code> (ChatPermissions ): New default chat permissions</li> <li><code>use_independent_chat_permissions</code> (<code>bool</code> ) (<code>optional</code>): Pass True if chat permissions are set independently. Otherwise, the can_send_other_messages and can_add_web_page_previews permissions will imply the can_send_messages, can_send_audios, can_send_documents, can_send_photos, can_send_videos, can_send_video_notes, and can_send_voice_notes permissions; the can_send_polls permission will imply the can_send_messages permission.</li> </ul>"},{"location":"methods/set_chat_permissions/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_chat_permissions/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_chat_permissions/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_chat_permissions(\n    chat_id=your_chat_id_here,\n    permissions=your_permissions_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_chat_permissions(\n    chat_id=your_chat_id_here,\n    permissions=your_permissions_here,\n    use_independent_chat_permissions=your_use_independent_chat_permissions_here\n)\n</code></pre>"},{"location":"methods/set_chat_photo/","title":"\ud83d\udd27 set_chat_photo","text":"<p>Use this method to set a new profile photo for the chat. Photos can't be changed for private chats.</p>"},{"location":"methods/set_chat_photo/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Int or Str: Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>photo</code> (<code>Path</code> or <code>bytes</code> or <code>str</code> ): InputFile: New chat photo, uploaded using multipart/form-data</li> </ul>"},{"location":"methods/set_chat_photo/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_chat_photo/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_chat_photo/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_chat_photo(\n    chat_id=your_chat_id_here,\n    photo=your_photo_here\n)\n</code></pre>"},{"location":"methods/set_chat_sticker_set/","title":"\ud83d\udd27 set_chat_sticker_set","text":"<p>Use this method to set a new group sticker set for a supergroup. The bot must be an administrator in the chat</p>"},{"location":"methods/set_chat_sticker_set/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)</li> <li><code>sticker_set_name</code> (<code>str</code> ): Name of the sticker set to be set as the group sticker set</li> </ul>"},{"location":"methods/set_chat_sticker_set/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_chat_sticker_set/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_chat_sticker_set/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_chat_sticker_set(\n    chat_id=your_chat_id_here,\n    sticker_set_name=your_sticker_set_name_here\n)\n</code></pre>"},{"location":"methods/set_chat_title/","title":"\ud83d\udd27 set_chat_title","text":"<p>Use this method to change the title of a chat. Titles can't be changed for private chats.</p>"},{"location":"methods/set_chat_title/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>title</code> (<code>str</code> ): New chat title, 1-255 characters</li> </ul>"},{"location":"methods/set_chat_title/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_chat_title/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_chat_title/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_chat_title(\n    chat_id=your_chat_id_here,\n    title=your_title_here\n)\n</code></pre>"},{"location":"methods/set_custom_emoji_sticker_set_thumbnail/","title":"\ud83d\udd27 set_custom_emoji_sticker_set_thumbnail","text":"<p>Use this method to set the thumbnail of a custom emoji sticker set.</p>"},{"location":"methods/set_custom_emoji_sticker_set_thumbnail/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>name</code> (<code>str</code> ): Sticker set name</li> <li><code>custom_emoji_id</code> (<code>str</code> ) (<code>optional</code>): Custom emoji identifier of a sticker from the sticker set; pass an empty string to drop the thumbnail and use the first sticker as the thumbnail.</li> </ul>"},{"location":"methods/set_custom_emoji_sticker_set_thumbnail/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_custom_emoji_sticker_set_thumbnail/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_custom_emoji_sticker_set_thumbnail/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_custom_emoji_sticker_set_thumbnail(\n    name=your_name_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_custom_emoji_sticker_set_thumbnail(\n    name=your_name_here,\n    custom_emoji_id=your_custom_emoji_id_here\n)\n</code></pre>"},{"location":"methods/set_game_score/","title":"\ud83d\udd27 set_game_score","text":""},{"location":"methods/set_game_score/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>user_id</code> (<code>int</code> )</li> <li><code>score</code> (<code>int</code> )</li> <li><code>force</code> (<code>bool</code> ) (<code>optional</code>)</li> <li><code>disable_edit_message</code> (<code>bool</code> ) (<code>optional</code>)</li> <li><code>chat_id</code> (<code>int</code> ) (<code>optional</code>)</li> <li><code>message_id</code> (<code>int</code> ) (<code>optional</code>)</li> <li><code>inline_message_id</code> (<code>str</code> ) (<code>optional</code>)</li> </ul>"},{"location":"methods/set_game_score/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_game_score/#message-or-bool","title":"Message or <code>bool</code>","text":""},{"location":"methods/set_game_score/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_game_score(\n    user_id=your_user_id_here,\n    score=your_score_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_game_score(\n    user_id=your_user_id_here,\n    score=your_score_here,\n    force=your_force_here,\n    disable_edit_message=your_disable_edit_message_here,\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here,\n    inline_message_id=your_inline_message_id_here\n)\n</code></pre>"},{"location":"methods/set_message_reaction/","title":"\ud83d\udd27 set_message_reaction","text":"<p>Use this method to change the chosen reactions on a message.</p>"},{"location":"methods/set_message_reaction/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)</li> <li><code>message_id</code> (<code>int</code> ): Identifier of the message to set reaction to</li> <li><code>reaction</code> (List of ReactionTypeCustomEmoji or ReactionTypeEmoji or ReactionTypePaid ) (<code>optional</code>): New list of reaction types to set on the message. Currently, as non-premium users, bots can set up to one reaction per message. A custom emoji reaction can be used if it is either already present on the message or explicitly allowed by chat administrators.</li> <li><code>is_big</code> (<code>bool</code> ) (<code>optional</code>): Pass True to set the reaction with a big animation</li> </ul>"},{"location":"methods/set_message_reaction/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_message_reaction/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_message_reaction/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_message_reaction(\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_message_reaction(\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here,\n    reaction=your_reaction_here,\n    is_big=your_is_big_here\n)\n</code></pre>"},{"location":"methods/set_my_commands/","title":"\ud83d\udd27 set_my_commands","text":"<p>Use this method to change the list of the bot's commands.</p>"},{"location":"methods/set_my_commands/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>commands</code> (List of BotCommand ): List of BotCommand. At most 100 commands can be specified.</li> <li><code>scope</code> (BotCommandScope ) (<code>optional</code>): The scope of users for which the commands are relevant. Defaults to BotCommandScopeDefault.</li> <li><code>language_code</code> (<code>str</code> ) (<code>optional</code>): A two-letter ISO 639-1 language code. If empty, commands will be applied to all users from the given scope, for whose language there are no dedicated commands</li> </ul>"},{"location":"methods/set_my_commands/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_my_commands/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_my_commands/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_my_commands(\n    commands=your_commands_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_my_commands(\n    commands=your_commands_here,\n    scope=your_scope_here,\n    language_code=your_language_code_here\n)\n</code></pre>"},{"location":"methods/set_my_default_administrator_rights/","title":"\ud83d\udd27 set_my_default_administrator_rights","text":"<p>Use this method to change the default administrator rights requested by the bot</p>"},{"location":"methods/set_my_default_administrator_rights/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>rights</code> (ChatAdministratorRights ) (<code>optional</code>): A JSON-serialized object describing new default administrator rights. If not specified, the default administrator rights will be cleared.</li> <li><code>for_channels</code> (<code>bool</code> ) (<code>optional</code>): Pass True to change the default administrator rights of the bot in channels. Otherwise, the default administrator rights of the bot for groups and supergroups will be changed.</li> </ul>"},{"location":"methods/set_my_default_administrator_rights/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_my_default_administrator_rights/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_my_default_administrator_rights/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_my_default_administrator_rights(\n    rights=your_rights_here,\n    for_channels=your_for_channels_here\n)\n</code></pre>"},{"location":"methods/set_my_description/","title":"\ud83d\udd27 set_my_description","text":"<p>Use this method to change the bot's description, which is shown in</p>"},{"location":"methods/set_my_description/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>description</code> (<code>str</code> ) (<code>optional</code>): New bot description; 0-512 characters. Pass an empty string to remove the dedicated description for the given language.</li> <li><code>language_code</code> (<code>str</code> ) (<code>optional</code>): A two-letter ISO 639-1 language code. If empty, the description will be applied to all users for whose language there is no dedicated description.</li> </ul>"},{"location":"methods/set_my_description/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_my_description/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_my_description/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_my_description(\n    description=your_description_here,\n    language_code=your_language_code_here\n)\n</code></pre>"},{"location":"methods/set_my_name/","title":"\ud83d\udd27 set_my_name","text":"<p>Use this method to change the bot's name. Returns True on success.</p>"},{"location":"methods/set_my_name/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>name</code> (<code>str</code> ) (<code>optional</code>): Optional. New bot name; 0-64 characters. Pass an empty string to remove the dedicated name for the given language.</li> <li><code>language_code</code> (<code>str</code> ) (<code>optional</code>): Optional. A two-letter ISO 639-1 language code. If empty, the name will be shown to all users for whose language there is no dedicated name.</li> </ul>"},{"location":"methods/set_my_name/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_my_name/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_my_name/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_my_name(\n    name=your_name_here,\n    language_code=your_language_code_here\n)\n</code></pre>"},{"location":"methods/set_my_short_description/","title":"\ud83d\udd27 set_my_short_description","text":"<p>Use this method to change the bot's short description, which is shown on the bot's profile page and</p>"},{"location":"methods/set_my_short_description/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>short_description</code> (<code>str</code> ) (<code>optional</code>): New short description for the bot; 0-120 characters. Pass an empty string to remove the dedicated short description for the given language.</li> <li><code>language_code</code> (<code>str</code> ) (<code>optional</code>): A two-letter ISO 639-1 language code. If empty, the short description will be applied to all users for whose language there is no dedicated short description.</li> </ul>"},{"location":"methods/set_my_short_description/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_my_short_description/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_my_short_description/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_my_short_description(\n    short_description=your_short_description_here,\n    language_code=your_language_code_here\n)\n</code></pre>"},{"location":"methods/set_passport_data_errors/","title":"\ud83d\udd27 set_passport_data_errors","text":""},{"location":"methods/set_passport_data_errors/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>user_id</code> (<code>int</code> )</li> <li><code>errors</code> (List of PassportElementError )</li> </ul>"},{"location":"methods/set_passport_data_errors/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_passport_data_errors/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_passport_data_errors/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_passport_data_errors(\n    user_id=your_user_id_here,\n    errors=your_errors_here\n)\n</code></pre>"},{"location":"methods/set_sticker_emoji_list/","title":"\ud83d\udd27 set_sticker_emoji_list","text":"<p>Use this method to set the emoji list of a sticker set.</p>"},{"location":"methods/set_sticker_emoji_list/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>sticker</code> (<code>str</code> )</li> <li><code>emoji_list</code> (List of <code>str</code> ): List of emojis</li> </ul>"},{"location":"methods/set_sticker_emoji_list/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_sticker_emoji_list/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_sticker_emoji_list/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_sticker_emoji_list(\n    sticker=your_sticker_here,\n    emoji_list=your_emoji_list_here\n)\n</code></pre>"},{"location":"methods/set_sticker_keywords/","title":"\ud83d\udd27 set_sticker_keywords","text":"<p>Use this method to change search keywords assigned to a regular or custom emoji sticker.</p>"},{"location":"methods/set_sticker_keywords/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>sticker</code> (<code>str</code> ): File identifier of the sticker.</li> <li><code>keywords</code> (List of <code>str</code> ) (<code>optional</code>): A JSON-serialized list of 0-20 search keywords for the sticker with total length of up to 64 characters</li> </ul>"},{"location":"methods/set_sticker_keywords/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_sticker_keywords/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_sticker_keywords/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_sticker_keywords(\n    sticker=your_sticker_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_sticker_keywords(\n    sticker=your_sticker_here,\n    keywords=your_keywords_here\n)\n</code></pre>"},{"location":"methods/set_sticker_mask_position/","title":"\ud83d\udd27 set_sticker_mask_position","text":"<p>Use this method to change the mask position of a mask sticker.</p>"},{"location":"methods/set_sticker_mask_position/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>sticker</code> (<code>str</code> ): File identifier of the sticker.</li> <li><code>mask_position</code> (MaskPosition ) (<code>optional</code>): A JSON-serialized object for position where the mask should be placed on faces.</li> </ul>"},{"location":"methods/set_sticker_mask_position/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_sticker_mask_position/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_sticker_mask_position/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_sticker_mask_position(\n    sticker=your_sticker_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_sticker_mask_position(\n    sticker=your_sticker_here,\n    mask_position=your_mask_position_here\n)\n</code></pre>"},{"location":"methods/set_sticker_position_in_set/","title":"\ud83d\udd27 set_sticker_position_in_set","text":"<p>Use this method to move a sticker in a set created by the bot to a specific position . Returns True on success.</p>"},{"location":"methods/set_sticker_position_in_set/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>sticker</code> (<code>str</code> ): File identifier of the sticker</li> <li><code>position</code> (<code>int</code> ): New sticker position in the set, zero-based</li> </ul>"},{"location":"methods/set_sticker_position_in_set/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_sticker_position_in_set/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_sticker_position_in_set/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_sticker_position_in_set(\n    sticker=your_sticker_here,\n    position=your_position_here\n)\n</code></pre>"},{"location":"methods/set_sticker_set_thumbnail/","title":"\ud83d\udd27 set_sticker_set_thumbnail","text":"<p>Use this method to set the thumbnail of a sticker set.</p>"},{"location":"methods/set_sticker_set_thumbnail/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>name</code> (<code>str</code> ): Sticker set name</li> <li><code>user_id</code> (<code>int</code> ): User identifier</li> <li><code>format</code> (<code>str</code> )</li> <li><code>thumbnail</code> (<code>Path</code> or <code>bytes</code> or <code>str</code> ) (<code>optional</code>): A .WEBP or .PNG image with the thumbnail, must be up to 128 kilobytes in size and have a width and height of exactly 100px, or a .TGS animation with a thumbnail up to 32 kilobytes in size (see https://core.telegram.org/stickers#animated-sticker-requirements for animated sticker technical requirements), or a WEBM video with the thumbnail up to 32 kilobytes in size; see https://core.telegram.org/stickers#video-sticker-requirements for video sticker technical requirements. Pass a file_id as a String to send a file that already exists on the Telegram servers, pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data. More information on Sending Files \u00bb. Animated and video sticker set thumbnails can't be uploaded via HTTP URL. If omitted, then the thumbnail is dropped and the first sticker is used as the thumbnail.</li> </ul>"},{"location":"methods/set_sticker_set_thumbnail/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_sticker_set_thumbnail/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_sticker_set_thumbnail/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_sticker_set_thumbnail(\n    name=your_name_here,\n    user_id=your_user_id_here,\n    format=your_format_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_sticker_set_thumbnail(\n    name=your_name_here,\n    user_id=your_user_id_here,\n    format=your_format_here,\n    thumbnail=your_thumbnail_here\n)\n</code></pre>"},{"location":"methods/set_sticker_set_title/","title":"\ud83d\udd27 set_sticker_set_title","text":"<p>Use this method to set the title of a created sticker set.</p>"},{"location":"methods/set_sticker_set_title/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>name</code> (<code>str</code> ): Sticker set name</li> <li><code>title</code> (<code>str</code> ): New sticker set title</li> </ul>"},{"location":"methods/set_sticker_set_title/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_sticker_set_title/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_sticker_set_title/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_sticker_set_title(\n    name=your_name_here,\n    title=your_title_here\n)\n</code></pre>"},{"location":"methods/set_user_emoji_status/","title":"\ud83d\udd27 set_user_emoji_status","text":"<p>Changes the emoji status for a given user that previously allowed the bot to manage their emoji status via the Mini App method requestEmojiStatusAccess. Returns True on success.</p>"},{"location":"methods/set_user_emoji_status/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>user_id</code> (<code>int</code> ): OUnique identifier of the target user.</li> <li><code>emoji_status_custom_emoji_id</code> (<code>str</code> ) (<code>optional</code>): Custom emoji identifier of the emoji status to set. Pass an empty string to remove the status.</li> <li><code>emoji_status_expiration_date</code> (<code>int</code> ) (<code>optional</code>): Expiration date of the emoji status, if any.</li> </ul>"},{"location":"methods/set_user_emoji_status/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_user_emoji_status/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_user_emoji_status/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_user_emoji_status(\n    user_id=your_user_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_user_emoji_status(\n    user_id=your_user_id_here,\n    emoji_status_custom_emoji_id=your_emoji_status_custom_emoji_id_here,\n    emoji_status_expiration_date=your_emoji_status_expiration_date_here\n)\n</code></pre>"},{"location":"methods/set_webhook/","title":"\ud83d\udd27 set_webhook","text":"<p>Use this method to specify a URL and receive incoming updates via an outgoing webhook.</p>"},{"location":"methods/set_webhook/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>url</code> (<code>str</code> ): HTTPS URL to send updates to. Use an empty string to remove webhook integration, defaults to None</li> <li><code>certificate</code> (<code>Path</code> or <code>bytes</code> or <code>str</code> ) (<code>optional</code>): Upload your public key certificate so that the root certificate in use can be checked, defaults to None</li> <li><code>ip_address</code> (<code>str</code> ) (<code>optional</code>): The fixed IP address which will be used to send webhook requests instead of the IP address resolved through DNS, defaults to None</li> <li><code>max_connections</code> (<code>int</code> ) (<code>optional</code>): The maximum allowed number of simultaneous HTTPS connections to the webhook for update delivery, 1-100. Defaults to 40. Use lower values to limit the load on your bot's server, and higher values to increase your bot's throughput, defaults to None</li> <li><code>allowed_updates</code> (List of <code>str</code> ) (<code>optional</code>): **A JSON-serialized list of the update types you want your bot to receive. For example, specify [\u201cmessage\u201d, \u201cedited_channel_post\u201d, \u201ccallback_query\u201d] to only receive updates of these types. See Update for a complete list of available update types. Specify an empty list to receive all update types except chat_member (default). If not specified, the previous setting will be used.</li> </ul> <p>Please note that this parameter doesn't affect updates created before the call to the setWebhook, so unwanted updates may be received for a short period of time. Defaults to None - <code>drop_pending_updates</code> (<code>bool</code> ) (<code>optional</code>): Pass True to drop all pending updates, defaults to None - <code>secret_token</code> (<code>str</code> ) (<code>optional</code>): A secret token to be sent in a header \u201cX-Telegram-Bot-Api-Secret-Token\u201d in every webhook request, 1-256 characters. Only characters A-Z, a-z, 0-9, _ and - are allowed. The header is useful to ensure that the request comes from a webhook set by you. Defaults to None**</p>"},{"location":"methods/set_webhook/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/set_webhook/#bool","title":"<code>bool</code>","text":""},{"location":"methods/set_webhook/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.set_webhook(\n    url=your_url_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.set_webhook(\n    url=your_url_here,\n    certificate=your_certificate_here,\n    ip_address=your_ip_address_here,\n    max_connections=your_max_connections_here,\n    allowed_updates=your_allowed_updates_here,\n    drop_pending_updates=your_drop_pending_updates_here,\n    secret_token=your_secret_token_here\n)\n</code></pre>"},{"location":"methods/stop/","title":"\ud83d\udd27 stop","text":"<p>Use this method to stop getting and handling new updates.</p>"},{"location":"methods/stop/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/stop/#literal","title":"<code>Literal</code>","text":""},{"location":"methods/stop/#examples","title":"\ud83d\udcc0 Examples","text":""},{"location":"methods/stop_message_live_location/","title":"\ud83d\udd27 stop_message_live_location","text":""},{"location":"methods/stop_message_live_location/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>)</li> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ) (<code>optional</code>)</li> <li><code>message_id</code> (<code>int</code> ) (<code>optional</code>)</li> <li><code>inline_message_id</code> (<code>str</code> ) (<code>optional</code>)</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ) (<code>optional</code>)</li> </ul>"},{"location":"methods/stop_message_live_location/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/stop_message_live_location/#message-or-bool","title":"Message or <code>bool</code>","text":""},{"location":"methods/stop_message_live_location/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.stop_message_live_location(\n    business_connection_id=your_business_connection_id_here,\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here,\n    inline_message_id=your_inline_message_id_here,\n    reply_markup=your_reply_markup_here\n)\n</code></pre>"},{"location":"methods/stop_poll/","title":"\ud83d\udd27 stop_poll","text":"<p>Use this method to stop a poll which was sent by the bot. On success, the stopped Poll is returned.</p>"},{"location":"methods/stop_poll/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel</li> <li><code>message_id</code> (<code>int</code> ): Identifier of the original message with the poll</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Identifier of the business connection to send the message through</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ) (<code>optional</code>): A JSON-serialized object for a new message markup.</li> </ul>"},{"location":"methods/stop_poll/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/stop_poll/#poll","title":"Poll","text":""},{"location":"methods/stop_poll/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.stop_poll(\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.stop_poll(\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here,\n    business_connection_id=your_business_connection_id_here,\n    reply_markup=your_reply_markup_here\n)\n</code></pre>"},{"location":"methods/transfer_business_account_stars/","title":"\ud83d\udd27 transfer_business_account_stars","text":"<p>Transfers Telegram Stars from the business account balance to the bot's balance.</p>"},{"location":"methods/transfer_business_account_stars/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection</li> <li><code>star_count</code> (<code>int</code> ): Number of Telegram Stars to transfer; 1-10000</li> </ul>"},{"location":"methods/transfer_business_account_stars/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/transfer_business_account_stars/#bool","title":"<code>bool</code>","text":""},{"location":"methods/transfer_business_account_stars/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.transfer_business_account_stars(\n    business_connection_id=your_business_connection_id_here,\n    star_count=your_star_count_here\n)\n</code></pre>"},{"location":"methods/transfer_gift/","title":"\ud83d\udd27 transfer_gift","text":"<p>Transfers an owned unique gift to another user. Requires the can_transfer_and_upgrade_gifts business bot right.</p>"},{"location":"methods/transfer_gift/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection.</li> <li><code>owned_gift_id</code> (<code>str</code> ): Unique identifier of the regular gift that should be transferred.</li> <li><code>new_owner_chat_id</code> (<code>int</code> ): Unique identifier of the chat which will own the gift. The chat must be active in the last 24 hours.</li> <li><code>star_count</code> (<code>int</code> ) (<code>optional</code>): The amount of Telegram Stars that will be paid for the transfer from the business account balance. If positive, then the can_transfer_stars business bot right is required.</li> </ul>"},{"location":"methods/transfer_gift/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/transfer_gift/#bool","title":"<code>bool</code>","text":""},{"location":"methods/transfer_gift/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.transfer_gift(\n    business_connection_id=your_business_connection_id_here,\n    owned_gift_id=your_owned_gift_id_here,\n    new_owner_chat_id=your_new_owner_chat_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.transfer_gift(\n    business_connection_id=your_business_connection_id_here,\n    owned_gift_id=your_owned_gift_id_here,\n    new_owner_chat_id=your_new_owner_chat_id_here,\n    star_count=your_star_count_here\n)\n</code></pre>"},{"location":"methods/unban_chat_member/","title":"\ud83d\udd27 unban_chat_member","text":"<p>Use this method to unban a previously kicked user in a supergroup or channel.</p>"},{"location":"methods/unban_chat_member/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target group or username of the target supergroup or channel (in the format @username)</li> <li><code>user_id</code> (<code>int</code> ): Unique identifier of the target user</li> <li><code>only_if_banned</code> (<code>bool</code> ) (<code>optional</code>): Do nothing if the user is not banned</li> </ul>"},{"location":"methods/unban_chat_member/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/unban_chat_member/#bool","title":"<code>bool</code>","text":""},{"location":"methods/unban_chat_member/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.unban_chat_member(\n    chat_id=your_chat_id_here,\n    user_id=your_user_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.unban_chat_member(\n    chat_id=your_chat_id_here,\n    user_id=your_user_id_here,\n    only_if_banned=your_only_if_banned_here\n)\n</code></pre>"},{"location":"methods/unban_chat_sender_chat/","title":"\ud83d\udd27 unban_chat_sender_chat","text":"<p>Use this method to unban a previously banned channel chat in a supergroup or channel.</p>"},{"location":"methods/unban_chat_sender_chat/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>sender_chat_id</code> (<code>int</code> ): Unique identifier of the target sender chat.</li> </ul>"},{"location":"methods/unban_chat_sender_chat/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/unban_chat_sender_chat/#bool","title":"<code>bool</code>","text":""},{"location":"methods/unban_chat_sender_chat/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.unban_chat_sender_chat(\n    chat_id=your_chat_id_here,\n    sender_chat_id=your_sender_chat_id_here\n)\n</code></pre>"},{"location":"methods/unhide_general_forum_topic/","title":"\ud83d\udd27 unhide_general_forum_topic","text":"<p>Use this method to unhide the 'General' topic in a forum supergroup chat.</p>"},{"location":"methods/unhide_general_forum_topic/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> </ul>"},{"location":"methods/unhide_general_forum_topic/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/unhide_general_forum_topic/#bool","title":"<code>bool</code>","text":""},{"location":"methods/unhide_general_forum_topic/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.unhide_general_forum_topic(\n    chat_id=your_chat_id_here\n)\n</code></pre>"},{"location":"methods/unpin_all_chat_messages/","title":"\ud83d\udd27 unpin_all_chat_messages","text":"<p>Use this method to unpin a all pinned messages in a supergroup chat.</p>"},{"location":"methods/unpin_all_chat_messages/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Int or Str: Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> </ul>"},{"location":"methods/unpin_all_chat_messages/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/unpin_all_chat_messages/#bool","title":"<code>bool</code>","text":""},{"location":"methods/unpin_all_chat_messages/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.unpin_all_chat_messages(\n    chat_id=your_chat_id_here\n)\n</code></pre>"},{"location":"methods/unpin_all_forum_topic_messages/","title":"\ud83d\udd27 unpin_all_forum_topic_messages","text":"<p>Use this method to clear the list of pinned messages in a forum topic. The bot must be an administrator in the</p>"},{"location":"methods/unpin_all_forum_topic_messages/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>message_thread_id</code> (<code>int</code> ): Identifier of the topic</li> </ul>"},{"location":"methods/unpin_all_forum_topic_messages/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/unpin_all_forum_topic_messages/#bool","title":"<code>bool</code>","text":""},{"location":"methods/unpin_all_forum_topic_messages/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.unpin_all_forum_topic_messages(\n    chat_id=your_chat_id_here,\n    message_thread_id=your_message_thread_id_here\n)\n</code></pre>"},{"location":"methods/unpin_all_general_forum_topic_messages/","title":"\ud83d\udd27 unpin_all_general_forum_topic_messages","text":"<p>Use this method to clear the list of pinned messages in a General forum topic.</p>"},{"location":"methods/unpin_all_general_forum_topic_messages/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of chat</li> </ul>"},{"location":"methods/unpin_all_general_forum_topic_messages/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/unpin_all_general_forum_topic_messages/#bool","title":"<code>bool</code>","text":""},{"location":"methods/unpin_all_general_forum_topic_messages/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.unpin_all_general_forum_topic_messages(\n    chat_id=your_chat_id_here\n)\n</code></pre>"},{"location":"methods/unpin_chat_message/","title":"\ud83d\udd27 unpin_chat_message","text":"<p>Use this method to unpin specific pinned message in a supergroup chat.</p>"},{"location":"methods/unpin_chat_message/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>message_id</code> (<code>int</code> ) (<code>optional</code>): Int: Identifier of a message to unpin</li> <li><code>business_connection_id</code> (<code>str</code> ) (<code>optional</code>): Unique identifier of the business connection on behalf of which the message will be pinned</li> </ul>"},{"location":"methods/unpin_chat_message/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/unpin_chat_message/#bool","title":"<code>bool</code>","text":""},{"location":"methods/unpin_chat_message/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.unpin_chat_message(\n    chat_id=your_chat_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.unpin_chat_message(\n    chat_id=your_chat_id_here,\n    message_id=your_message_id_here,\n    business_connection_id=your_business_connection_id_here\n)\n</code></pre>"},{"location":"methods/unrestrict_chat_member/","title":"\ud83d\udd27 unrestrict_chat_member","text":"<p>Use this method to unrestrict a user in a supergroup.</p>"},{"location":"methods/unrestrict_chat_member/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target group or username of the target supergroup or channel (in the format @channelusername)</li> <li><code>user_id</code> (<code>int</code> ): Unique identifier of the target user</li> <li><code>use_independent_chat_permissions</code> (<code>bool</code> ) (<code>optional</code>): Pass True if chat permissions are set independently. Otherwise, the can_send_other_messages and can_add_web_page_previews permissions will imply the can_send_messages, can_send_audios, can_send_documents, can_send_photos, can_send_videos, can_send_video_notes, and can_send_voice_notes permissions; the can_send_polls permission will imply the can_send_messages permission.</li> </ul>"},{"location":"methods/unrestrict_chat_member/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/unrestrict_chat_member/#bool","title":"<code>bool</code>","text":""},{"location":"methods/unrestrict_chat_member/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.unrestrict_chat_member(\n    chat_id=your_chat_id_here,\n    user_id=your_user_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.unrestrict_chat_member(\n    chat_id=your_chat_id_here,\n    user_id=your_user_id_here,\n    use_independent_chat_permissions=your_use_independent_chat_permissions_here\n)\n</code></pre>"},{"location":"methods/upgrade_gift/","title":"\ud83d\udd27 upgrade_gift","text":"<p>Upgrades a given regular gift to a unique gift. Requires the can_transfer_and_upgrade_gifts business bot right.</p>"},{"location":"methods/upgrade_gift/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection.</li> <li><code>owned_gift_id</code> (<code>str</code> ): Unique identifier of the regular gift that should be upgraded to a unique one.</li> <li><code>keep_original_details</code> (<code>bool</code> ) (<code>optional</code>): Pass True to keep the original gift text, sender and receiver in the upgraded gift.</li> <li><code>star_count</code> (<code>int</code> ) (<code>optional</code>): The amount of Telegram Stars that will be paid for the upgrade from the business account balance.</li> </ul>"},{"location":"methods/upgrade_gift/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/upgrade_gift/#bool","title":"<code>bool</code>","text":""},{"location":"methods/upgrade_gift/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.upgrade_gift(\n    business_connection_id=your_business_connection_id_here,\n    owned_gift_id=your_owned_gift_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.upgrade_gift(\n    business_connection_id=your_business_connection_id_here,\n    owned_gift_id=your_owned_gift_id_here,\n    keep_original_details=your_keep_original_details_here,\n    star_count=your_star_count_here\n)\n</code></pre>"},{"location":"methods/upload_sticker_file/","title":"\ud83d\udd27 upload_sticker_file","text":"<p>Use this method to upload a .png file with a sticker for later use in createNewStickerSet and addStickerToSet</p>"},{"location":"methods/upload_sticker_file/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>user_id</code> (<code>int</code> ): User identifier of sticker set owner</li> <li><code>sticker</code> (<code>Path</code> or <code>bytes</code> or <code>str</code> ): A file with the sticker in .WEBP, .PNG, .TGS, or .WEBM format. See https://core.telegram.org/stickers for technical requirements. More information on Sending Files \u00bb</li> <li><code>sticker_format</code> (<code>str</code> ): One of \"static\", \"animated\", \"video\".</li> </ul>"},{"location":"methods/upload_sticker_file/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/upload_sticker_file/#file","title":"File","text":""},{"location":"methods/upload_sticker_file/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.upload_sticker_file(\n    user_id=your_user_id_here,\n    sticker=your_sticker_here,\n    sticker_format=your_sticker_format_here\n)\n</code></pre>"},{"location":"methods/verify_chat/","title":"\ud83d\udd27 verify_chat","text":"<p>Verifies a chat on behalf of the organization which is represented by the bot. Returns True on success.</p>"},{"location":"methods/verify_chat/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>chat_id</code> (<code>str</code> or <code>int</code> ): Unique identifier for the target chat or username of the target channel (in the format @channelusername)</li> <li><code>custom_description</code> (<code>str</code> ) (<code>optional</code>): UCustom description for the verification; 0-70 characters. Must be empty if the organization isn't allowed to provide a custom verification description.</li> </ul>"},{"location":"methods/verify_chat/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/verify_chat/#bool","title":"<code>bool</code>","text":""},{"location":"methods/verify_chat/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.verify_chat(\n    chat_id=your_chat_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.verify_chat(\n    chat_id=your_chat_id_here,\n    custom_description=your_custom_description_here\n)\n</code></pre>"},{"location":"methods/verify_user/","title":"\ud83d\udd27 verify_user","text":"<p>Verifies a user on behalf of the organization which is represented by the bot. Returns True on success.</p>"},{"location":"methods/verify_user/#parameters","title":"\u2699\ufe0f Parameters","text":"<ul> <li><code>user_id</code> (<code>int</code> ): Unique identifier of the target user</li> <li><code>custom_description</code> (<code>str</code> ) (<code>optional</code>): UCustom description for the verification; 0-70 characters. Must be empty if the organization isn't allowed to provide a custom verification description.</li> </ul>"},{"location":"methods/verify_user/#returns","title":"\ud83d\udcf2 Returns","text":""},{"location":"methods/verify_user/#bool","title":"<code>bool</code>","text":""},{"location":"methods/verify_user/#examples","title":"\ud83d\udcc0 Examples","text":"<p>-\ud83e\udeab Required Parameters</p> <pre><code>await bot.verify_user(\n    user_id=your_user_id_here\n)\n</code></pre> <p>-\ud83d\udd0b All Parameters</p> <pre><code>await bot.verify_user(\n    user_id=your_user_id_here,\n    custom_description=your_custom_description_here\n)\n</code></pre>"},{"location":"types/AcceptedGiftTypes/","title":"\ud83d\udd2e AcceptedGiftTypes","text":"<p>This object describes the types of gifts that can be gifted to a user or a chat.</p>"},{"location":"types/AcceptedGiftTypes/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>unlimited_gifts</code> (<code>bool</code> ): True, if unlimited regular gifts are accepted</li> <li><code>limited_gifts</code> (<code>bool</code> ): True, if limited regular gifts are accepted</li> <li><code>unique_gifts</code> (<code>bool</code> ): True, if unique gifts or gifts that can be upgraded to unique for free are accepted</li> <li><code>premium_subscription</code> (<code>bool</code> ): True, if a Telegram Premium subscription is accepted</li> </ul>"},{"location":"types/AffiliateInfo/","title":"\ud83d\udd2e AffiliateInfo","text":"<p>This object represents an animation file (GIF or H.264/MPEG-4 AVC video without sound).</p>"},{"location":"types/AffiliateInfo/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>affiliate_user</code> (User ): Optional. The bot or the user that received an affiliate commission if it was received by a bot or a user</li> <li><code>affiliate_chat</code> (Chat ): Optional. The chat that received an affiliate commission if it was received by a chat</li> <li><code>commission_per_mille</code> (<code>int</code> ): The number of Telegram Stars received by the affiliate for each 1000 Telegram Stars received by the bot from referred users</li> <li><code>amount</code> (<code>int</code> ): Integer amount of Telegram Stars received by the affiliate from the transaction, rounded to 0; can be negative for refunds</li> <li><code>nanostar_amount</code> (<code>int</code> ): Optional. The number of 1/1000000000 shares of Telegram Stars received by the affiliate; from -999999999 to 999999999; can be negative for refunds</li> </ul>"},{"location":"types/Animation/","title":"\ud83d\udd2e Animation","text":"<p>This object represents an animation file (GIF or H.264/MPEG-4 AVC video without sound).</p>"},{"location":"types/Animation/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>file_id</code> (<code>str</code> ): Identifier for this file, which can be used to download or reuse the file</li> <li><code>file_unique_id</code> (<code>str</code> ): Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</li> <li><code>width</code> (<code>int</code> ): Video width as defined by sender</li> <li><code>height</code> (<code>int</code> ): Video height as defined by sender</li> <li><code>duration</code> (<code>int</code> ): Duration of the video in seconds as defined by sender</li> <li><code>thumbnail</code> (PhotoSize ): Optional. Animation thumbnail as defined by sender</li> <li><code>file_name</code> (<code>str</code> ): Optional. Original animation filename as defined by sender</li> <li><code>mime_type</code> (<code>str</code> ): Optional. MIME type of the file as defined by sender</li> <li><code>file_size</code> (<code>int</code> ): Optional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.</li> </ul>"},{"location":"types/Audio/","title":"\ud83d\udd2e Audio","text":"<p>This object represents an audio file to be treated as music by the Telegram clients.</p>"},{"location":"types/Audio/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>file_id</code> (<code>str</code> ): Identifier for this file, which can be used to download or reuse the file</li> <li><code>file_unique_id</code> (<code>str</code> ): Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</li> <li><code>duration</code> (<code>int</code> ): Duration of the audio in seconds as defined by sender</li> <li><code>performer</code> (<code>str</code> ): Optional. Performer of the audio as defined by sender or by audio tags</li> <li><code>title</code> (<code>str</code> ): Optional. Title of the audio as defined by sender or by audio tags</li> <li><code>file_name</code> (<code>str</code> ): Optional. Original filename as defined by sender</li> <li><code>mime_type</code> (<code>str</code> ): Optional. MIME type of the file as defined by sender</li> <li><code>file_size</code> (<code>int</code> ): Optional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.</li> <li><code>thumbnail</code> (PhotoSize ): Optional. Thumbnail of the album cover to which the music file belongs</li> </ul>"},{"location":"types/BackgroundFill/","title":"\ud83d\udd2e BackgroundFill","text":"<p>This object describes the way a background is filled based on the selected colors. Currently, it can be one of</p>"},{"location":"types/BackgroundFillFreeformGradient/","title":"\ud83d\udd2e BackgroundFillFreeformGradient","text":"<p>The background is a freeform gradient that rotates after every message in the chat.</p>"},{"location":"types/BackgroundFillFreeformGradient/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> ): Type of the background fill, always \u201cfreeform_gradient\u201d</li> <li><code>colors</code> (List of <code>int</code> ): A list of the 3 or 4 base colors that are used to generate the freeform gradient in the RGB24 format</li> </ul>"},{"location":"types/BackgroundFillGradient/","title":"\ud83d\udd2e BackgroundFillGradient","text":"<p>The background is a gradient fill.</p>"},{"location":"types/BackgroundFillGradient/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> ): Type of the background fill, always \u201cgradient\u201d</li> <li><code>top_color</code> (<code>int</code> ): Top color of the gradient in the RGB24 format</li> <li><code>bottom_color</code> (<code>int</code> ): Bottom color of the gradient in the RGB24 format</li> <li><code>rotation_angle</code> (<code>int</code> ): Clockwise rotation angle of the background fill in degrees; 0-359</li> </ul>"},{"location":"types/BackgroundFillSolid/","title":"\ud83d\udd2e BackgroundFillSolid","text":"<p>The background is filled using the selected color.</p>"},{"location":"types/BackgroundFillSolid/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> ): Type of the background fill, always \u201csolid\u201d</li> <li><code>color</code> (<code>int</code> ): The color of the background fill in the RGB24 format</li> </ul>"},{"location":"types/BackgroundType/","title":"\ud83d\udd2e BackgroundType","text":"<p>This object describes the type of a background. Currently, it can be one of</p>"},{"location":"types/BackgroundTypeChatTheme/","title":"\ud83d\udd2e BackgroundTypeChatTheme","text":"<p>The background is taken directly from a built-in chat theme.</p>"},{"location":"types/BackgroundTypeChatTheme/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> ): Type of the background, always \u201cchat_theme\u201d</li> <li><code>theme_name</code> (<code>str</code> ): Intensity of the pattern when it is shown above the filled background; 0-100</li> </ul>"},{"location":"types/BackgroundTypeFill/","title":"\ud83d\udd2e BackgroundTypeFill","text":"<p>The background is automatically filled based on the selected colors.</p>"},{"location":"types/BackgroundTypeFill/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> ): Type of the background, always \u201cfill\u201d</li> <li><code>fill</code> (BackgroundFill ): The background fill</li> <li><code>dark_theme_dimming</code> (<code>int</code> ): Dimming of the background in dark themes, as a percentage; 0-100</li> </ul>"},{"location":"types/BackgroundTypePattern/","title":"\ud83d\udd2e BackgroundTypePattern","text":"<p>The background is a wallpaper in the JPEG format.</p>"},{"location":"types/BackgroundTypePattern/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> ): Type of the background, always \u201cpattern\u201d</li> <li><code>document</code> (Document ): Document with the pattern</li> <li><code>fill</code> (BackgroundFill ): The background fill that is combined with the pattern</li> <li><code>intensity</code> (<code>int</code> ): Intensity of the pattern when it is shown above the filled background; 0-100</li> <li><code>is_inverted</code> (<code>bool</code> ): Optional. True, if the background fill must be applied only to the pattern itself. All other pixels are black in this case. For dark themes only</li> <li><code>is_moving</code> (<code>bool</code> ): Optional. True, if the background moves slightly when the device is tilted</li> </ul>"},{"location":"types/BackgroundTypeWallpaper/","title":"\ud83d\udd2e BackgroundTypeWallpaper","text":"<p>The background is a wallpaper in the JPEG format.</p>"},{"location":"types/BackgroundTypeWallpaper/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> ): Type of the background, always \u201cwallpaper\u201d</li> <li><code>document</code> (Document ): Document with the wallpaper</li> <li><code>dark_theme_dimming</code> (<code>int</code> ): Dimming of the background in dark themes, as a percentage; 0-100</li> <li><code>is_blurred</code> (<code>bool</code> ): Optional. True, if the wallpaper is downscaled to fit in a 450x450 square and then box-blurred with radius 12</li> <li><code>is_moving</code> (<code>bool</code> ): Optional. True, if the background moves slightly when the device is tilted</li> </ul>"},{"location":"types/Birthdate/","title":"\ud83d\udd2e Birthdate","text":"<p>This object represents a user's birthdate.</p>"},{"location":"types/Birthdate/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>day</code> (<code>int</code> ): Day of the user's birth; 1-31</li> <li><code>month</code> (<code>int</code> ): Month of the user's birth; 1-12</li> <li><code>year</code> (<code>int</code> ): Optional. Year of the user's birth</li> </ul>"},{"location":"types/BotCommand/","title":"\ud83d\udd2e BotCommand","text":"<p>This object represents a bot command.</p>"},{"location":"types/BotCommand/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>command</code> (<code>str</code> ): Text of the command; 1-32 characters. Can contain only lowercase English letters, digits and underscores.</li> <li><code>description</code> (<code>str</code> ): Description of the command; 1-256 characters.</li> </ul>"},{"location":"types/BotCommandScope/","title":"\ud83d\udd2e BotCommandScope","text":"<p>This object represents the scope to which bot commands are applied. Currently, the following 7 scopes are supported:</p>"},{"location":"types/BotCommandScopeAllChatAdministrators/","title":"\ud83d\udd2e BotCommandScopeAllChatAdministrators","text":"<p>Represents the scope of bot commands, covering all group and supergroup chat administrators.</p>"},{"location":"types/BotCommandScopeAllChatAdministrators/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> ): Scope type, must be all_chat_administrators</li> </ul>"},{"location":"types/BotCommandScopeAllGroupChats/","title":"\ud83d\udd2e BotCommandScopeAllGroupChats","text":"<p>Represents the scope of bot commands, covering all group and supergroup chats.</p>"},{"location":"types/BotCommandScopeAllGroupChats/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> ): Scope type, must be all_group_chats</li> </ul>"},{"location":"types/BotCommandScopeAllPrivateChats/","title":"\ud83d\udd2e BotCommandScopeAllPrivateChats","text":"<p>Represents the scope of bot commands, covering all private chats.</p>"},{"location":"types/BotCommandScopeAllPrivateChats/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> ): Scope type, must be all_private_chats</li> </ul>"},{"location":"types/BotCommandScopeChat/","title":"\ud83d\udd2e BotCommandScopeChat","text":"<p>Represents the scope of bot commands, covering a specific chat.</p>"},{"location":"types/BotCommandScopeChat/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> ): Scope type, must be chat</li> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)</li> </ul>"},{"location":"types/BotCommandScopeChatAdministrators/","title":"\ud83d\udd2e BotCommandScopeChatAdministrators","text":"<p>Represents the scope of bot commands, covering all administrators of a specific group or supergroup chat.</p>"},{"location":"types/BotCommandScopeChatAdministrators/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> ): Scope type, must be chat_administrators</li> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)</li> </ul>"},{"location":"types/BotCommandScopeChatMember/","title":"\ud83d\udd2e BotCommandScopeChatMember","text":"<p>Represents the scope of bot commands, covering a specific member of a group or supergroup chat.</p>"},{"location":"types/BotCommandScopeChatMember/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> ): Scope type, must be chat_member</li> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)</li> <li><code>user_id</code> (<code>int</code> ): Unique identifier of the target user</li> </ul>"},{"location":"types/BotCommandScopeDefault/","title":"\ud83d\udd2e BotCommandScopeDefault","text":"<p>Represents the default scope of bot commands. Default commands are used if no commands with a narrower scope are specified for the user.</p>"},{"location":"types/BotCommandScopeDefault/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> ): Scope type, must be default</li> </ul>"},{"location":"types/BotDescription/","title":"\ud83d\udd2e BotDescription","text":"<p>This object represents a bot description.</p>"},{"location":"types/BotDescription/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>description</code> (<code>str</code> ): Bot description</li> </ul>"},{"location":"types/BotName/","title":"\ud83d\udd2e BotName","text":"<p>This object represents a bot name.</p>"},{"location":"types/BotName/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>name</code> (<code>str</code> ): The bot name</li> </ul>"},{"location":"types/BotShortDescription/","title":"\ud83d\udd2e BotShortDescription","text":"<p>This object represents a bot short description.</p>"},{"location":"types/BotShortDescription/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>short_description</code> (<code>str</code> ): Bot short description</li> </ul>"},{"location":"types/BusinessConnection/","title":"\ud83d\udd2e BusinessConnection","text":"<p>This object describes the connection of the bot with a business account.</p>"},{"location":"types/BusinessConnection/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>id</code> (<code>str</code> ): Unique identifier of the business connection</li> <li><code>user</code> (User ): Business account user that created the business connection</li> <li><code>user_chat_id</code> (<code>int</code> ): Identifier of a private chat with the user who created the business connection</li> <li><code>date</code> (<code>int</code> ): Date the connection was established in Unix time</li> <li><code>rights</code> (<code>BusinessBotRights</code> ): Optional. Rights of the business bot</li> <li><code>is_enabled</code> (<code>bool</code> ): True, if the connection is active</li> </ul>"},{"location":"types/BusinessIntro/","title":"\ud83d\udd2e BusinessIntro","text":"<p>This object represents a business intro.</p>"},{"location":"types/BusinessIntro/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>title</code> (<code>str</code> ): Optional. Title text of the business intro</li> <li><code>message</code> (<code>str</code> ): Optional. Message text of the business intro</li> <li><code>sticker</code> (Sticker ): Optional. Sticker of the business intro</li> </ul>"},{"location":"types/BusinessLocation/","title":"\ud83d\udd2e BusinessLocation","text":"<p>This object represents a business location.</p>"},{"location":"types/BusinessLocation/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>address</code> (<code>str</code> ): Address of the business</li> <li><code>location</code> (Location ): Optional. Location of the business</li> </ul>"},{"location":"types/BusinessMessagesDeleted/","title":"\ud83d\udd2e BusinessMessagesDeleted","text":"<p>This object is received when messages are deleted from a connected business account.</p>"},{"location":"types/BusinessMessagesDeleted/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>business_connection_id</code> (<code>str</code> ): Unique identifier of the business connection</li> <li><code>chat</code> (Chat ): Information about a chat in the business account. The bot may not have access to the chat or the corresponding user.</li> <li><code>message_ids</code> (List of <code>int</code> ): A JSON-serialized list of identifiers of deleted messages in the chat of the business account</li> </ul>"},{"location":"types/BusinessOpeningHours/","title":"\ud83d\udd2e BusinessOpeningHours","text":"<p>This object represents business opening hours.</p>"},{"location":"types/BusinessOpeningHours/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>time_zone_name</code> (<code>str</code> ): Unique name of the time zone for which the opening hours are defined</li> <li><code>opening_hours</code> (List of BusinessOpeningHoursInterval ): List of time intervals describing business opening hours</li> </ul>"},{"location":"types/BusinessOpeningHoursInterval/","title":"\ud83d\udd2e BusinessOpeningHoursInterval","text":"<p>This object represents a business opening hours interval.</p>"},{"location":"types/BusinessOpeningHoursInterval/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>opening_minute</code> (<code>int</code> ): The minute's sequence number in a week, starting on Monday, marking the start of the time interval during which the business is open; 0 - 7 24 60</li> <li><code>closing_minute</code> (<code>int</code> ): The minute's sequence number in a week, starting on Monday, marking the end of the time interval during which the business is open; 0 - 8 24 60</li> </ul>"},{"location":"types/CallbackGame/","title":"\ud83d\udd2e CallbackGame","text":""},{"location":"types/CallbackGame/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>user_id</code> (<code>int</code> )</li> <li><code>score</code> (<code>int</code> )</li> <li><code>force</code> (<code>bool</code> )</li> <li><code>disable_edit_message</code> (<code>bool</code> )</li> <li><code>chat_id</code> (<code>int</code> )</li> <li><code>message_id</code> (<code>int</code> )</li> <li><code>inline_message_id</code> (<code>str</code> )</li> </ul>"},{"location":"types/CallbackQuery/","title":"\ud83d\udd2e CallbackQuery","text":"<p>This object represents an incoming callback query from a callback button in an inline keyboard. If the button that originated the query was attached to a message sent by the bot, the field message will be present. If the button was attached to a message sent via the bot (in inline mode), the field inline_message_id will be present. Exactly one of the fields data or game_short_name will be present.</p>"},{"location":"types/CallbackQuery/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>id</code> (<code>str</code> ): Unique identifier for this query</li> <li><code>from_user</code> (User ): Sender</li> <li><code>chat_instance</code> (<code>str</code> ): Global identifier, uniquely corresponding to the chat to which the message with the callback button was sent. Useful for high scores in games.</li> <li><code>message</code> (Message ): Optional. Message sent by the bot with the callback button that originated the query</li> <li><code>inline_message_id</code> (<code>str</code> ): Optional. Identifier of the message sent via the bot in inline mode, that originated the query.</li> <li><code>data</code> (<code>str</code> ): Optional. Data associated with the callback button. Be aware that the message originated the query can contain no callback buttons with this data.</li> <li><code>game_short_name</code> (<code>str</code> ): Optional. Short name of a Game to be returned, serves as the unique identifier for the game</li> </ul>"},{"location":"types/Chat/","title":"\ud83d\udd2e Chat","text":"<p>This object represents a chat.</p>"},{"location":"types/Chat/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>id</code> (<code>int</code> ): Unique identifier for this chat. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this identifier.</li> <li><code>type</code> (<code>str</code> ): Type of the chat, can be either \u201cprivate\u201d, \u201cgroup\u201d, \u201csupergroup\u201d or \u201cchannel\u201d.</li> <li><code>title</code> (<code>str</code> ): Optional. Title, for supergroups, channels and group chats.</li> <li><code>username</code> (<code>str</code> ): Optional. Username, for private chats, supergroups and channels if available.</li> <li><code>first_name</code> (<code>str</code> ): Optional. First name of the other party in a private chat.</li> <li><code>last_name</code> (<code>str</code> ): Optional. Last name of the other party in a private chat.</li> <li><code>is_forum</code> (<code>bool</code> ): Optional. True, if the supergroup chat is a forum (has topics enabled).</li> <li><code>is_direct_messages</code> (<code>bool</code> ): Optional. True, if the chat is the direct messages chat of a channel.</li> </ul>"},{"location":"types/ChatAdministratorRights/","title":"\ud83d\udd2e ChatAdministratorRights","text":"<p>Represents the rights of an administrator in a chat.</p>"},{"location":"types/ChatAdministratorRights/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>is_anonymous</code> (<code>bool</code> ): True, if the user's presence in the chat is hidden</li> <li><code>can_manage_chat</code> (<code>bool</code> ): True, if the administrator can access the chat event log, chat statistics, message statistics in channels, see channel members, see anonymous administrators in supergroups and ignore slow mode. Implied by any other administrator privilege</li> <li><code>can_delete_messages</code> (<code>bool</code> ): True, if the administrator can delete messages of other users</li> <li><code>can_manage_video_chats</code> (<code>bool</code> ): True, if the administrator can manage video chats</li> <li><code>can_restrict_members</code> (<code>bool</code> ): True, if the administrator can restrict, ban or unban chat members</li> <li><code>can_promote_members</code> (<code>bool</code> ): True, if the administrator can add new administrators with a subset of their own privileges or demote administrators that he has promoted, directly or indirectly (promoted by administrators that were appointed by the user)</li> <li><code>can_change_info</code> (<code>bool</code> ): True, if the user is allowed to change the chat title, photo and other settings</li> <li><code>can_invite_users</code> (<code>bool</code> ): True, if the user is allowed to invite new users to the chat</li> <li><code>can_post_stories</code> (<code>bool</code> ): Optional. True, if the administrator can post channel stories</li> <li><code>can_edit_stories</code> (<code>bool</code> ): Optional. True, if the administrator can edit stories</li> <li><code>can_delete_stories</code> (<code>bool</code> ): Optional. True, if the administrator can delete stories of other users</li> <li><code>can_post_messages</code> (<code>bool</code> ): Optional. True, if the administrator can post in the channel; channels only</li> <li><code>can_edit_messages</code> (<code>bool</code> ): Optional. True, if the administrator can edit messages of other users and can pin messages; channels only</li> <li><code>can_pin_messages</code> (<code>bool</code> ): Optional. True, if the user is allowed to pin messages; groups and supergroups only</li> <li><code>can_manage_topics</code> (<code>bool</code> ): Optional. True, if the user is allowed to create, rename, close, and reopen forum topics; supergroups only</li> </ul>"},{"location":"types/ChatBackground/","title":"\ud83d\udd2e ChatBackground","text":"<p>This object represents a chat background.</p>"},{"location":"types/ChatBackground/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (BackgroundType ): Type of the background</li> </ul>"},{"location":"types/ChatBoost/","title":"\ud83d\udd2e ChatBoost","text":"<p>This object contains information about a chat boost.</p>"},{"location":"types/ChatBoost/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>boost_id</code> (<code>str</code> ): Unique identifier of the boost</li> <li><code>add_date</code> (<code>int</code> ): Point in time (Unix timestamp) when the chat was boosted</li> <li><code>expiration_date</code> (<code>int</code> ): Point in time (Unix timestamp) when the boost will automatically expire, unless the booster's Telegram Premium subscription is prolonged</li> <li><code>source</code> (ChatBoostSource ): Optional. Source of the added boost (made Optional for now due to API error)</li> </ul>"},{"location":"types/ChatBoostAdded/","title":"\ud83d\udd2e ChatBoostAdded","text":"<p>This object represents a service message about a user boosting a chat.</p>"},{"location":"types/ChatBoostAdded/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>boost_count</code> (<code>int</code> ): Number of boosts added by the user</li> </ul>"},{"location":"types/ChatBoostRemoved/","title":"\ud83d\udd2e ChatBoostRemoved","text":"<p>This object represents a boost removed from a chat.</p>"},{"location":"types/ChatBoostRemoved/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>chat</code> (Chat ): Chat which was boosted</li> <li><code>boost_id</code> (<code>str</code> ): Unique identifier of the boost</li> <li><code>remove_date</code> (<code>int</code> ): Point in time (Unix timestamp) when the boost was removed</li> <li><code>source</code> (ChatBoostSource ): Source of the removed boost</li> </ul>"},{"location":"types/ChatBoostSource/","title":"\ud83d\udd2e ChatBoostSource","text":"<p>This object describes the source of a chat boost. It can be one of</p>"},{"location":"types/ChatBoostSource/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>source</code> (<code>str</code> )</li> <li><code>user</code> (User )</li> </ul>"},{"location":"types/ChatBoostSourceGiftCode/","title":"\ud83d\udd2e ChatBoostSourceGiftCode","text":"<p>The boost was obtained by the creation of Telegram Premium gift codes to boost a chat.</p>"},{"location":"types/ChatBoostSourceGiftCode/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>source</code> (<code>str</code> ): Source of the boost, always \u201cgift_code\u201d</li> <li><code>user</code> (User ): User for which the gift code was created</li> </ul>"},{"location":"types/ChatBoostSourceGiveaway/","title":"\ud83d\udd2e ChatBoostSourceGiveaway","text":"<p>The boost was obtained by the creation of a Telegram Premium giveaway.</p>"},{"location":"types/ChatBoostSourceGiveaway/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>source</code> (<code>str</code> ): Source of the boost, always \u201cgiveaway\u201d</li> <li><code>giveaway_message_id</code> (<code>int</code> ): Identifier of a message in the chat with the giveaway; the message could have been deleted already. May be 0 if the message isn't sent yet.</li> <li><code>user</code> (User ): User that won the prize in the giveaway if any</li> <li><code>prize_star_count</code> (<code>int</code> ): Optional. The number of Telegram Stars to be split between giveaway winners; for Telegram Star giveaways only</li> <li><code>is_unclaimed</code> (<code>bool</code> ): True, if the giveaway was completed, but there was no user to win the prize</li> </ul>"},{"location":"types/ChatBoostSourcePremium/","title":"\ud83d\udd2e ChatBoostSourcePremium","text":"<p>The boost was obtained by subscribing to Telegram Premium or by gifting a Telegram Premium subscription to another user.</p>"},{"location":"types/ChatBoostSourcePremium/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>source</code> (<code>str</code> ): Source of the boost, always \u201cpremium\u201d</li> <li><code>user</code> (User ): User that boosted the chat</li> </ul>"},{"location":"types/ChatBoostUpdated/","title":"\ud83d\udd2e ChatBoostUpdated","text":"<p>This object represents a boost added to a chat or changed.</p>"},{"location":"types/ChatBoostUpdated/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>chat</code> (Chat ): Chat which was boosted</li> <li><code>boost</code> (ChatBoost ): Infomation about the chat boost</li> </ul>"},{"location":"types/ChatFullInfo/","title":"\ud83d\udd2e ChatFullInfo","text":"<p>This object contains full information about a chat.</p>"},{"location":"types/ChatFullInfo/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>id</code> (<code>int</code> ): Unique identifier for this chat. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this identifier.</li> <li><code>type</code> (<code>ChatType</code> ): Type of the chat, can be either \u201cprivate\u201d, \u201cgroup\u201d, \u201csupergroup\u201d or \u201cchannel\u201d</li> <li><code>title</code> (<code>str</code> ): Optional. Title, for supergroups, channels and group chats</li> <li><code>username</code> (<code>str</code> ): Optional. Username, for private chats, supergroups and channels if available</li> <li><code>first_name</code> (<code>str</code> ): Optional. First name of the other party in a private chat</li> <li><code>last_name</code> (<code>str</code> ): Optional. Last name of the other party in a private chat</li> <li><code>is_forum</code> (<code>bool</code> ): Optional. True, if the supergroup chat is a forum (has topics enabled)</li> <li><code>is_direct_messages</code> (<code>bool</code> ): Optional. True, if the chat is the direct messages chat of a channel</li> <li><code>accent_color_id</code> (<code>int</code> ): Identifier of the accent color for the chat name and backgrounds of the chat photo, reply header, and link preview.</li> <li><code>max_reaction_count</code> (<code>int</code> ): The maximum number of reactions that can be set on a message in the chat</li> <li><code>photo</code> (ChatPhoto ): Optional. Chat photo</li> <li><code>active_usernames</code> (List of <code>str</code> ): Optional. If non-empty, the list of all active chat usernames; for private chats, supergroups and channels</li> <li><code>birthdate</code> (Birthdate ): Optional. For private chats, the date of birth of the user</li> <li><code>business_intro</code> (BusinessIntro ): Optional. For private chats with business accounts, the intro of the business</li> <li><code>business_location</code> (BusinessLocation ): Optional. For private chats with business accounts, the location of the business</li> <li><code>business_opening_hours</code> (BusinessOpeningHours ): Optional. For private chats with business accounts, the opening hours of the business</li> <li><code>personal_chat</code> (Chat ): Optional. For private chats, the personal channel of the user</li> <li><code>parent_chat</code> (Chat ): Optional. Information about the corresponding channel chat; for direct messages chats only</li> <li><code>available_reactions</code> (List of <code>ReactionType</code> ): Optional. List of available reactions allowed in the chat. If omitted, then all emoji reactions are allowed.</li> <li><code>background_custom_emoji_id</code> (<code>str</code> ): Optional. Custom emoji identifier of the emoji chosen by the chat for the reply header and link preview background</li> <li><code>profile_accent_color_id</code> (<code>int</code> ): Optional. Identifier of the accent color for the chat's profile background. See profile accent colors for more details.</li> <li><code>profile_background_custom_emoji_id</code> (<code>str</code> ): Optional. Custom emoji identifier of the emoji chosen by the chat for its profile background</li> <li><code>emoji_status_custom_emoji_id</code> (<code>str</code> ): Optional. Custom emoji identifier of the emoji status of the chat or the other party in a private chat</li> <li><code>emoji_status_expiration_date</code> (<code>int</code> ): Optional. Expiration date of the emoji status of the chat or the other party in a private chat, in Unix time, if any</li> <li><code>bio</code> (<code>str</code> ): Optional. Bio of the other party in a private chat</li> <li><code>has_private_forwards</code> (<code>bool</code> ): Optional. True, if privacy settings of the other party in the private chat allows to use tg://user?id= links only in chats with the user <li><code>has_restricted_voice_and_video_messages</code> (<code>bool</code> ): Optional. True, if the privacy settings of the other party restrict sending voice and video note messages in the private chat</li> <li><code>join_to_send_messages</code> (<code>bool</code> ): Optional. True, if users need to join the supergroup before they can send messages</li> <li><code>join_by_request</code> (<code>bool</code> ): Optional. True, if all users directly joining the supergroup without using an invite link need to be approved by supergroup administrators</li> <li><code>description</code> (<code>str</code> ): Optional. Description, for groups, supergroups and channel chats</li> <li><code>invite_link</code> (<code>str</code> ): Optional. Primary invite link, for groups, supergroups and channel chats</li> <li><code>pinned_message</code> (Message ): Optional. The most recent pinned message (by sending date)</li> <li><code>permissions</code> (ChatPermissions ): Optional. Default chat member permissions, for groups and supergroups</li> <li><code>accepted_gift_types</code> (AcceptedGiftTypes ): Information about types of gifts that are accepted by the chat or by the corresponding user for private chats</li> <li><code>can_send_paid_media</code> (<code>bool</code> ): Optional. True, if paid media messages can be sent or forwarded to the channel chat. The field is available only for channel chats.</li> <li><code>slow_mode_delay</code> (<code>int</code> ): Optional. For supergroups, the minimum allowed delay between consecutive messages sent by each unprivileged user; in seconds</li> <li><code>unrestrict_boost_count</code> (<code>int</code> ): Optional. For supergroups, the minimum number of boosts that a non-administrator user needs to add in order to ignore slow mode and chat permissions</li> <li><code>message_auto_delete_time</code> (<code>int</code> ): Optional. The time after which all messages sent to the chat will be automatically deleted; in seconds</li> <li><code>has_aggressive_anti_spam_enabled</code> (<code>bool</code> ): Optional. True, if aggressive anti-spam checks are enabled in the supergroup. The field is only available to chat administrators.</li> <li><code>has_hidden_members</code> (<code>bool</code> ): Optional. True, if non-administrators can only get the list of bots and administrators in the chat</li> <li><code>has_protected_content</code> (<code>bool</code> ): Optional. True, if messages from the chat can't be forwarded to other chats</li> <li><code>has_visible_history</code> (<code>bool</code> ): Optional. True, if new chat members will have access to old messages; available only to chat administrators</li> <li><code>sticker_set_name</code> (<code>str</code> ): Optional. For supergroups, name of the group sticker set</li> <li><code>can_set_sticker_set</code> (<code>bool</code> ): Optional. True, if the bot can change the group sticker set</li> <li><code>custom_emoji_sticker_set_name</code> (<code>str</code> ): Optional. For supergroups, the name of the group's custom emoji sticker set. Custom emoji from this set can be used by all users and bots in the group.</li> <li><code>linked_chat_id</code> (<code>int</code> ): Optional. Unique identifier for the linked chat, i.e. the discussion group identifier for a channel and vice versa; for supergroups and channel chats.</li> <li><code>location</code> (ChatLocation ): Optional. For supergroups, the location to which the supergroup is connected</li>"},{"location":"types/ChatInviteLink/","title":"\ud83d\udd2e ChatInviteLink","text":"<p>Represents an invite link for a chat.</p>"},{"location":"types/ChatInviteLink/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>invite_link</code> (<code>str</code> ): The invite link. If the link was created by another chat administrator, then the second part of the link will be replaced with \u201c\u2026\u201d.</li> <li><code>creator</code> (User ): Creator of the link</li> <li><code>creates_join_request</code> (<code>bool</code> ): True, if users joining the chat via the link need to be approved by chat administrators</li> <li><code>is_primary</code> (<code>bool</code> ): True, if the link is primary</li> <li><code>is_revoked</code> (<code>bool</code> ): True, if the link is revoked</li> <li><code>name</code> (<code>str</code> ): Optional. Invite link name</li> <li><code>expire_date</code> (<code>int</code> ): Optional. Point in time (Unix timestamp) when the link will expire or has been expired</li> <li><code>member_limit</code> (<code>int</code> ): Optional. The maximum number of users that can be members of the chat simultaneously after joining the chat via this invite link; 1-99999</li> <li><code>pending_join_request_count</code> (<code>int</code> ): Optional. Number of pending join requests created using this link</li> </ul>"},{"location":"types/ChatJoinRequest/","title":"\ud83d\udd2e ChatJoinRequest","text":"<p>Represents a join request sent to a chat.</p>"},{"location":"types/ChatJoinRequest/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>chat</code> (Chat ): Chat to which the request was sent</li> <li><code>from_user</code> (User ): User that sent the join request</li> <li><code>user_chat_id</code> (<code>int</code> ): Optional. Identifier of a private chat with the user who sent the join request. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier. The bot can use this identifier for 24 hours to send messages until the join request is processed, assuming no other administrator contacted the user.</li> <li><code>date</code> (<code>int</code> ): Date the request was sent in Unix time</li> <li><code>bio</code> (<code>str</code> ): Optional. Bio of the user.</li> <li><code>invite_link</code> (ChatInviteLink ): Optional. Chat invite link that was used by the user to send the join request</li> </ul>"},{"location":"types/ChatLocation/","title":"\ud83d\udd2e ChatLocation","text":"<p>Represents a location to which a chat is connected.</p>"},{"location":"types/ChatLocation/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>location</code> (Location ): The location to which the supergroup is connected. Can't be a live location.</li> <li><code>address</code> (<code>str</code> ): Location address; 1-64 characters, as defined by the chat owner</li> </ul>"},{"location":"types/ChatMember/","title":"\ud83d\udd2e ChatMember","text":"<p>This object contains information about one member of a chat.</p>"},{"location":"types/ChatMemberAdministrator/","title":"\ud83d\udd2e ChatMemberAdministrator","text":"<p>Represents a chat member that has some additional privileges.</p>"},{"location":"types/ChatMemberAdministrator/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>status</code> (<code>ChatMemberStatus</code> ): The member's status in the chat, always \u201cadministrator\u201d</li> <li><code>user</code> (User ): Information about the user</li> <li><code>can_be_edited</code> (<code>bool</code> ): True, if the bot is allowed to edit administrator privileges of that user</li> <li><code>is_anonymous</code> (<code>bool</code> ): True, if the user's presence in the chat is hidden</li> <li><code>can_manage_chat</code> (<code>bool</code> ): True, if the administrator can access the chat event log, chat statistics, message statistics in channels, see channel members, see anonymous administrators in supergroups and ignore slow mode. Implied by any other administrator privilege</li> <li><code>can_delete_messages</code> (<code>bool</code> ): True, if the administrator can delete messages of other users</li> <li><code>can_manage_video_chats</code> (<code>bool</code> ): True, if the administrator can manage video chats</li> <li><code>can_restrict_members</code> (<code>bool</code> ): True, if the administrator can restrict, ban or unban chat members</li> <li><code>can_promote_members</code> (<code>bool</code> ): True, if the administrator can add new administrators with a subset of their own privileges or demote administrators that he has promoted, directly or indirectly (promoted by administrators that were appointed by the user)</li> <li><code>can_change_info</code> (<code>bool</code> ): True, if the user is allowed to change the chat title, photo and other settings</li> <li><code>can_invite_users</code> (<code>bool</code> ): True, if the user is allowed to invite new users to the chat</li> <li><code>can_post_stories</code> (<code>bool</code> ): Optional. True, if the administrator can post channel stories</li> <li><code>can_edit_stories</code> (<code>bool</code> ): Optional. True, if the administrator can edit stories</li> <li><code>can_delete_stories</code> (<code>bool</code> ): Optional. True, if the administrator can delete stories of other users</li> <li><code>can_post_messages</code> (<code>bool</code> ): Optional. True, if the administrator can post in the channel; channels only</li> <li><code>can_edit_messages</code> (<code>bool</code> ): Optional. True, if the administrator can edit messages of other users and can pin messages; channels only</li> <li><code>can_pin_messages</code> (<code>bool</code> ): Optional. True, if the user is allowed to pin messages; groups and supergroups only</li> <li><code>can_manage_topics</code> (<code>bool</code> ): Optional. True, if the user is allowed to create, rename, close, and reopen forum topics; supergroups only</li> <li><code>custom_title</code> (<code>str</code> ): Optional. Custom title for this user</li> </ul>"},{"location":"types/ChatMemberBanned/","title":"\ud83d\udd2e ChatMemberBanned","text":"<p>Represents a chat member that was banned in the chat and can't return to the chat or view chat messages.</p>"},{"location":"types/ChatMemberBanned/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>status</code> (<code>ChatMemberStatus</code> ): The member's status in the chat, always \u201ckicked\u201d</li> <li><code>user</code> (User ): Information about the user</li> <li><code>until_date</code> (<code>int</code> ): Date when restrictions will be lifted for this user; unix time. If 0, then the user is banned forever</li> </ul>"},{"location":"types/ChatMemberLeft/","title":"\ud83d\udd2e ChatMemberLeft","text":"<p>Represents a chat member that isn't currently a member of the chat, but may join it themselves.</p>"},{"location":"types/ChatMemberLeft/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>status</code> (<code>ChatMemberStatus</code> ): The member's status in the chat, always \u201cleft\u201d</li> <li><code>user</code> (User ): Information about the user</li> </ul>"},{"location":"types/ChatMemberMember/","title":"\ud83d\udd2e ChatMemberMember","text":"<p>Represents a chat member that has no additional privileges or restrictions.</p>"},{"location":"types/ChatMemberMember/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>status</code> (<code>ChatMemberStatus</code> ): The member's status in the chat, always \u201cmember\u201d</li> <li><code>user</code> (User ): Information about the user</li> <li><code>until_date</code> (<code>int</code> ): Optional. Date when the user's subscription will expire; Unix time</li> </ul>"},{"location":"types/ChatMemberOwner/","title":"\ud83d\udd2e ChatMemberOwner","text":"<p>Represents a chat member that owns the chat and has all administrator privileges.</p>"},{"location":"types/ChatMemberOwner/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>status</code> (<code>ChatMemberStatus</code> ): The member's status in the chat, always \u201ccreator\u201d</li> <li><code>user</code> (User ): Information about the user</li> <li><code>is_anonymous</code> (<code>bool</code> ): True, if the user's presence in the chat is hidden</li> <li><code>custom_title</code> (<code>str</code> ): Optional. Custom title for this user</li> </ul>"},{"location":"types/ChatMemberRestricted/","title":"\ud83d\udd2e ChatMemberRestricted","text":"<p>Represents a chat member that is under certain restrictions in the chat. Supergroups only.</p>"},{"location":"types/ChatMemberRestricted/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>status</code> (<code>ChatMemberStatus</code> ): The member's status in the chat, always \u201crestricted\u201d</li> <li><code>user</code> (User ): Information about the user</li> <li><code>is_member</code> (<code>bool</code> ): True, if the user is a member of the chat at the moment of the request</li> <li><code>can_send_messages</code> (<code>bool</code> ): True, if the user is allowed to send text messages, contacts, locations and venues</li> <li><code>can_send_audios</code> (<code>bool</code> ): True, if the user is allowed to send audios</li> <li><code>can_send_documents</code> (<code>bool</code> ): True, if the user is allowed to send documents</li> <li><code>can_send_photos</code> (<code>bool</code> ): True, if the user is allowed to send photos</li> <li><code>can_send_videos</code> (<code>bool</code> ): True, if the user is allowed to send videos</li> <li><code>can_send_video_notes</code> (<code>bool</code> ): True, if the user is allowed to send video notes</li> <li><code>can_send_voice_notes</code> (<code>bool</code> ): True, if the user is allowed to send voice notes</li> <li><code>can_send_polls</code> (<code>bool</code> ): True, if the user is allowed to send polls</li> <li><code>can_send_other_messages</code> (<code>bool</code> ): True, if the user is allowed to send animations, games, stickers and use inline bots</li> <li><code>can_add_web_page_previews</code> (<code>bool</code> ): True, if the user is allowed to add web page previews to their messages</li> <li><code>can_change_info</code> (<code>bool</code> ): True, if the user is allowed to change the chat title, photo and other settings</li> <li><code>can_invite_users</code> (<code>bool</code> ): True, if the user is allowed to invite new users to the chat</li> <li><code>can_pin_messages</code> (<code>bool</code> ): True, if the user is allowed to pin messages</li> <li><code>can_manage_topics</code> (<code>bool</code> ): True, if the user is allowed to create forum topics</li> <li><code>until_date</code> (<code>int</code> ): Date when restrictions will be lifted for this user; unix time. If 0, then the user is restricted forever</li> </ul>"},{"location":"types/ChatMemberUpdated/","title":"\ud83d\udd2e ChatMemberUpdated","text":"<p>This object represents changes in the status of a chat member.</p>"},{"location":"types/ChatMemberUpdated/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>chat</code> (Chat ): Chat the user belongs to</li> <li><code>from_user</code> (User ): Performer of the action, which resulted in the change</li> <li><code>date</code> (<code>int</code> ): Date the change was done in Unix time</li> <li><code>old_chat_member</code> (ChatMemberLeft ): Previous information about the chat member</li> <li><code>new_chat_member</code> (ChatMemberLeft ): New information about the chat member</li> <li><code>invite_link</code> (ChatInviteLink ): Optional. Chat invite link, which was used by the user to join the chat; for joining by invite link events only.</li> <li><code>via_join_request</code> (<code>bool</code> ): Optional. True, if the user joined the chat after sending a direct join request without using an invite link and being approved by an administrator</li> <li><code>via_chat_folder_invite_link</code> (<code>bool</code> ): Optional. True, if the user joined the chat via a chat folder invite link</li> </ul>"},{"location":"types/ChatPermissions/","title":"\ud83d\udd2e ChatPermissions","text":"<p>Describes actions that a non-administrator user is allowed to take in a chat.</p>"},{"location":"types/ChatPermissions/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>can_send_messages</code> (<code>bool</code> ): Optional. True, if the user is allowed to send text messages, contacts, locations and venues</li> <li><code>can_send_audios</code> (<code>bool</code> ): Optional. True, if the user is allowed to send audios</li> <li><code>can_send_documents</code> (<code>bool</code> ): Optional. True, if the user is allowed to send documents</li> <li><code>can_send_photos</code> (<code>bool</code> ): Optional. True, if the user is allowed to send photos</li> <li><code>can_send_videos</code> (<code>bool</code> ): Optional. True, if the user is allowed to send videos</li> <li><code>can_send_video_notes</code> (<code>bool</code> ): Optional. True, if the user is allowed to send video notes</li> <li><code>can_send_voice_notes</code> (<code>bool</code> ): Optional. True, if the user is allowed to send voice notes</li> <li><code>can_send_polls</code> (<code>bool</code> ): Optional. True, if the user is allowed to send polls, implies can_send_messages</li> <li><code>can_send_other_messages</code> (<code>bool</code> ): Optional. True, if the user is allowed to send animations, games, stickers and use inline bots</li> <li><code>can_add_web_page_previews</code> (<code>bool</code> ): Optional. True, if the user is allowed to add web page previews to their messages</li> <li><code>can_change_info</code> (<code>bool</code> ): Optional. True, if the user is allowed to change the chat title, photo and other settings. Ignored in public supergroups</li> <li><code>can_invite_users</code> (<code>bool</code> ): Optional. True, if the user is allowed to invite new users to the chat</li> <li><code>can_pin_messages</code> (<code>bool</code> ): Optional. True, if the user is allowed to pin messages. Ignored in public supergroups</li> <li><code>can_manage_topics</code> (<code>bool</code> ): Optional. True, if the user is allowed to create forum topics. If omitted defaults to the value of can_pin_messages</li> </ul>"},{"location":"types/ChatPhoto/","title":"\ud83d\udd2e ChatPhoto","text":"<p>This object represents a chat photo.</p>"},{"location":"types/ChatPhoto/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>small_file_id</code> (<code>str</code> ): File identifier of small (160x160) chat photo. This file_id can be used only for photo download and only for as long as the photo is not changed.</li> <li><code>small_file_unique_id</code> (<code>str</code> ): Unique file identifier of small (160x160) chat photo, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</li> <li><code>big_file_id</code> (<code>str</code> ): File identifier of big (640x640) chat photo. This file_id can be used only for photo download and only for as long as the photo is not changed.</li> <li><code>big_file_unique_id</code> (<code>str</code> ): Unique file identifier of big (640x640) chat photo, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</li> </ul>"},{"location":"types/ChatShared/","title":"\ud83d\udd2e ChatShared","text":"<p>This object contains information about the chat whose identifier was shared with the bot using a</p>"},{"location":"types/ChatShared/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>request_id</code> (<code>int</code> ): identifier of the request</li> <li><code>chat_id</code> (<code>int</code> ): Identifier of the shared chat. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier. The bot may not have access to the chat and could be unable to use this identifier, unless the chat is already known to the bot by some other means.</li> <li><code>title</code> (<code>str</code> ): Optional. Title of the shared chat</li> <li><code>username</code> (<code>str</code> ): Optional. Username of the shared chat</li> <li><code>photo</code> (List of PhotoSize ): Optional. Array of Photosize</li> </ul>"},{"location":"types/Checklist/","title":"\ud83d\udd2e Checklist","text":"<p>Describes a checklist.</p>"},{"location":"types/Checklist/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>title</code> (<code>String</code> ): Title of the checklist</li> <li><code>title_entities</code> (List of MessageEntity ): Optional. Special entities that appear in the checklist title</li> <li><code>tasks</code> (List of ChecklistTask ): List of tasks in the checklist</li> <li><code>others_can_add_tasks</code> (<code>bool</code> ): Optional. True, if users other than the creator of the list can add tasks to the list</li> <li><code>others_can_mark_tasks_as_done</code> (<code>bool</code> ): Optional. True, if users other than the creator of the list can mark tasks as done or not done</li> </ul>"},{"location":"types/ChecklistTask/","title":"\ud83d\udd2e ChecklistTask","text":"<p>Describes a task in a checklist.</p>"},{"location":"types/ChecklistTask/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>id</code> (<code>int</code> ): Unique identifier of the task</li> <li><code>text</code> (<code>str</code> ): Text of the task</li> <li><code>text_entities</code> (List of MessageEntity ): Optional. Special entities that appear in the task text</li> <li><code>completed_by_user</code> (User ): Optional. User that completed the task; omitted if the task wasn't completed</li> <li><code>completion_date</code> (<code>int</code> ): Optional. Point in time (Unix timestamp) when the task was completed; 0 if the task wasn't completed</li> </ul>"},{"location":"types/ChecklistTasksAdded/","title":"\ud83d\udd2e ChecklistTasksAdded","text":"<p>Describes a service message about tasks added to a checklist.</p>"},{"location":"types/ChecklistTasksAdded/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>checklist_message</code> (Message ): Optional. Message containing the checklist to which the tasks were added. Note that the Message object in this field will not contain the reply_to_message field even if it itself is a reply.</li> <li><code>tasks</code> (List of ChecklistTask ): List of tasks added to the checklist</li> </ul>"},{"location":"types/ChecklistTasksDone/","title":"\ud83d\udd2e ChecklistTasksDone","text":"<p>Describes a service message about checklist tasks marked as done or not done.</p>"},{"location":"types/ChecklistTasksDone/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>checklist_message</code> (Message ): Optional. Message containing the checklist whose tasks were marked as done or not done. Note that the Message object in this field will not contain the reply_to_message field even if it itself is a reply.</li> <li><code>marked_as_done_task_ids</code> (List of <code>int</code> ): Optional. Identifiers of the tasks that were marked as done</li> <li><code>marked_as_not_done_task_ids</code> (List of <code>int</code> ): Optional. Identifiers of the tasks that were marked as not done</li> </ul>"},{"location":"types/ChosenInlineResult/","title":"\ud83d\udd2e ChosenInlineResult","text":"<p>Represents a result of an inline query that was chosen by the user and sent to their chat partner.</p>"},{"location":"types/ChosenInlineResult/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>result_id</code> (<code>str</code> ): The unique identifier for the result that was chosen</li> <li><code>from_user</code> (User )</li> <li><code>query</code> (<code>str</code> ): The query that was used to obtain the result</li> <li><code>location</code> (Location ): Optional. Sender location, only for bots that require user location</li> <li><code>inline_message_id</code> (<code>str</code> ): Optional. Identifier of the sent inline message. Available only if there is an inline keyboard attached to the message. Will be also received in callback queries and can be used to edit the message.</li> </ul>"},{"location":"types/Contact/","title":"\ud83d\udd2e Contact","text":"<p>This object represents a phone contact.</p>"},{"location":"types/Contact/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>phone_number</code> (<code>str</code> ): Contact's phone number</li> <li><code>first_name</code> (<code>str</code> ): Contact's first name</li> <li><code>last_name</code> (<code>str</code> ): Optional. Contact's last name</li> <li><code>user_id</code> (<code>int</code> ): Optional. Contact's user identifier in Telegram. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier.</li> <li><code>vcard</code> (<code>str</code> ): Optional. Additional data about the contact in the form of a vCard</li> </ul>"},{"location":"types/CopyTextButton/","title":"\ud83d\udd2e CopyTextButton","text":"<p>This object represents an inline keyboard button that copies specified text to the clipboard.</p>"},{"location":"types/CopyTextButton/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>text</code> (<code>str</code> ): The text to be copied to the clipboard; 1-256 characters</li> </ul>"},{"location":"types/Dice/","title":"\ud83d\udd2e Dice","text":"<p>This object represents an animated emoji that displays a random value.</p>"},{"location":"types/Dice/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>emoji</code> (<code>str</code> ): Emoji on which the dice throw animation is based</li> <li><code>value</code> (<code>int</code> ): Value of the dice, 1-6 for \u201c\ud83c\udfb2\u201d, \u201c\ud83c\udfaf\u201d and \u201c\ud83c\udfb3\u201d base emoji, 1-5 for \u201c\ud83c\udfc0\u201d and \u201c\u26bd\u201d base emoji, 1-64 for \u201c\ud83c\udfb0\u201d base emoji</li> </ul>"},{"location":"types/DirectMessagePriceChanged/","title":"\ud83d\udd2e DirectMessagePriceChanged","text":"<p>Describes a service message about a change in the price of direct messages sent to a channel chat.</p>"},{"location":"types/DirectMessagePriceChanged/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>are_direct_messages_enabled</code> (<code>bool</code> ): True, if direct messages are enabled for the channel chat; false otherwise</li> <li><code>direct_message_star_count</code> (<code>int</code> ): Optional. The new number of Telegram Stars that must be paid by users for each direct message sent to the channel. Does not apply to users who have been exempted by administrators. Defaults to 0.</li> </ul>"},{"location":"types/DirectMessagesTopic/","title":"\ud83d\udd2e DirectMessagesTopic","text":"<p>Describes a topic of a direct messages chat.</p>"},{"location":"types/DirectMessagesTopic/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>topic_id</code> (<code>int</code> ): Unique identifier of the topic. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier.</li> <li><code>user</code> (User ): Optional. Information about the user that created the topic. Currently, it is always present.</li> </ul>"},{"location":"types/Document/","title":"\ud83d\udd2e Document","text":"<p>This object represents a general file (as opposed to photos, voice messages and audio files).</p>"},{"location":"types/Document/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>file_id</code> (<code>str</code> ): Identifier for this file, which can be used to download or reuse the file</li> <li><code>file_unique_id</code> (<code>str</code> ): Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</li> <li><code>thumbnail</code> (PhotoSize ): Optional. Document thumbnail as defined by sender</li> <li><code>file_name</code> (<code>str</code> ): Optional. Original filename as defined by sender</li> <li><code>mime_type</code> (<code>str</code> ): Optional. MIME type of the file as defined by sender</li> <li><code>file_size</code> (<code>int</code> ): Optional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.</li> </ul>"},{"location":"types/EncryptedCredentials/","title":"\ud83d\udd2e EncryptedCredentials","text":""},{"location":"types/EncryptedCredentials/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>data</code> (<code>str</code> )</li> <li><code>hash</code> (<code>str</code> )</li> <li><code>secret</code> (<code>str</code> )</li> </ul>"},{"location":"types/EncryptedPassportElement/","title":"\ud83d\udd2e EncryptedPassportElement","text":""},{"location":"types/EncryptedPassportElement/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> )</li> <li><code>hash</code> (<code>str</code> )</li> <li><code>data</code> (<code>str</code> )</li> <li><code>phone_number</code> (<code>str</code> )</li> <li><code>email</code> (<code>str</code> )</li> <li><code>files</code> (List of PassportFile )</li> <li><code>front_side</code> (PassportFile )</li> <li><code>reverse_side</code> (PassportFile )</li> <li><code>selfie</code> (PassportFile )</li> <li><code>translation</code> (List of PassportFile )</li> </ul>"},{"location":"types/ExternalReplyInfo/","title":"\ud83d\udd2e ExternalReplyInfo","text":"<p>This object contains information about a message that is being replied to,</p>"},{"location":"types/ExternalReplyInfo/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>origin</code> (<code>MessageOrigin</code> ): Origin of the message replied to by the given message</li> <li><code>chat</code> (Chat ): Optional. Chat the original message belongs to. Available only if the chat is a supergroup or a channel.</li> <li><code>message_id</code> (<code>int</code> ): Optional. Unique message identifier inside the original chat. Available only if the original chat is a supergroup or a channel.</li> <li><code>link_preview_options</code> (LinkPreviewOptions ): Optional. Options used for link preview generation for the original message, if it is a text message</li> <li><code>animation</code> (Animation ): Optional. Message is an animation, information about the animation</li> <li><code>audio</code> (Audio ): Optional. Message is an audio file, information about the file</li> <li><code>document</code> (Document ): Optional. Message is a general file, information about the file</li> <li><code>paid_media</code> (PaidMediaInfo )</li> <li><code>photo</code> (List of PhotoSize ): Optional. Message is a photo, available sizes of the photo</li> <li><code>sticker</code> (Sticker ): Optional. Message is a sticker, information about the sticker</li> <li><code>story</code> (Story ): Optional. Message is a forwarded story</li> <li><code>video</code> (Video ): Optional. Message is a video, information about the video</li> <li><code>video_note</code> (VideoNote ): Optional. Message is a video note, information about the video message</li> <li><code>voice</code> (Voice ): Optional. Message is a voice message, information about the file</li> <li><code>has_media_spoiler</code> (<code>bool</code> ): Optional. True, if the message media is covered by a spoiler animation</li> <li><code>checklist</code> (Checklist ): Optional. Message is a checklist</li> <li><code>contact</code> (Contact ): Optional. Message is a shared contact, information about the contact</li> <li><code>dice</code> (Dice ): Optional. Message is a dice with random value</li> <li><code>game</code> (Game ): Optional. Message is a game, information about the game. More about games \u00bb</li> <li><code>giveaway</code> (Giveaway ): Optional. Message is a scheduled giveaway, information about the giveaway</li> <li><code>giveaway_winners</code> (GiveawayWinners ): Optional. A giveaway with public winners was completed</li> <li><code>invoice</code> (Invoice ): Optional. Message is an invoice for a payment, information about the invoice. More about payments \u00bb</li> <li><code>location</code> (Location ): Optional. Message is a shared location, information about the location</li> <li><code>poll</code> (Poll ): Optional. Message is a native poll, information about the poll</li> <li><code>venue</code> (Venue ): Optional. Message is a venue, information about the venue</li> </ul>"},{"location":"types/File/","title":"\ud83d\udd2e File","text":"<p>This object represents a file ready to be downloaded. The file can be downloaded via the link https://api.telegram.org/file/bot/. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling getFile."},{"location":"types/File/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>file_id</code> (<code>str</code> ): Identifier for this file, which can be used to download or reuse the file</li> <li><code>file_unique_id</code> (<code>str</code> ): Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</li> <li><code>file_size</code> (<code>int</code> ): Optional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.</li> <li><code>file_path</code> (<code>str</code> ): Optional. File path. Use https://api.telegram.org/file/bot/ to get the file."},{"location":"types/ForceReply/","title":"\ud83d\udd2e ForceReply","text":"<p>Upon receiving a message with this object, Telegram clients will display a reply interface to the user (act as if the user has selected the bot's message and tapped 'Reply'). This can be extremely useful if you want to create user-friendly step-by-step interfaces without having to sacrifice privacy mode.</p>"},{"location":"types/ForceReply/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>force_reply</code> (<code>bool</code> ): Shows reply interface to the user, as if they manually selected the bot's message and tapped 'Reply'</li> <li><code>input_field_placeholder</code> (<code>str</code> ): Optional. The placeholder to be shown in the input field when the reply is active; 1-64 characters</li> <li><code>selective</code> (<code>bool</code> ): Optional. Use this parameter if you want to force reply from specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply to a message in the same chat and forum topic, sender of the original message.</li> </ul>"},{"location":"types/ForumTopic/","title":"\ud83d\udd2e ForumTopic","text":"<p>This object represents a forum topic.</p>"},{"location":"types/ForumTopic/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>message_thread_id</code> (<code>int</code> ): Unique identifier of the forum topic</li> <li><code>name</code> (<code>str</code> ): Name of the topic</li> <li><code>icon_color</code> (<code>int</code> ): Color of the topic icon in RGB format</li> <li><code>icon_custom_emoji_id</code> (<code>str</code> ): Optional. Unique identifier of the custom emoji shown as the topic icon</li> </ul>"},{"location":"types/ForumTopicClosed/","title":"\ud83d\udd2e ForumTopicClosed","text":"<p>This object represents a service message about a forum topic closed in the chat. Currently holds no information.</p>"},{"location":"types/ForumTopicClosed/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>name</code> (<code>str</code> )</li> <li><code>icon_custom_emoji_id</code> (<code>str</code> )</li> </ul>"},{"location":"types/ForumTopicCreated/","title":"\ud83d\udd2e ForumTopicCreated","text":"<p>This object represents a service message about a new forum topic created in the chat.</p>"},{"location":"types/ForumTopicCreated/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>name</code> (<code>str</code> ): Name of the topic</li> <li><code>icon_color</code> (<code>int</code> ): Color of the topic icon in RGB format</li> <li><code>icon_custom_emoji_id</code> (<code>str</code> ): Optional. Unique identifier of the custom emoji shown as the topic icon</li> </ul>"},{"location":"types/ForumTopicEdited/","title":"\ud83d\udd2e ForumTopicEdited","text":"<p>This object represents a service message about an edited forum topic.</p>"},{"location":"types/ForumTopicEdited/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>name</code> (<code>str</code> ): Optional, Name of the topic(if updated)</li> <li><code>icon_custom_emoji_id</code> (<code>str</code> ): Optional. New identifier of the custom emoji shown as the topic icon, if it was edited; an empty string if the icon was removed</li> </ul>"},{"location":"types/ForumTopicReopened/","title":"\ud83d\udd2e ForumTopicReopened","text":"<p>This object represents a service message about a forum topic reopened in the chat. Currently holds no information.</p>"},{"location":"types/ForumTopicReopened/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>user_id</code> (<code>int</code> )</li> <li><code>first_name</code> (<code>str</code> )</li> <li><code>last_name</code> (<code>str</code> )</li> <li><code>username</code> (<code>str</code> )</li> <li><code>photo</code> (List of PhotoSize )</li> </ul>"},{"location":"types/Game/","title":"\ud83d\udd2e Game","text":"<p>This object represents a game. Use BotFather to create and edit games, their short names will act as unique identifiers.</p>"},{"location":"types/Game/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>title</code> (<code>str</code> ): Title of the game</li> <li><code>description</code> (<code>str</code> ): Description of the game</li> <li><code>photo</code> (List of PhotoSize ): Photo that will be displayed in the game message in chats.</li> <li><code>text</code> (<code>str</code> ): Optional. Brief description of the game or high scores included in the game message. Can be automatically edited to include current high scores for the game when the bot calls setGameScore, or manually edited using editMessageText. 0-4096 characters.</li> <li><code>text_entities</code> (List of MessageEntity ): Optional. Special entities that appear in text, such as usernames, URLs, bot commands, etc.</li> <li><code>animation</code> (Animation ): Optional. Animation that will be displayed in the game message in chats. Upload via BotFather</li> </ul>"},{"location":"types/GameHighScore/","title":"\ud83d\udd2e GameHighScore","text":"<p>This object represents one row of the high scores table for a game.</p>"},{"location":"types/GameHighScore/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>position</code> (<code>int</code> ): Position in high score table for the game</li> <li><code>user</code> (User ): User</li> <li><code>score</code> (<code>int</code> ): Score</li> </ul>"},{"location":"types/GeneralForumTopicHidden/","title":"\ud83d\udd2e GeneralForumTopicHidden","text":"<p>This object represents a service message about General forum topic hidden in the chat.</p>"},{"location":"types/GeneralForumTopicHidden/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>user_id</code> (<code>int</code> )</li> <li><code>first_name</code> (<code>str</code> )</li> <li><code>last_name</code> (<code>str</code> )</li> <li><code>username</code> (<code>str</code> )</li> <li><code>photo</code> (List of PhotoSize )</li> </ul>"},{"location":"types/GeneralForumTopicUnhidden/","title":"\ud83d\udd2e GeneralForumTopicUnhidden","text":"<p>This object represents a service message about General forum topic unhidden in the chat.</p>"},{"location":"types/GeneralForumTopicUnhidden/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>user_id</code> (<code>int</code> )</li> <li><code>first_name</code> (<code>str</code> )</li> <li><code>last_name</code> (<code>str</code> )</li> <li><code>username</code> (<code>str</code> )</li> <li><code>photo</code> (List of PhotoSize )</li> </ul>"},{"location":"types/Gift/","title":"\ud83d\udd2e Gift","text":"<p>This object represents a gift that can be sent by the bot.</p>"},{"location":"types/Gift/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>id</code> (<code>str</code> ): Unique identifier of the gift.</li> <li><code>sticker</code> (Sticker ): The sticker that represents the gift</li> <li><code>star_count</code> (<code>int</code> ): The number of Telegram Stars that must be paid to send the sticker</li> <li><code>upgrade_star_count</code> (<code>int</code> ): Optional. The number of Telegram Stars that must be paid to upgrade the gift to a unique one</li> <li><code>total_count</code> (<code>int</code> ): Optional. The total number of the gifts of this type that can be sent; for limited gifts only</li> <li><code>remaining_count</code> (<code>int</code> ): Optional. The number of remaining gifts of this type that can be sent; for limited gifts only</li> <li><code>publisher_chat</code> (Chat ): Optional. Information about the chat that published the gift</li> </ul>"},{"location":"types/GiftInfo/","title":"\ud83d\udd2e GiftInfo","text":"<p>Describes a service message about a regular gift that was sent or received.</p>"},{"location":"types/GiftInfo/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>gift</code> (Gift ): Information about the gift</li> <li><code>owned_gift_id</code> (<code>str</code> ): Optional. Unique identifier of the received gift for the bot; only present for gifts received on behalf of business accounts</li> <li><code>convert_star_count</code> (<code>int</code> ): Optional. Number of Telegram Stars that can be claimed by the receiver by converting the gift; omitted if conversion to Telegram Stars is impossible</li> <li><code>prepaid_upgrade_star_count</code> (<code>int</code> ): Optional. Number of Telegram Stars that were prepaid by the sender for the ability to upgrade the gift</li> <li><code>can_be_upgraded</code> (<code>bool</code> ): Optional. True, if the gift can be upgraded to a unique gift</li> <li><code>text</code> (<code>str</code> ): Optional. Text of the message that was added to the gift</li> <li><code>entities</code> (List of MessageEntity ): Optional. Special entities that appear in the text</li> <li><code>is_private</code> (<code>bool</code> ): Optional. True, if the sender and gift text are shown only to the gift receiver; otherwise, everyone will be able to see them</li> </ul>"},{"location":"types/Gifts/","title":"\ud83d\udd2e Gifts","text":"<p>This object represent a list of gifts.</p>"},{"location":"types/Gifts/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>gifts</code> (List of Gift ): Photo that will be displayed in the game message in chats.</li> </ul>"},{"location":"types/Giveaway/","title":"\ud83d\udd2e Giveaway","text":"<p>This object represents a message about a scheduled giveaway.</p>"},{"location":"types/Giveaway/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>chats</code> (List of Chat ): The list of chats which the user must join to participate in the giveaway</li> <li><code>winners_selection_date</code> (<code>int</code> ): Point in time (Unix timestamp) when winners of the giveaway will be selected</li> <li><code>winner_count</code> (<code>int</code> ): The number of users which are supposed to be selected as winners of the giveaway</li> <li><code>only_new_members</code> (<code>bool</code> ): Optional. True, if only users who join the chats after the giveaway started should be eligible to win</li> <li><code>has_public_winners</code> (<code>bool</code> ): Optional. True, if the list of giveaway winners will be visible to everyone</li> <li><code>prize_description</code> (<code>str</code> ): Optional. Description of additional giveaway prize</li> <li><code>country_codes</code> (List of <code>str</code> ): Optional. A list of two-letter ISO 3166-1 alpha-2 country codes indicating the countries from which eligible users for the giveaway must come. If empty, then all users can participate in the giveaway.</li> <li><code>prize_star_count</code> (<code>int</code> ): Optional. The number of Telegram Stars to be split between giveaway winners; for Telegram Star giveaways only</li> <li><code>premium_subscription_month_count</code> (<code>int</code> ): Optional. The number of months the Telegram Premium subscription won from the giveaway will be active for</li> </ul>"},{"location":"types/GiveawayCompleted/","title":"\ud83d\udd2e GiveawayCompleted","text":"<p>This object represents a service message about the completion of a giveaway without public winners.</p>"},{"location":"types/GiveawayCompleted/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>winner_count</code> (<code>int</code> ): Number of winners in the giveaway</li> <li><code>unclaimed_prize_count</code> (<code>int</code> ): Optional. Number of undistributed prizes</li> <li><code>giveaway_message</code> (Message ): Optional. Message with the giveaway that was completed, if it wasn't deleted</li> <li><code>is_star_giveaway</code> (<code>bool</code> ): Optional. True, if the giveaway is a Telegram Star giveaway. Otherwise, currently, the giveaway is a Telegram Premium giveaway.</li> </ul>"},{"location":"types/GiveawayCreated/","title":"\ud83d\udd2e GiveawayCreated","text":"<p>This object represents a service message about the creation of a scheduled giveaway.</p>"},{"location":"types/GiveawayCreated/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>prize_star_count</code> (<code>int</code> ): Optional. The number of Telegram Stars to be split between giveaway winners; for Telegram Star giveaways only</li> </ul>"},{"location":"types/GiveawayWinners/","title":"\ud83d\udd2e GiveawayWinners","text":"<p>This object represents a message about the completion of a giveaway with public winners.</p>"},{"location":"types/GiveawayWinners/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>chat</code> (Chat ): The chat that created the giveaway</li> <li><code>giveaway_message_id</code> (<code>int</code> ): Identifier of the messsage with the giveaway in the chat</li> <li><code>winners_selection_date</code> (<code>int</code> ): Point in time (Unix timestamp) when winners of the giveaway were selected</li> <li><code>winner_count</code> (<code>int</code> ): Total number of winners in the giveaway</li> <li><code>winners</code> (List of User ): List of up to 100 winners of the giveaway</li> <li><code>additional_chat_count</code> (<code>int</code> ): Optional. The number of other chats the user had to join in order to be eligible for the giveaway</li> <li><code>prize_star_count</code> (<code>int</code> ): Optional. The number of Telegram Stars to be split between giveaway winners; for Telegram Star giveaways only</li> <li><code>premium_subscription_month_count</code> (<code>int</code> ): Optional. The number of months the Telegram Premium subscription won from the giveaway will be active for</li> <li><code>unclaimed_prize_count</code> (<code>int</code> ): Optional. Number of undistributed prizes</li> <li><code>only_new_members</code> (<code>bool</code> ): Optional. True, if only users who had joined the chats after the giveaway started were eligible to win</li> <li><code>was_refunded</code> (<code>bool</code> ): Optional. True, if the giveaway was canceled because the payment for it was refunded</li> <li><code>prize_description</code> (<code>str</code> ): Optional. Description of additional giveaway prize</li> </ul>"},{"location":"types/InaccessibleMessage/","title":"\ud83d\udd2e InaccessibleMessage","text":"<p>This object describes a message that was deleted or is otherwise inaccessible to the bot.</p>"},{"location":"types/InaccessibleMessage/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>chat</code> (Chat ): Chat the message belonged to</li> <li><code>message_id</code> (<code>int</code> ): Unique message identifier inside the chat</li> <li><code>date</code> (<code>int</code> ): Always 0. The field can be used to differentiate regular and inaccessible messages.</li> </ul>"},{"location":"types/InlineKeyboardButton/","title":"\ud83d\udd2e InlineKeyboardButton","text":"<p>This object represents one button of an inline keyboard. You must use exactly one of the optional fields.</p>"},{"location":"types/InlineKeyboardButton/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>text</code> (<code>str</code> ): Label text on the button</li> <li><code>callback_data</code> (<code>str</code> ): Optional. Data to be sent in a callback query to the bot when button is pressed, 1-64 bytes</li> <li><code>url</code> (<code>str</code> ): Optional. HTTP or tg:// URL to be opened when the button is pressed. Links tg://user?id= can be used to mention a user by their ID without using a username, if this is allowed by their privacy settings. <li><code>web_app</code> (WebAppInfo ): Optional. Description of the Web App that will be launched when the user presses the button. The Web App will be able to send an arbitrary message on behalf of the user using the method answerWebAppQuery. Available only in private chats between a user and the bot.</li> <li><code>login_url</code> (LoginUrl ): Optional. An HTTPS URL used to automatically authorize the user. Can be used as a replacement for the Telegram Login Widget.</li> <li><code>switch_inline_query</code> (<code>str</code> ): Optional. If set, pressing the button will prompt the user to select one of their chats, open that chat and insert the bot's username and the specified inline query in the input field. May be empty, in which case just the bot's username will be inserted.Note: This offers an easy way for users to start using your bot in inline mode when they are currently in a private chat with it. Especially useful when combined with switch_pm\u2026 actions - in this case the user will be automatically returned to the chat they switched from, skipping the chat selection screen.</li> <li><code>switch_inline_query_current_chat</code> (<code>str</code> ): Optional. If set, pressing the button will insert the bot's username and the specified inline query in the current chat's input field. May be empty, in which case only the bot's username will be inserted.This offers a quick way for the user to open your bot in inline mode in the same chat - good for selecting something from multiple options.</li> <li><code>switch_inline_query_chosen_chat</code> (SwitchInlineQueryChosenChat ): Optional. If set, pressing the button will prompt the user to select one of their chats of the specified type, open that chat and insert the bot's username and the specified inline query in the input field</li> <li><code>copy_text</code> (CopyTextButton ): Optional. Description of the button that copies the specified text to the clipboard.</li> <li><code>callback_game</code> (CallbackGame ): Optional. Description of the game that will be launched when the user presses the button. NOTE: This type of button must always be the first button in the first row.</li> <li><code>pay</code> (<code>bool</code> ): Optional. Specify True, to send a Pay button. NOTE: This type of button must always be the first button in the first row and can only be used in invoice messages.</li> <li><code>user_id</code> (<code>int</code> )</li>"},{"location":"types/InlineKeyboardMarkup/","title":"\ud83d\udd2e InlineKeyboardMarkup","text":"<p>This object represents an inline keyboard that appears right next to the message it belongs to.</p>"},{"location":"types/InlineKeyboardMarkup/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>inline_keyboard</code> (List of List of InlineKeyboardButton )</li> </ul>"},{"location":"types/InlineQuery/","title":"\ud83d\udd2e InlineQuery","text":"<p>This object represents an incoming inline query. When the user sends an empty query, your bot could return some default or trending results.</p>"},{"location":"types/InlineQuery/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>id</code> (<code>str</code> ): Unique identifier for this query</li> <li><code>from_user</code> (User ): Sender</li> <li><code>query</code> (<code>str</code> ): Text of the query (up to 256 characters)</li> <li><code>offset</code> (<code>str</code> ): Offset of the results to be returned, can be controlled by the bot</li> <li><code>chat_type</code> (<code>ChatType</code> ): Optional. Type of the chat from which the inline query was sent. Can be either \u201csender\u201d for a private chat with the inline query sender, \u201cprivate\u201d, \u201cgroup\u201d, \u201csupergroup\u201d, or \u201cchannel\u201d. The chat type should be always known for requests sent from official clients and most third-party clients, unless the request was sent from a secret chat</li> <li><code>location</code> (Location ): Optional. Sender location, only for bots that request user location</li> </ul>"},{"location":"types/InlineQueryResultArticle/","title":"\ud83d\udd2e InlineQueryResultArticle","text":"<p>Represents a link to an article or web page.</p>"},{"location":"types/InlineQueryResultArticle/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>title</code> (<code>str</code> ): Title of the result</li> <li><code>input_message_content</code> (InputMessageContent ): Content of the message to be sent</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> <li><code>url</code> (<code>str</code> ): Optional. URL of the result</li> <li><code>description</code> (<code>str</code> ): Optional. Short description of the result</li> <li><code>thumbnail_url</code> (<code>str</code> ): Optional. Url of the thumbnail for the result</li> <li><code>thumbnail_width</code> (<code>int</code> ): Optional. Thumbnail width</li> <li><code>thumbnail_height</code> (<code>int</code> ): Optional. Thumbnail height</li> </ul>"},{"location":"types/InlineQueryResultAudio/","title":"\ud83d\udd2e InlineQueryResultAudio","text":"<p>Represents a link to an MP3 audio file. By default, this audio file will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the audio.</p>"},{"location":"types/InlineQueryResultAudio/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>audio_url</code> (<code>str</code> ): A valid URL for the audio file</li> <li><code>title</code> (<code>str</code> ): Title</li> <li><code>caption</code> (<code>str</code> ): Optional. Caption, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the audio caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>performer</code> (<code>str</code> ): Optional. Performer</li> <li><code>audio_duration</code> (<code>int</code> ): Optional. Audio duration in seconds</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> <li><code>input_message_content</code> (InputMessageContent ): Optional. Content of the message to be sent instead of the audio</li> </ul>"},{"location":"types/InlineQueryResultCachedAudio/","title":"\ud83d\udd2e InlineQueryResultCachedAudio","text":"<p>Represents a link to an MP3 audio file stored on the Telegram servers. By default, this audio file will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the audio.</p>"},{"location":"types/InlineQueryResultCachedAudio/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>audio_file_id</code> (<code>str</code> ): A valid file identifier for the audio file</li> <li><code>caption</code> (<code>str</code> ): Optional. Caption, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the audio caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> <li><code>input_message_content</code> (InputMessageContent ): Optional. Content of the message to be sent instead of the audio</li> </ul>"},{"location":"types/InlineQueryResultCachedDocument/","title":"\ud83d\udd2e InlineQueryResultCachedDocument","text":"<p>Represents a link to a file stored on the Telegram servers. By default, this file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the file.</p>"},{"location":"types/InlineQueryResultCachedDocument/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>title</code> (<code>str</code> ): Title for the result</li> <li><code>document_file_id</code> (<code>str</code> ): A valid file identifier for the file</li> <li><code>description</code> (<code>str</code> ): Optional. Short description of the result</li> <li><code>caption</code> (<code>str</code> ): Optional. Caption of the document to be sent, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the document caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> <li><code>input_message_content</code> (InputMessageContent ): Optional. Content of the message to be sent instead of the file</li> </ul>"},{"location":"types/InlineQueryResultCachedGif/","title":"\ud83d\udd2e InlineQueryResultCachedGif","text":"<p>Represents a link to an animated GIF file stored on the Telegram servers. By default, this animated GIF file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with specified content instead of the animation.</p>"},{"location":"types/InlineQueryResultCachedGif/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>gif_file_id</code> (<code>str</code> ): A valid file identifier for the GIF file</li> <li><code>title</code> (<code>str</code> ): Optional. Title for the result</li> <li><code>caption</code> (<code>str</code> ): Optional. Caption of the GIF file to be sent, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>show_caption_above_media</code> (<code>bool</code> ): Optional. Pass True, if a caption is not required for the media</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> <li><code>input_message_content</code> (InputMessageContent ): Optional. Content of the message to be sent instead of the GIF animation</li> </ul>"},{"location":"types/InlineQueryResultCachedMpeg4Gif/","title":"\ud83d\udd2e InlineQueryResultCachedMpeg4Gif","text":"<p>Represents a link to a video animation (H.264/MPEG-4 AVC video without sound) stored on the Telegram servers. By default, this animated MPEG-4 file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation.</p>"},{"location":"types/InlineQueryResultCachedMpeg4Gif/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>mpeg4_file_id</code> (<code>str</code> ): A valid file identifier for the MPEG4 file</li> <li><code>title</code> (<code>str</code> ): Optional. Title for the result</li> <li><code>caption</code> (<code>str</code> ): Optional. Caption of the MPEG-4 file to be sent, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>show_caption_above_media</code> (<code>bool</code> ): Optional. Pass True, if caption should be shown above the media</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> <li><code>input_message_content</code> (InputMessageContent ): Optional. Content of the message to be sent instead of the video animation</li> </ul>"},{"location":"types/InlineQueryResultCachedPhoto/","title":"\ud83d\udd2e InlineQueryResultCachedPhoto","text":"<p>Represents a link to a photo stored on the Telegram servers. By default, this photo will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the photo.</p>"},{"location":"types/InlineQueryResultCachedPhoto/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>photo_file_id</code> (<code>str</code> ): A valid file identifier of the photo</li> <li><code>title</code> (<code>str</code> ): Optional. Title for the result</li> <li><code>description</code> (<code>str</code> ): Optional. Short description of the result</li> <li><code>caption</code> (<code>str</code> ): Optional. Caption of the photo to be sent, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the photo caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>show_caption_above_media</code> (<code>bool</code> ): Optional. Pass True, if a caption is not required for the media</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> <li><code>input_message_content</code> (InputMessageContent ): Optional. Content of the message to be sent instead of the photo</li> </ul>"},{"location":"types/InlineQueryResultCachedSticker/","title":"\ud83d\udd2e InlineQueryResultCachedSticker","text":"<p>Represents a link to a sticker stored on the Telegram servers. By default, this sticker will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the sticker.</p>"},{"location":"types/InlineQueryResultCachedSticker/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>sticker_file_id</code> (<code>str</code> ): A valid file identifier of the sticker</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> <li><code>input_message_content</code> (InputMessageContent ): Optional. Content of the message to be sent instead of the sticker</li> </ul>"},{"location":"types/InlineQueryResultCachedVideo/","title":"\ud83d\udd2e InlineQueryResultCachedVideo","text":"<p>Represents a link to a video file stored on the Telegram servers. By default, this video file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the video.</p>"},{"location":"types/InlineQueryResultCachedVideo/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>video_file_id</code> (<code>str</code> ): A valid file identifier for the video file</li> <li><code>title</code> (<code>str</code> ): Title for the result</li> <li><code>description</code> (<code>str</code> ): Optional. Short description of the result</li> <li><code>caption</code> (<code>str</code> ): Optional. Caption of the video to be sent, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the video caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>show_caption_above_media</code> (<code>bool</code> ): Optional. Pass True, if a caption is not required for the media</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> <li><code>input_message_content</code> (InputMessageContent ): Optional. Content of the message to be sent instead of the video</li> </ul>"},{"location":"types/InlineQueryResultCachedVoice/","title":"\ud83d\udd2e InlineQueryResultCachedVoice","text":"<p>Represents a link to a voice message stored on the Telegram servers. By default, this voice message will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the voice message.</p>"},{"location":"types/InlineQueryResultCachedVoice/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>voice_file_id</code> (<code>str</code> ): A valid file identifier for the voice message</li> <li><code>title</code> (<code>str</code> ): Voice message title</li> <li><code>caption</code> (<code>str</code> ): Optional. Caption, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the voice message caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> <li><code>input_message_content</code> (InputMessageContent ): Optional. Content of the message to be sent instead of the voice message</li> </ul>"},{"location":"types/InlineQueryResultContact/","title":"\ud83d\udd2e InlineQueryResultContact","text":"<p>Represents a contact with a phone number. By default, this contact will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the contact.</p>"},{"location":"types/InlineQueryResultContact/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>phone_number</code> (<code>str</code> ): Contact's phone number</li> <li><code>first_name</code> (<code>str</code> ): Contact's first name</li> <li><code>last_name</code> (<code>str</code> ): Optional. Contact's last name</li> <li><code>vcard</code> (<code>str</code> ): Optional. Additional data about the contact in the form of a vCard, 0-2048 bytes</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> <li><code>input_message_content</code> (InputMessageContent ): Optional. Content of the message to be sent instead of the contact</li> <li><code>thumbnail_url</code> (<code>str</code> ): Optional. Url of the thumbnail for the result</li> <li><code>thumbnail_width</code> (<code>int</code> ): Optional. Thumbnail width</li> <li><code>thumbnail_height</code> (<code>int</code> ): Optional. Thumbnail height</li> </ul>"},{"location":"types/InlineQueryResultDocument/","title":"\ud83d\udd2e InlineQueryResultDocument","text":"<p>Represents a link to a file. By default, this file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the file. Currently, only .PDF and .ZIP files can be sent using this method.</p>"},{"location":"types/InlineQueryResultDocument/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>title</code> (<code>str</code> ): Title for the result</li> <li><code>document_url</code> (<code>str</code> ): A valid URL for the file</li> <li><code>mime_type</code> (<code>str</code> ): MIME type of the content of the file, either \u201capplication/pdf\u201d or \u201capplication/zip\u201d</li> <li><code>caption</code> (<code>str</code> ): Optional. Caption of the document to be sent, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the document caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>description</code> (<code>str</code> ): Optional. Short description of the result</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> <li><code>input_message_content</code> (InputMessageContent ): Optional. Content of the message to be sent instead of the file</li> <li><code>thumbnail_url</code> (<code>str</code> ): Optional. URL of the thumbnail (JPEG only) for the file</li> <li><code>thumbnail_width</code> (<code>int</code> ): Optional. Thumbnail width</li> <li><code>thumbnail_height</code> (<code>int</code> ): Optional. Thumbnail height</li> </ul>"},{"location":"types/InlineQueryResultGame/","title":"\ud83d\udd2e InlineQueryResultGame","text":"<p>Represents a Game.</p>"},{"location":"types/InlineQueryResultGame/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>game_short_name</code> (<code>str</code> ): Short name of the game</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> </ul>"},{"location":"types/InlineQueryResultGif/","title":"\ud83d\udd2e InlineQueryResultGif","text":"<p>Represents a link to an animated GIF file. By default, this animated GIF file will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation.</p>"},{"location":"types/InlineQueryResultGif/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>gif_url</code> (<code>str</code> ): A valid URL for the GIF file. File size must not exceed 1MB</li> <li><code>thumbnail_url</code> (<code>str</code> ): URL of the static (JPEG or GIF) or animated (MPEG4) thumbnail for the result</li> <li><code>gif_width</code> (<code>int</code> ): Optional. Width of the GIF</li> <li><code>gif_height</code> (<code>int</code> ): Optional. Height of the GIF</li> <li><code>gif_duration</code> (<code>int</code> ): Optional. Duration of the GIF in seconds</li> <li><code>thumbnail_mime_type</code> (<code>str</code> ): Optional. MIME type of the thumbnail, must be one of \u201cimage/jpeg\u201d, \u201cimage/gif\u201d, or \u201cvideo/mp4\u201d. Defaults to \u201cimage/jpeg\u201d</li> <li><code>title</code> (<code>str</code> ): Optional. Title for the result</li> <li><code>caption</code> (<code>str</code> ): Optional. Caption of the GIF file to be sent, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>show_caption_above_media</code> (<code>bool</code> ): Optional. If true, a caption is shown over the photo or video</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> <li><code>input_message_content</code> (InputMessageContent ): Optional. Content of the message to be sent instead of the GIF animation</li> </ul>"},{"location":"types/InlineQueryResultLocation/","title":"\ud83d\udd2e InlineQueryResultLocation","text":"<p>Represents a location on a map. By default, the location will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the location.</p>"},{"location":"types/InlineQueryResultLocation/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>latitude</code> (<code>float</code> ): Location latitude in degrees</li> <li><code>longitude</code> (<code>float</code> ): Location longitude in degrees</li> <li><code>title</code> (<code>str</code> ): Location title</li> <li><code>horizontal_accuracy</code> (<code>float</code> ): Optional. The radius of uncertainty for the location, measured in meters; 0-1500</li> <li><code>live_period</code> (<code>int</code> ): Optional. Period in seconds during which the location can be updated, should be between 60 and 86400, or 0x7FFFFFFF for live locations that can be edited indefinitely.</li> <li><code>heading</code> (<code>int</code> ): Optional. For live locations, a direction in which the user is moving, in degrees. Must be between 1 and 360 if specified.</li> <li><code>proximity_alert_radius</code> (<code>int</code> ): Optional. For live locations, a maximum distance for proximity alerts about approaching another chat member, in meters. Must be between 1 and 100000 if specified.</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> <li><code>input_message_content</code> (InputMessageContent ): Optional. Content of the message to be sent instead of the location</li> <li><code>thumbnail_url</code> (<code>str</code> ): Optional. Url of the thumbnail for the result</li> <li><code>thumbnail_width</code> (<code>int</code> ): Optional. Thumbnail width</li> <li><code>thumbnail_height</code> (<code>int</code> ): Optional. Thumbnail height</li> </ul>"},{"location":"types/InlineQueryResultMpeg4Gif/","title":"\ud83d\udd2e InlineQueryResultMpeg4Gif","text":"<p>Represents a link to a video animation (H.264/MPEG-4 AVC video without sound). By default, this animated MPEG-4 file will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation.</p>"},{"location":"types/InlineQueryResultMpeg4Gif/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>mpeg4_url</code> (<code>str</code> ): A valid URL for the MPEG4 file. File size must not exceed 1MB</li> <li><code>thumbnail_url</code> (<code>str</code> ): URL of the static (JPEG or GIF) or animated (MPEG4) thumbnail for the result</li> <li><code>mpeg4_width</code> (<code>int</code> ): Optional. Video width</li> <li><code>mpeg4_height</code> (<code>int</code> ): Optional. Video height</li> <li><code>mpeg4_duration</code> (<code>int</code> ): Optional. Video duration in seconds</li> <li><code>thumbnail_mime_type</code> (<code>str</code> ): Optional. MIME type of the thumbnail, must be one of \u201cimage/jpeg\u201d, \u201cimage/gif\u201d, or \u201cvideo/mp4\u201d. Defaults to \u201cimage/jpeg\u201d</li> <li><code>title</code> (<code>str</code> ): Optional. Title for the result</li> <li><code>caption</code> (<code>str</code> ): Optional. Caption of the MPEG-4 file to be sent, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>show_caption_above_media</code> (<code>bool</code> ): Optional. If true, a caption is shown over the photo or video</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> <li><code>input_message_content</code> (InputMessageContent ): Optional. Content of the message to be sent instead of the video animation</li> </ul>"},{"location":"types/InlineQueryResultPhoto/","title":"\ud83d\udd2e InlineQueryResultPhoto","text":"<p>Represents a link to a photo. By default, this photo will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the photo.</p>"},{"location":"types/InlineQueryResultPhoto/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>photo_url</code> (<code>str</code> ): A valid URL of the photo. Photo must be in JPEG format. Photo size must not exceed 5MB</li> <li><code>thumbnail_url</code> (<code>str</code> ): URL of the thumbnail for the photo</li> <li><code>photo_width</code> (<code>int</code> ): Optional. Width of the photo</li> <li><code>photo_height</code> (<code>int</code> ): Optional. Height of the photo</li> <li><code>title</code> (<code>str</code> ): Optional. Title for the result</li> <li><code>description</code> (<code>str</code> ): Optional. Short description of the result</li> <li><code>caption</code> (<code>str</code> ): Optional. Caption of the photo to be sent, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the photo caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>show_caption_above_media</code> (<code>bool</code> ): Optional. If true, a caption is shown over the photo or video</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> <li><code>input_message_content</code> (InputMessageContent ): Optional. Content of the message to be sent instead of the photo</li> </ul>"},{"location":"types/InlineQueryResultVenue/","title":"\ud83d\udd2e InlineQueryResultVenue","text":"<p>Represents a venue. By default, the venue will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the venue.</p>"},{"location":"types/InlineQueryResultVenue/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>latitude</code> (<code>float</code> ): Latitude of the venue location in degrees</li> <li><code>longitude</code> (<code>float</code> ): Longitude of the venue location in degrees</li> <li><code>title</code> (<code>str</code> ): Title of the venue</li> <li><code>address</code> (<code>str</code> ): Address of the venue</li> <li><code>foursquare_id</code> (<code>str</code> ): Optional. Foursquare identifier of the venue if known</li> <li><code>foursquare_type</code> (<code>str</code> ): Optional. Foursquare type of the venue, if known. (For example, \u201carts_entertainment/default\u201d, \u201carts_entertainment/aquarium\u201d or \u201cfood/icecream\u201d.)</li> <li><code>google_place_id</code> (<code>str</code> ): Optional. Google Places identifier of the venue</li> <li><code>google_place_type</code> (<code>str</code> ): Optional. Google Places type of the venue. (See supported types.)</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> <li><code>input_message_content</code> (InputMessageContent ): Optional. Content of the message to be sent instead of the venue</li> <li><code>thumbnail_url</code> (<code>str</code> ): Optional. Url of the thumbnail for the result</li> <li><code>thumbnail_width</code> (<code>int</code> ): Optional. Thumbnail width</li> <li><code>thumbnail_height</code> (<code>int</code> ): Optional. Thumbnail height</li> </ul>"},{"location":"types/InlineQueryResultVideo/","title":"\ud83d\udd2e InlineQueryResultVideo","text":"<p>Represents a link to a page containing an embedded video player or a video file. By default, this video file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the video.</p>"},{"location":"types/InlineQueryResultVideo/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>video_url</code> (<code>str</code> ): A valid URL for the embedded video player or video file</li> <li><code>mime_type</code> (<code>str</code> ): MIME type of the content of the video URL, \u201ctext/html\u201d or \u201cvideo/mp4\u201d</li> <li><code>thumbnail_url</code> (<code>str</code> ): URL of the thumbnail (JPEG only) for the video</li> <li><code>title</code> (<code>str</code> ): Title for the result</li> <li><code>caption</code> (<code>str</code> ): Optional. Caption of the video to be sent, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the video caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>show_caption_above_media</code> (<code>bool</code> ): Optional. If true, a caption is shown over the video</li> <li><code>video_width</code> (<code>int</code> ): Optional. Video width</li> <li><code>video_height</code> (<code>int</code> ): Optional. Video height</li> <li><code>video_duration</code> (<code>int</code> ): Optional. Video duration in seconds</li> <li><code>description</code> (<code>str</code> ): Optional. Short description of the result</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> <li><code>input_message_content</code> (InputMessageContent ): Optional. Content of the message to be sent instead of the video. This field is required if InlineQueryResultVideo is used to send an HTML-page as a result (e.g., a YouTube video).</li> </ul>"},{"location":"types/InlineQueryResultVoice/","title":"\ud83d\udd2e InlineQueryResultVoice","text":"<p>Represents a link to a voice recording in an .OGG container encoded with OPUS. By default, this voice recording will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the the voice message.</p>"},{"location":"types/InlineQueryResultVoice/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>voice_url</code> (<code>str</code> ): A valid URL for the voice recording</li> <li><code>title</code> (<code>str</code> ): Recording title</li> <li><code>caption</code> (<code>str</code> ): Optional. Caption, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the voice message caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>voice_duration</code> (<code>int</code> ): Optional. Recording duration in seconds</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message</li> <li><code>input_message_content</code> (InputMessageContent ): Optional. Content of the message to be sent instead of the voice recording</li> </ul>"},{"location":"types/InlineQueryResultsButton/","title":"\ud83d\udd2e InlineQueryResultsButton","text":"<p>This object represents a button to be shown above inline query results.</p>"},{"location":"types/InlineQueryResultsButton/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>text</code> (<code>str</code> ): Label text on the button</li> <li><code>web_app</code> (WebAppInfo ): Optional. Description of the Web App that will be launched when the user presses the button. The Web App will be able to switch back to the inline mode using the method web_app_switch_inline_query inside the Web App.</li> <li><code>start_parameter</code> (<code>str</code> ): Optional. Deep-linking parameter for the /start message sent to the bot when a user presses the button. 1-64 characters, only A-Z, a-z, 0-9, _ and - are allowed. Example: An inline bot that sends YouTube videos can ask the user to connect the bot to their YouTube account to adapt search results accordingly. To do this, it displays a 'Connect your YouTube account' button above the results, or even before showing any. The user presses the button, switches to a private chat with the bot and, in doing so, passes a start parameter that instructs the bot to return an OAuth link. Once done, the bot can offer a switch_inline button so that the user can easily return to the chat where they wanted to use the bot's inline capabilities.</li> </ul>"},{"location":"types/InputChecklist/","title":"\ud83d\udd2e InputChecklist","text":"<p>Describes a checklist to create.</p>"},{"location":"types/InputChecklist/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>title</code> (<code>str</code> ): Title of the checklist; 1-255 characters after entities parsing</li> <li><code>tasks</code> (List of InputChecklistTask ): List of 1-30 tasks in the checklist</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the title. See formatting options for more details.</li> <li><code>title_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the title, which can be specified instead of parse_mode. Currently, only bold, italic, underline, strikethrough, spoiler, and custom_emoji entities are allowed.</li> <li><code>others_can_add_tasks</code> (<code>bool</code> ): Optional. Pass True if other users can add tasks to the checklist</li> <li><code>others_can_mark_tasks_as_done</code> (<code>bool</code> ): Optional. Pass True if other users can mark tasks as done or not done in the checklist</li> </ul>"},{"location":"types/InputChecklistTask/","title":"\ud83d\udd2e InputChecklistTask","text":"<p>Describes a task to add to a checklist.</p>"},{"location":"types/InputChecklistTask/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>text</code> (<code>str</code> ): Text of the task; 1-100 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the text. See formatting options for more details.</li> <li><code>text_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the text, which can be specified instead of parse_mode. Currently, only bold, italic, underline, strikethrough, spoiler, and custom_emoji entities are allowed.</li> </ul>"},{"location":"types/InputContactMessageContent/","title":"\ud83d\udd2e InputContactMessageContent","text":"<p>Represents the content of a contact message to be sent as the result of an inline query.</p>"},{"location":"types/InputContactMessageContent/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>phone_number</code> (<code>str</code> ): Contact's phone number</li> <li><code>first_name</code> (<code>str</code> ): Contact's first name</li> <li><code>last_name</code> (<code>str</code> ): Optional. Contact's last name</li> <li><code>vcard</code> (<code>str</code> ): Optional. Additional data about the contact in the form of a vCard, 0-2048 bytes</li> </ul>"},{"location":"types/InputInvoiceMessageContent/","title":"\ud83d\udd2e InputInvoiceMessageContent","text":"<p>Represents the content of an invoice message to be sent as the result of an inline query.</p>"},{"location":"types/InputInvoiceMessageContent/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>title</code> (<code>str</code> ): Product name, 1-32 characters</li> <li><code>description</code> (<code>str</code> ): Product description, 1-255 characters</li> <li><code>payload</code> (<code>str</code> ): Bot-defined invoice payload, 1-128 bytes. This will not be displayed to the user, use for your internal processes.</li> <li><code>currency</code> (<code>str</code> ): Three-letter ISO 4217 currency code, see more on currencies</li> <li><code>prices</code> (List of LabeledPrice ): Price breakdown, a JSON-serialized list of components (e.g. product price, tax, discount, delivery cost, delivery tax, bonus, etc.)</li> <li><code>provider_token</code> (<code>str</code> ): Payment provider token, obtained via @BotFather</li> <li><code>max_tip_amount</code> (<code>int</code> ): Optional. The maximum accepted amount for tips in the smallest units of the currency (integer, not float/double). For example, for a maximum tip of US$ 1.45 pass max_tip_amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies). Defaults to 0</li> <li><code>suggested_tip_amounts</code> (List of <code>int</code> ): Optional. A JSON-serialized array of suggested amounts of tip in the smallest units of the currency (integer, not float/double). At most 4 suggested tip amounts can be specified. The suggested tip amounts must be positive, passed in a strictly increased order and must not exceed max_tip_amount.</li> <li><code>provider_data</code> (<code>str</code> ): Optional. A JSON-serialized object for data about the invoice, which will be shared with the payment provider. A detailed description of the required fields should be provided by the payment provider.</li> <li><code>photo_url</code> (<code>str</code> ): Optional. URL of the product photo for the invoice. Can be a photo of the goods or a marketing image for a service.</li> <li><code>photo_size</code> (<code>int</code> ): Optional. Photo size in bytes</li> <li><code>photo_width</code> (<code>int</code> ): Optional. Photo width</li> <li><code>photo_height</code> (<code>int</code> ): Optional. Photo height</li> <li><code>need_name</code> (<code>bool</code> ): Optional. Pass True, if you require the user's full name to complete the order</li> <li><code>need_phone_number</code> (<code>bool</code> ): Optional. Pass True, if you require the user's phone number to complete the order</li> <li><code>need_email</code> (<code>bool</code> ): Optional. Pass True, if you require the user's email address to complete the order</li> <li><code>need_shipping_address</code> (<code>bool</code> ): Optional. Pass True, if you require the user's shipping address to complete the order</li> <li><code>send_phone_number_to_provider</code> (<code>bool</code> ): Optional. Pass True, if the user's phone number should be sent to provider</li> <li><code>send_email_to_provider</code> (<code>bool</code> ): Optional. Pass True, if the user's email address should be sent to provider</li> <li><code>is_flexible</code> (<code>bool</code> ): Optional. Pass True, if the final price depends on the shipping method</li> </ul>"},{"location":"types/InputLocationMessageContent/","title":"\ud83d\udd2e InputLocationMessageContent","text":"<p>Represents the content of a location message to be sent as the result of an inline query.</p>"},{"location":"types/InputLocationMessageContent/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>latitude</code> (<code>float</code> ): Latitude of the location in degrees</li> <li><code>longitude</code> (<code>float</code> ): Longitude of the location in degrees</li> <li><code>horizontal_accuracy</code> (<code>float</code> ): Optional. The radius of uncertainty for the location, measured in meters; 0-1500</li> <li><code>live_period</code> (<code>int</code> ): Optional. Period in seconds during which the location can be updated, should be between 60 and 86400, or 0x7FFFFFFF for live locations that can be edited indefinitely.</li> <li><code>heading</code> (<code>int</code> ): Optional. For live locations, a direction in which the user is moving, in degrees. Must be between 1 and 360 if specified.</li> <li><code>proximity_alert_radius</code> (<code>int</code> ): Optional. For live locations, a maximum distance for proximity alerts about approaching another chat member, in meters. Must be between 1 and 100000 if specified.</li> </ul>"},{"location":"types/InputMediaAnimation/","title":"\ud83d\udd2e InputMediaAnimation","text":"<p>Represents an animation file (GIF or H.264/MPEG-4 AVC video without sound) to be sent.</p>"},{"location":"types/InputMediaAnimation/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>media</code> (<code>Path</code> or <code>str</code> ): File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass \u201cattach://\u201d to upload a new one using multipart/form-data under  name. More information on Sending Files \u00bb <li><code>thumbnail</code> (<code>InputFile</code> or <code>str</code> ): Optional. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass \u201cattach://\u201d if the thumbnail was uploaded using multipart/form-data under . More information on Sending Files \u00bb <li><code>caption</code> (<code>str</code> ): Optional. Caption of the animation to be sent, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the animation caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>show_caption_above_media</code> (<code>bool</code> ): Optional. True, if the caption should be shown above the animation</li> <li><code>width</code> (<code>int</code> ): Optional. Animation width</li> <li><code>height</code> (<code>int</code> ): Optional. Animation height</li> <li><code>duration</code> (<code>int</code> ): Optional. Animation duration in seconds</li> <li><code>has_spoiler</code> (<code>bool</code> ): Optional. True, if the uploaded animation is a spoiler</li>"},{"location":"types/InputMediaAudio/","title":"\ud83d\udd2e InputMediaAudio","text":"<p>Represents an audio file to be treated as music to be sent.</p>"},{"location":"types/InputMediaAudio/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>media</code> (<code>Path</code> or <code>str</code> ): File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass \u201cattach://\u201d to upload a new one using multipart/form-data under  name. More information on Sending Files \u00bb <li><code>thumbnail</code> (<code>InputFile</code> or <code>str</code> ): Optional. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass \u201cattach://\u201d if the thumbnail was uploaded using multipart/form-data under . More information on Sending Files \u00bb <li><code>caption</code> (<code>str</code> ): Optional. Caption of the audio to be sent, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the audio caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>duration</code> (<code>int</code> ): Optional. Duration of the audio in seconds</li> <li><code>performer</code> (<code>str</code> ): Optional. Performer of the audio</li> <li><code>title</code> (<code>str</code> ): Optional. Title of the audio</li>"},{"location":"types/InputMediaDocument/","title":"\ud83d\udd2e InputMediaDocument","text":"<p>Represents a general file to be sent.</p>"},{"location":"types/InputMediaDocument/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>media</code> (<code>Path</code> or <code>str</code> ): File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass \u201cattach://\u201d to upload a new one using multipart/form-data under  name. More information on Sending Files \u00bb <li><code>thumbnail</code> (<code>InputFile</code> or <code>str</code> ): Optional. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass \u201cattach://\u201d if the thumbnail was uploaded using multipart/form-data under . More information on Sending Files \u00bb <li><code>caption</code> (<code>str</code> ): Optional. Caption of the document to be sent, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the document caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>disable_content_type_detection</code> (<code>bool</code> ): Optional. Disables automatic server-side content type detection for files uploaded using multipart/form-data. Always True, if the document is sent as part of an album.</li>"},{"location":"types/InputMediaPhoto/","title":"\ud83d\udd2e InputMediaPhoto","text":"<p>Represents a photo to be sent.</p>"},{"location":"types/InputMediaPhoto/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>media</code> (<code>Path</code> or <code>str</code> ): File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass \u201cattach://\u201d to upload a new one using multipart/form-data under  name. More information on Sending Files \u00bb <li><code>caption</code> (<code>str</code> ): Optional. Caption of the photo to be sent, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the photo caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>show_caption_above_media</code> (<code>bool</code> ): Optional. True, if the caption should be shown above the photo</li> <li><code>has_spoiler</code> (<code>bool</code> ): Optional. True, if the uploaded photo is a spoiler</li>"},{"location":"types/InputMediaVideo/","title":"\ud83d\udd2e InputMediaVideo","text":"<p>Represents a video to be sent.</p>"},{"location":"types/InputMediaVideo/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>media</code> (<code>Path</code> or <code>str</code> ): File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass \u201cattach://\u201d to upload a new one using multipart/form-data under  name. More information on Sending Files \u00bb <li><code>thumbnail</code> (<code>InputFile</code> ): Optional. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass \u201cattach://\u201d if the thumbnail was uploaded using multipart/form-data under . More information on Sending Files \u00bb <li><code>cover</code> (<code>InputFile</code> ): Optional. Cover for the video in the message. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass \u201cattach://\u201d to upload a new one using multipart/form-data under  name. More information on Sending Files \u00bb <li><code>start_timestamp</code> (<code>int</code> ): Optional. Start timestamp for the video in the message</li> <li><code>caption</code> (<code>str</code> ): Optional. Caption of the video to be sent, 0-1024 characters after entities parsing</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the video caption. See formatting options for more details.</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode</li> <li><code>show_caption_above_media</code> (<code>bool</code> ): Optional. True, if the caption should be shown above the video</li> <li><code>width</code> (<code>int</code> ): Optional. Video width</li> <li><code>height</code> (<code>int</code> ): Optional. Video height</li> <li><code>duration</code> (<code>int</code> ): Optional. Video duration in seconds</li> <li><code>supports_streaming</code> (<code>bool</code> ): Optional. Pass True, if the uploaded video is suitable for streaming</li> <li><code>has_spoiler</code> (<code>bool</code> ): Optional. True, if the uploaded video is a spoiler</li>"},{"location":"types/InputMessageContent/","title":"\ud83d\udd2e InputMessageContent","text":""},{"location":"types/InputMessageContent/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>message_text</code> (<code>str</code> )</li> <li><code>parse_mode</code> (<code>str</code> )</li> <li><code>entities</code> (List of MessageEntity )</li> <li><code>link_preview_options</code> (LinkPreviewOptions )</li> </ul>"},{"location":"types/InputPaidMediaPhoto/","title":"\ud83d\udd2e InputPaidMediaPhoto","text":"<p>The paid media to send is a photo.</p>"},{"location":"types/InputPaidMediaPhoto/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>media</code> (<code>Path</code> or <code>str</code> ): File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass \u201cattach://\u201d to upload a new one using multipart/form-data under  name. More information on Sending Files \u00bb"},{"location":"types/InputPaidMediaVideo/","title":"\ud83d\udd2e InputPaidMediaVideo","text":"<p>The paid media to send is a video.</p>"},{"location":"types/InputPaidMediaVideo/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>media</code> (<code>Path</code> or <code>str</code> ): File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass \u201cattach://\u201d to upload a new one using multipart/form-data under  name. More information on Sending Files \u00bb <li><code>thumbnail</code> (<code>InputFile</code> ): Optional. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass \u201cattach://\u201d if the thumbnail was uploaded using multipart/form-data under . More information on Sending Files \u00bb <li><code>cover</code> (<code>InputFile</code> ): Optional. Cover for the video in the message. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass \u201cattach://\u201d to upload a new one using multipart/form-data under  name. More information on Sending Files \u00bb <li><code>start_timestamp</code> (<code>int</code> ): Optional. Start timestamp for the video in the message</li> <li><code>width</code> (<code>int</code> ): Optional. Video width</li> <li><code>height</code> (<code>int</code> ): Optional. Video height</li> <li><code>duration</code> (<code>int</code> ): Optional. Video duration in seconds</li> <li><code>supports_streaming</code> (<code>bool</code> ): Optional. Pass True if the uploaded video is suitable for streaming</li>"},{"location":"types/InputPollOption/","title":"\ud83d\udd2e InputPollOption","text":"<p>This object contains information about one answer option in a poll to send.</p>"},{"location":"types/InputPollOption/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>text</code> (<code>str</code> ): Option text, 1-100 characters</li> <li><code>text_parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the text. See formatting options for more details. Currently, only custom emoji entities are allowed</li> <li><code>text_entities</code> (List of MessageEntity ): Optional. A JSON-serialized list of special entities that appear in the poll option text. It can be specified instead of text_parse_mode</li> </ul>"},{"location":"types/InputProfilePhotoAnimated/","title":"\ud83d\udd2e InputProfilePhotoAnimated","text":"<p>An animated profile photo in the MPEG4 format.</p>"},{"location":"types/InputProfilePhotoAnimated/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>animation</code> (<code>Path</code> or <code>str</code> ): The animated profile photo. Profile photos can't be reused and can only be uploaded as a new file, so you can pass \u201cattach://\u201d if the photo was uploaded using multipart/form-data under . More information on Sending Files \u00bb <li><code>main_frame_timestamp</code> (<code>float</code> ): Optional. Timestamp in seconds of the frame that will be used as the static profile photo. Defaults to 0.0.</li>"},{"location":"types/InputProfilePhotoStatic/","title":"\ud83d\udd2e InputProfilePhotoStatic","text":"<p>A static profile photo in the .JPG format.</p>"},{"location":"types/InputProfilePhotoStatic/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>photo</code> (<code>Path</code> or <code>str</code> ): The static profile photo. Profile photos can't be reused and can only be uploaded as a new file, so you can pass \u201cattach://\u201d if the photo was uploaded using multipart/form-data under . More information on Sending Files \u00bb"},{"location":"types/InputSticker/","title":"\ud83d\udd2e InputSticker","text":"<p>This object describes a sticker to be added to a sticker set.</p>"},{"location":"types/InputSticker/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>sticker</code> (<code>InputFile</code> or <code>str</code> ): The added sticker. Pass a file_id as a String to send a file that already exists on the Telegram servers, pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data. Animated and video stickers can't be uploaded via HTTP URL.</li> <li><code>format</code> (<code>str</code> ): Format of the added sticker, must be one of \u201cstatic\u201d for a .WEBP or .PNG image, \u201canimated\u201d for a .TGS animation, \u201cvideo\u201d for a WEBM video</li> <li><code>emoji_list</code> (List of <code>str</code> ): One or more(up to 20) emoji(s) corresponding to the sticker</li> <li><code>mask_position</code> (MaskPosition ): Optional. Position where the mask should be placed on faces. For \u201cmask\u201d stickers only.</li> <li><code>keywords</code> (List of <code>str</code> ): Optional. List of 0-20 search keywords for the sticker with total length of up to 64 characters. For \u201cregular\u201d and \u201ccustom_emoji\u201d stickers only.</li> </ul>"},{"location":"types/InputStoryContentPhoto/","title":"\ud83d\udd2e InputStoryContentPhoto","text":"<p>Describes a photo to post as a story.</p>"},{"location":"types/InputStoryContentPhoto/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>photo</code> (<code>str</code> ): The photo to post as a story. The photo must be of the size 1080x1920 and must not exceed 10 MB.</li> </ul>"},{"location":"types/InputStoryContentVideo/","title":"\ud83d\udd2e InputStoryContentVideo","text":"<p>Describes a video to post as a story.</p>"},{"location":"types/InputStoryContentVideo/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>video</code> (<code>str</code> ): The video to post as a story. The video must be of the size 720x1280, streamable, encoded with H.265 codec, with key frames added each second in the MPEG4 format, and must not exceed 30 MB.</li> <li><code>duration</code> (<code>float</code> ): Optional. Precise duration of the video in seconds; 0-60</li> <li><code>cover_frame_timestamp</code> (<code>float</code> ): Optional. Timestamp in seconds of the frame that will be used as the static cover for the story. Defaults to 0.0.</li> <li><code>is_animation</code> (<code>bool</code> ): Optional. Pass True if the video has no sound</li> </ul>"},{"location":"types/InputTextMessageContent/","title":"\ud83d\udd2e InputTextMessageContent","text":"<p>Represents the content of a text message to be sent as the result of an inline query.</p>"},{"location":"types/InputTextMessageContent/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>message_text</code> (<code>str</code> ): Text of the message to be sent, 1-4096 characters</li> <li><code>parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the message text. See formatting options for more details.</li> <li><code>entities</code> (List of MessageEntity ): Optional. List of special entities that appear in message text, which can be specified instead of parse_mode</li> <li><code>link_preview_options</code> (LinkPreviewOptions ): Optional. Link preview generation options for the message</li> </ul>"},{"location":"types/InputVenueMessageContent/","title":"\ud83d\udd2e InputVenueMessageContent","text":"<p>Represents the content of a venue message to be sent as the result of an inline query.</p>"},{"location":"types/InputVenueMessageContent/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>latitude</code> (<code>float</code> ): Latitude of the venue in degrees</li> <li><code>longitude</code> (<code>float</code> ): Longitude of the venue in degrees</li> <li><code>title</code> (<code>str</code> ): Name of the venue</li> <li><code>address</code> (<code>str</code> ): Address of the venue</li> <li><code>foursquare_id</code> (<code>str</code> ): Optional. Foursquare identifier of the venue, if known</li> <li><code>foursquare_type</code> (<code>str</code> ): Optional. Foursquare type of the venue, if known. (For example, \u201carts_entertainment/default\u201d, \u201carts_entertainment/aquarium\u201d or \u201cfood/icecream\u201d.)</li> <li><code>google_place_id</code> (<code>str</code> ): Optional. Google Places identifier of the venue</li> <li><code>google_place_type</code> (<code>str</code> ): Optional. Google Places type of the venue. (See supported types.)</li> </ul>"},{"location":"types/Invoice/","title":"\ud83d\udd2e Invoice","text":"<p>This object contains basic information about an invoice.</p>"},{"location":"types/Invoice/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>title</code> (<code>str</code> ): Product name</li> <li><code>description</code> (<code>str</code> ): Product description</li> <li><code>start_parameter</code> (<code>str</code> ): Unique bot deep-linking parameter that can be used to generate this invoice</li> <li><code>currency</code> (<code>str</code> ): Three-letter ISO 4217 currency code</li> <li><code>total_amount</code> (<code>int</code> ): Total price in the smallest units of the currency (integer, not float/double). For example, for a price of US$ 1.45 pass amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</li> </ul>"},{"location":"types/KeyboardButton/","title":"\ud83d\udd2e KeyboardButton","text":"<p>This object represents one button of the reply keyboard. For simple text buttons String can be used instead of this object to specify text of the button. Optional fields web_app, request_contact, request_location, and request_poll are mutually exclusive.</p>"},{"location":"types/KeyboardButton/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>text</code> (<code>str</code> ): Text of the button. If none of the optional fields are used, it will be sent as a message when the button is pressed</li> <li><code>request_users</code> (KeyboardButtonRequestUsers ): Optional. If specified, pressing the button will open a list of suitable users. Identifiers of selected users will be sent to the bot in a \u201cusers_shared\u201d service message. Available in private chats only.</li> <li><code>request_chat</code> (KeyboardButtonRequestChat ): Optional. If specified, pressing the button will open a list of suitable chats. Tapping on a chat will send its identifier to the bot in a \u201cchat_shared\u201d service message. Available in private chats only.</li> <li><code>request_contact</code> (<code>bool</code> ): Optional. If True, the user's phone number will be sent as a contact when the button is pressed. Available in private chats only.</li> <li><code>request_location</code> (<code>bool</code> ): Optional. If True, the user's current location will be sent when the button is pressed. Available in private chats only.</li> <li><code>request_poll</code> (KeyboardButtonPollType ): Optional. If specified, the user will be asked to create a poll and send it to the bot when the button is pressed. Available in private chats only.</li> <li><code>web_app</code> (WebAppInfo ): Optional. If specified, the described Web App will be launched when the button is pressed. The Web App will be able to send a \u201cweb_app_data\u201d service message. Available in private chats only.</li> </ul>"},{"location":"types/KeyboardButtonPollType/","title":"\ud83d\udd2e KeyboardButtonPollType","text":"<p>This object represents type of a poll, which is allowed to be created and sent when the corresponding button is pressed.</p>"},{"location":"types/KeyboardButtonPollType/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> ): Optional. If quiz is passed, the user will be allowed to create only polls in the quiz mode. If regular is passed, only regular polls will be allowed. Otherwise, the user will be allowed to create a poll of any type.</li> </ul>"},{"location":"types/KeyboardButtonRequestChat/","title":"\ud83d\udd2e KeyboardButtonRequestChat","text":"<p>This object defines the criteria used to request a suitable chat. The identifier of the selected chat will</p>"},{"location":"types/KeyboardButtonRequestChat/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>chat_is_channel</code> (<code>bool</code> ): Pass True to request a channel chat, pass False to request a group or a supergroup chat.</li> <li><code>chat_is_forum</code> (<code>bool</code> ): Optional. Pass True to request a forum supergroup, pass False to request a non-forum chat. If not specified, no additional restrictions are applied.</li> <li><code>chat_has_username</code> (<code>bool</code> ): Optional. Pass True to request a supergroup or a channel with a username, pass False to request a chat without a username. If not specified, no additional restrictions are applied.</li> <li><code>chat_is_created</code> (<code>bool</code> ): Optional. Pass True to request a chat owned by the user. Otherwise, no additional restrictions are applied.</li> <li><code>user_administrator_rights</code> (ChatAdministratorRights ): Optional. A JSON-serialized object listing the required administrator rights of the user in the chat. The rights must be a superset of bot_administrator_rights. If not specified, no additional restrictions are applied.</li> <li><code>bot_administrator_rights</code> (ChatAdministratorRights ): Optional. A JSON-serialized object listing the required administrator rights of the bot in the chat. The rights must be a subset of user_administrator_rights. If not specified, no additional restrictions are applied.</li> <li><code>bot_is_member</code> (<code>bool</code> ): Optional. Pass True to request a chat where the bot is a member. Otherwise, no additional restrictions are applied.</li> <li><code>request_title</code> (<code>bool</code> ): Optional. Request title</li> <li><code>request_username</code> (<code>bool</code> ): Optional. Request username</li> <li><code>request_photo</code> (<code>bool</code> ): Optional. Request photo</li> </ul>"},{"location":"types/KeyboardButtonRequestUsers/","title":"\ud83d\udd2e KeyboardButtonRequestUsers","text":"<p>This object defines the criteria used to request a suitable user.</p>"},{"location":"types/KeyboardButtonRequestUsers/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>user_is_bot</code> (<code>bool</code> ): Optional. Pass True to request a bot, pass False to request a regular user. If not specified, no additional restrictions are applied.</li> <li><code>user_is_premium</code> (<code>bool</code> ): Optional. Pass True to request a premium user, pass False to request a non-premium user. If not specified, no additional restrictions are applied.</li> <li><code>max_quantity</code> (<code>int</code> ): Optional. The maximum number of users to be selected; 1-10. Defaults to 1.</li> <li><code>request_name</code> (<code>bool</code> ): Optional. Request name</li> <li><code>request_username</code> (<code>bool</code> ): Optional. Request username</li> <li><code>request_photo</code> (<code>bool</code> ): Optional. Request photo</li> </ul>"},{"location":"types/LabeledPrice/","title":"\ud83d\udd2e LabeledPrice","text":"<p>This object represents a portion of the price for goods or services.</p>"},{"location":"types/LabeledPrice/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>label</code> (<code>str</code> ): Portion label</li> <li><code>amount</code> (<code>int</code> ): Price of the product in the smallest units of the currency (integer, not float/double). For example, for a price of US$ 1.45 pass amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</li> </ul>"},{"location":"types/LinkPreviewOptions/","title":"\ud83d\udd2e LinkPreviewOptions","text":"<p>Describes the options used for link preview generation.</p>"},{"location":"types/LinkPreviewOptions/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>is_disabled</code> (<code>bool</code> ): Optional. True, if the link preview is disabled</li> <li><code>url</code> (<code>str</code> ): Optional. URL to use for the link preview. If empty, then the first URL found in the message text will be used</li> <li><code>prefer_small_media</code> (<code>bool</code> ): Optional. True, if the media in the link preview is supposed to be shrunk; ignored if the URL isn't explicitly specified or media size change isn't supported for the preview</li> <li><code>prefer_large_media</code> (<code>bool</code> ): Optional. True, if the media in the link preview is supposed to be enlarged; ignored if the URL isn't explicitly specified or media size change isn't supported for the preview</li> <li><code>show_above_text</code> (<code>bool</code> ): Optional. True, if the link preview must be shown above the message text; otherwise, the link preview will be shown below the message text</li> </ul>"},{"location":"types/Listener/","title":"\ud83d\udd2e Listener","text":""},{"location":"types/Listener/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>chat_id</code> (<code>int</code> )</li> <li><code>future</code> (<code>Future</code> )</li> <li><code>user_id</code> (<code>int</code> )</li> <li><code>sender_id</code> (<code>int</code> )</li> <li><code>update_type</code> (<code>str</code> )</li> <li><code>cancel</code> (<code>Callable</code> )</li> <li><code>filters</code> (<code>Filter</code> )</li> </ul>"},{"location":"types/Location/","title":"\ud83d\udd2e Location","text":"<p>This object represents a point on the map.</p>"},{"location":"types/Location/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>latitude</code> (<code>float</code> ): Latitude as defined by sender</li> <li><code>longitude</code> (<code>float</code> ): Longitude as defined by sender</li> <li><code>horizontal_accuracy</code> (<code>float</code> ): Optional. The radius of uncertainty for the location, measured in meters; 0-1500</li> <li><code>live_period</code> (<code>int</code> ): Optional. Time relative to the message sending date, during which the location can be updated; in seconds. For active live locations only.</li> <li><code>heading</code> (<code>int</code> ): Optional. The direction in which user is moving, in degrees; 1-360. For active live locations only.</li> <li><code>proximity_alert_radius</code> (<code>int</code> ): Optional. The maximum distance for proximity alerts about approaching another chat member, in meters. For sent live locations only.</li> </ul>"},{"location":"types/LocationAddress/","title":"\ud83d\udd2e LocationAddress","text":"<p>Describes the physical address of a location.</p>"},{"location":"types/LocationAddress/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>country_code</code> (<code>str</code> ): The two-letter ISO 3166-1 alpha-2 country code of the country where the location is located</li> <li><code>state</code> (<code>str</code> ): Optional. State of the location</li> <li><code>city</code> (<code>str</code> ): Optional. City of the location</li> <li><code>street</code> (<code>str</code> ): Optional. Street address of the location</li> </ul>"},{"location":"types/LoginUrl/","title":"\ud83d\udd2e LoginUrl","text":"<p>This object represents a parameter of the inline keyboard button used to automatically authorize a user. Serves as a great replacement for the Telegram Login Widget when the user is coming from Telegram. All the user needs to do is tap/click a button and confirm that they want to log in:</p>"},{"location":"types/LoginUrl/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>url</code> (<code>str</code> ): An HTTPS URL to be opened with user authorization data added to the query string when the button is pressed. If the user refuses to provide authorization data, the original URL without information about the user will be opened. The data added is the same as described in Receiving authorization data. NOTE: You must always check the hash of the received data to verify the authentication and the integrity of the data as described in Checking authorization.</li> <li><code>forward_text</code> (<code>str</code> ): Optional. New text of the button in forwarded messages.</li> <li><code>bot_username</code> (<code>str</code> ): Optional. Username of a bot, which will be used for user authorization. See Setting up a bot for more details. If not specified, the current bot's username will be assumed. The url's domain must be the same as the domain linked with the bot. See Linking your domain to the bot for more details.</li> <li><code>request_write_access</code> (<code>bool</code> ): Optional. Pass True to request the permission for your bot to send messages to the user.</li> </ul>"},{"location":"types/MaskPosition/","title":"\ud83d\udd2e MaskPosition","text":"<p>This object describes the position on faces where a mask should be placed by default.</p>"},{"location":"types/MaskPosition/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>point</code> (<code>str</code> ): The part of the face relative to which the mask should be placed. One of \u201cforehead\u201d, \u201ceyes\u201d, \u201cmouth\u201d, or \u201cchin\u201d.</li> <li><code>x_shift</code> (<code>float</code> ): Shift by X-axis measured in widths of the mask scaled to the face size, from left to right. For example, choosing -1.0 will place mask just to the left of the default mask position.</li> <li><code>y_shift</code> (<code>float</code> ): Shift by Y-axis measured in heights of the mask scaled to the face size, from top to bottom. For example, 1.0 will place the mask just below the default mask position.</li> <li><code>scale</code> (<code>float</code> ): Mask scaling coefficient. For example, 2.0 means double size.</li> </ul>"},{"location":"types/MenuButton/","title":"\ud83d\udd2e MenuButton","text":"<p>This object describes the bot's menu button in a private chat. It should be one of</p>"},{"location":"types/MenuButton/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> )</li> </ul>"},{"location":"types/MenuButtonCommands/","title":"\ud83d\udd2e MenuButtonCommands","text":"<p>Represents a menu button, which opens the bot's list of commands.</p>"},{"location":"types/MenuButtonCommands/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> ): Type of the button, must be commands</li> </ul>"},{"location":"types/MenuButtonDefault/","title":"\ud83d\udd2e MenuButtonDefault","text":"<p>Describes that no specific value for the menu button was set.</p>"},{"location":"types/MenuButtonDefault/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> ): Type of the button, must be default</li> </ul>"},{"location":"types/MenuButtonWebApp/","title":"\ud83d\udd2e MenuButtonWebApp","text":"<p>Represents a menu button, which launches a Web App.</p>"},{"location":"types/MenuButtonWebApp/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> ): Type of the button, must be web_app</li> <li><code>text</code> (<code>str</code> ): Text on the button</li> <li><code>web_app</code> (WebAppInfo ): Description of the Web App that will be launched when the user presses the button. The Web App will be able to send an arbitrary message on behalf of the user using the method answerWebAppQuery.</li> </ul>"},{"location":"types/Message/","title":"\ud83d\udd2e Message","text":"<p>This object represents a message.</p>"},{"location":"types/Message/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>message_id</code> (<code>int</code> ): Unique message identifier inside this chat. In specific instances (e.g., message containing a video sent to a big chat), the server might automatically schedule a message instead of sending it immediately. In such cases, this field will be 0 and the relevant message will be unusable until it is actually sent</li> <li><code>message_thread_id</code> (<code>int</code> ): Optional. Unique identifier of a message thread to which the message belongs; for supergroups only</li> <li><code>direct_messages_topic</code> (DirectMessagesTopic ): Optional. Information about the direct messages chat topic that contains the message</li> <li><code>from_user</code> (User ): Optional. Sender of the message; may be empty for messages sent to channels. For backward compatibility, if the message was sent on behalf of a chat, the field contains a fake sender user in non-channel chats</li> <li><code>sender_chat</code> (Chat ): Optional. Sender of the message when sent on behalf of a chat. For example, the supergroup itself for messages sent by its anonymous administrators or a linked channel for messages automatically forwarded to the channel's discussion group. For backward compatibility, if the message was sent on behalf of a chat, the field from contains a fake sender user in non-channel chats.</li> <li><code>sender_boost_count</code> (<code>int</code> ): Optional. If the sender of the message boosted the chat, the number of boosts added by the user</li> <li><code>sender_business_bot</code> (User ): Optional. The bot that actually sent the message on behalf of the business account. Available only for outgoing messages sent on behalf of the connected business account.</li> <li><code>date</code> (<code>int</code> ): Date the message was sent in Unix time. It is always a positive number, representing a valid date.</li> <li><code>business_connection_id</code> (<code>str</code> ): Optional. Unique identifier of the business connection from which the message was received. If non-empty, the message belongs to a chat of the corresponding business account that is independent from any potential bot chat which might share the same identifier.</li> <li><code>chat</code> (Chat ): Chat the message belongs to</li> <li><code>forward_origin</code> (<code>MessageOrigin</code> ): Optional. Information about the original message for forwarded messages</li> <li><code>is_topic_message</code> (<code>bool</code> ): Optional. True, if the message is sent to a forum topic</li> <li><code>is_automatic_forward</code> (<code>bool</code> ): Optional. True, if the message is a channel post that was automatically forwarded to the connected discussion group</li> <li><code>reply_to_message</code> (Message ): Optional. For replies in the same chat and message thread, the original message. Note that the Message object in this field will not contain further reply_to_message fields even if it itself is a reply.</li> <li><code>external_reply</code> (ExternalReplyInfo ): Optional. Information about the message that is being replied to, which may come from another chat or forum topic</li> <li><code>quote</code> (TextQuote ): Optional. For replies that quote part of the original message, the quoted part of the message</li> <li><code>reply_to_story</code> (Story ): Optional. For replies to a story, the original story</li> <li><code>reply_to_checklist_task_id</code> (<code>int</code> ): Optional. Identifier of the specific checklist task that is being replied to</li> <li><code>via_bot</code> (User ): Optional. Bot through which the message was sent</li> <li><code>edit_date</code> (<code>int</code> ): Optional. Date the message was last edited in Unix time</li> <li><code>has_protected_content</code> (<code>bool</code> ): Optional. True, if the message can't be forwarded</li> <li><code>is_from_offline</code> (<code>bool</code> ): Optional. True, if the message was sent by an implicit action, for example, as an away or a greeting business message, or as a scheduled message</li> <li><code>is_paid_post</code> (<code>bool</code> ): Optional. True, if the message is a paid post. Note that such posts must not be deleted for 24 hours to receive the payment and can't be edited.</li> <li><code>media_group_id</code> (<code>str</code> ): Optional. The unique identifier of a media message group this message belongs to</li> <li><code>author_signature</code> (<code>str</code> ): Optional. Signature of the post author for messages in channels, or the custom title of an anonymous group administrator</li> <li><code>paid_star_count</code> (<code>int</code> ): Optional. The number of Telegram Stars that were paid by the sender of the message to send it</li> <li><code>text</code> (<code>String</code> ): Optional. For text messages, the actual UTF-8 text of the message</li> <li><code>entities</code> (List of MessageEntity ): Optional. For text messages, special entities like usernames, URLs, bot commands, etc. that appear in the text</li> <li><code>link_preview_options</code> (LinkPreviewOptions ): Optional. Options used for link preview generation for the message, if it is a text message and link preview options were changed</li> <li><code>suggested_post_info</code> (SuggestedPostInfo ): Optional. Information about suggested post parameters if the message is a suggested post in a channel direct messages chat. If the message is an approved or declined suggested post, then it can't be edited.</li> <li><code>effect_id</code> (<code>str</code> ): Optional. Unique identifier of the message effect added to the message</li> <li><code>animation</code> (Animation ): Optional. Message is an animation, information about the animation. For backward compatibility, when this field is set, the document field will also be set</li> <li><code>audio</code> (Audio ): Optional. Message is an audio file, information about the file</li> <li><code>document</code> (Document ): Optional. Message is a general file, information about the file</li> <li><code>paid_media</code> (PaidMediaInfo ): Optional. Message contains paid media; information about the paid media</li> <li><code>photo</code> (List of PhotoSize ): Optional. Message is a photo, available sizes of the photo</li> <li><code>sticker</code> (Sticker ): Optional. Message is a sticker, information about the sticker</li> <li><code>story</code> (Story ): Optional. Message is a forwarded story</li> <li><code>video</code> (Video ): Optional. Message is a video, information about the video</li> <li><code>video_note</code> (VideoNote ): Optional. Message is a video note, information about the video message</li> <li><code>voice</code> (Voice ): Optional. Message is a voice message, information about the file</li> <li><code>caption</code> (<code>String</code> ): Optional. Caption for the animation, audio, document, paid media, photo, video or voice</li> <li><code>caption_entities</code> (List of MessageEntity ): Optional. For messages with a caption, special entities like usernames, URLs, bot commands, etc. that appear in the caption</li> <li><code>show_caption_above_media</code> (<code>bool</code> ): Optional. True, if the caption must be shown above the message media</li> <li><code>has_media_spoiler</code> (<code>bool</code> ): Optional. True, if the message media is covered by a spoiler animation</li> <li><code>checklist</code> (Checklist ): Optional. Message is a checklist</li> <li><code>contact</code> (Contact ): Optional. Message is a shared contact, information about the contact</li> <li><code>dice</code> (Dice ): Optional. Message is a dice with random value</li> <li><code>game</code> (Game ): Optional. Message is a game, information about the game. More about games \u00bb</li> <li><code>poll</code> (Poll ): Optional. Message is a native poll, information about the poll</li> <li><code>venue</code> (Venue ): Optional. Message is a venue, information about the venue. For backward compatibility, when this field is set, the location field will also be set</li> <li><code>location</code> (Location ): Optional. Message is a shared location, information about the location</li> <li><code>new_chat_members</code> (List of User ): Optional. New members that were added to the group or supergroup and information about them (the bot itself may be one of these members)</li> <li><code>left_chat_member</code> (User ): Optional. A member was removed from the group, information about them (this member may be the bot itself)</li> <li><code>new_chat_title</code> (<code>str</code> ): Optional. A chat title was changed to this value</li> <li><code>new_chat_photo</code> (List of PhotoSize ): Optional. A chat photo was change to this value</li> <li><code>delete_chat_photo</code> (<code>bool</code> ): Optional. Service message: the chat photo was deleted</li> <li><code>group_chat_created</code> (<code>bool</code> ): Optional. Service message: the group has been created</li> <li><code>supergroup_chat_created</code> (<code>bool</code> ): Optional. Service message: the supergroup has been created. This field can't be received in a message coming through updates, because bot can't be a member of a supergroup when it is created. It can only be found in reply_to_message if someone replies to a very first message in a directly created supergroup.</li> <li><code>channel_chat_created</code> (<code>bool</code> ): Optional. Service message: the channel has been created. This field can't be received in a message coming through updates, because bot can't be a member of a channel when it is created. It can only be found in reply_to_message if someone replies to a very first message in a channel.</li> <li><code>message_auto_delete_timer_changed</code> (MessageAutoDeleteTimerChanged ): Optional. Service message: auto-delete timer settings changed in the chat</li> <li><code>migrate_to_chat_id</code> (<code>int</code> ): Optional. The group has been migrated to a supergroup with the specified identifier.</li> <li><code>migrate_from_chat_id</code> (<code>int</code> ): Optional. The supergroup has been migrated from a group with the specified identifier.</li> <li><code>pinned_message</code> (<code>MaybeInaccessibleMessage</code> ): Optional. Specified message was pinned. Note that the Message object in this field will not contain further reply_to_message fields even if it itself is a reply.</li> <li><code>invoice</code> (Invoice ): Optional. Message is an invoice for a payment, information about the invoice. More about payments \u00bb</li> <li><code>successful_payment</code> (SuccessfulPayment ): Optional. Message is a service message about a successful payment, information about the payment. More about payments \u00bb</li> <li><code>refunded_payment</code> (RefundedPayment ): Optional. Message is a service message about a refunded payment, information about the payment. More about payments \u00bb</li> <li><code>users_shared</code> (UsersShared ): Optional. Service message: users were shared with the bot</li> <li><code>chat_shared</code> (ChatShared ): Optional. Service message: a chat was shared with the bot</li> <li><code>gift</code> (GiftInfo ): Optional. Service message: a regular gift was sent or received</li> <li><code>unique_gift</code> (UniqueGiftInfo ): Optional. Service message: a unique gift was sent or received</li> <li><code>connected_website</code> (<code>str</code> ): Optional. The domain name of the website on which the user has logged in. More about Telegram Login \u00bb</li> <li><code>write_access_allowed</code> (WriteAccessAllowed ): Optional. Service message: the user allowed the bot to write messages after adding it to the attachment or side menu, launching a Web App from a link, or accepting an explicit request from a Web App sent by the method requestWriteAccess</li> <li><code>passport_data</code> (PassportData ): Optional. Telegram Passport data</li> <li><code>proximity_alert_triggered</code> (ProximityAlertTriggered ): Optional. Service message. A user in the chat triggered another user's proximity alert while sharing Live Location.</li> <li><code>boost_added</code> (ChatBoostAdded ): Optional. Service message: user boosted the chat</li> <li><code>chat_background_set</code> (ChatBackground ): Optional. Service message: chat background set</li> <li><code>checklist_tasks_done</code> (ChecklistTasksDone ): Optional. Service message: some tasks in a checklist were marked as done or not done</li> <li><code>checklist_tasks_added</code> (ChecklistTasksAdded ): Optional. Service message: tasks were added to a checklist</li> <li><code>direct_message_price_changed</code> (DirectMessagePriceChanged ): Optional. Service message: the price for paid messages in the corresponding direct messages chat of a channel has changed</li> <li><code>forum_topic_created</code> (ForumTopicCreated ): Optional. Service message: forum topic created</li> <li><code>forum_topic_edited</code> (ForumTopicEdited ): Optional. Service message: forum topic edited</li> <li><code>forum_topic_closed</code> (ForumTopicClosed ): Optional. Service message: forum topic closed</li> <li><code>forum_topic_reopened</code> (ForumTopicReopened ): Optional. Service message: forum topic reopened</li> <li><code>general_forum_topic_hidden</code> (GeneralForumTopicHidden ): Optional. Service message: the 'General' forum topic hidden</li> <li><code>general_forum_topic_unhidden</code> (GeneralForumTopicUnhidden ): Optional. Service message: the 'General' forum topic unhidden</li> <li><code>giveaway_created</code> (GiveawayCreated ): Optional. Service message: a scheduled giveaway was created</li> <li><code>giveaway</code> (Giveaway ): Optional. The message is a scheduled giveaway message</li> <li><code>giveaway_winners</code> (GiveawayWinners ): Optional. A giveaway with public winners was completed</li> <li><code>giveaway_completed</code> (GiveawayCompleted ): Optional. Service message: a giveaway without public winners was completed</li> <li><code>paid_message_price_changed</code> (PaidMessagePriceChanged ): Optional. Service message: the price for paid messages has changed in the chat</li> <li><code>suggested_post_approved</code> (SuggestedPostApproved ): Optional. Service message: a suggested post was approved</li> <li><code>suggested_post_approval_failed</code> (SuggestedPostApprovalFailed ): Optional. Service message: approval of a suggested post has failed</li> <li><code>suggested_post_declined</code> (SuggestedPostDeclined ): Optional. Service message: a suggested post was declined</li> <li><code>suggested_post_paid</code> (SuggestedPostPaid ): Optional. Service message: payment for a suggested post was received</li> <li><code>suggested_post_refunded</code> (SuggestedPostRefunded ): Optional. Service message: payment for a suggested post was refunded</li> <li><code>video_chat_scheduled</code> (VideoChatScheduled ): Optional. Service message: video chat scheduled</li> <li><code>video_chat_started</code> (VideoChatStarted ): Optional. Service message: video chat started</li> <li><code>video_chat_ended</code> (VideoChatEnded ): Optional. Service message: video chat ended</li> <li><code>video_chat_participants_invited</code> (VideoChatParticipantsInvited ): Optional. Service message: new participants invited to a video chat</li> <li><code>web_app_data</code> (WebAppData ): Optional. Service message: data sent by a Web App</li> <li><code>reply_markup</code> (InlineKeyboardMarkup ): Optional. Inline keyboard attached to the message. login_url buttons are represented as ordinary url buttons.</li> </ul>"},{"location":"types/MessageAutoDeleteTimerChanged/","title":"\ud83d\udd2e MessageAutoDeleteTimerChanged","text":"<p>This object represents a service message about a change in auto-delete timer settings.</p>"},{"location":"types/MessageAutoDeleteTimerChanged/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>message_auto_delete_time</code> (<code>int</code> ): New auto-delete time for messages in the chat; in seconds</li> </ul>"},{"location":"types/MessageEntity/","title":"\ud83d\udd2e MessageEntity","text":"<p>This object represents one special entity in a text message. For example, hashtags, usernames, URLs, etc.</p>"},{"location":"types/MessageEntity/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>MessageEntityType</code> ): Type of the entity. Currently, can be \u201cmention\u201d (@username), \u201chashtag\u201d (#hashtag), \u201ccashtag\u201d ($USD), \u201cbot_command\u201d (/start@jobs_bot),\u201curl\u201d (https://telegram.org), \u201cemail\u201d (do-not-reply@telegram.org), \u201cphone_number\u201d (+1-212-555-0123), \u201cbold\u201d (bold text), \u201citalic\u201d (italic text), \u201cunderline\u201d (underlined text), \u201cstrikethrough\u201d (strikethrough text), \u201cspoiler\u201d (spoiler message), \u201cblockquote\u201d (block quotation), \u201cexpandable_blockquote\u201d (collapsed-by-default block quotation), \u201ccode\u201d (monowidth string), \u201cpre\u201d (monowidth block), \u201ctext_link\u201d (for clickable text URLs), \u201ctext_mention\u201d (for users without usernames), \u201ccustom_emoji\u201d (for inline custom emoji stickers)</li> <li><code>offset</code> (<code>int</code> ): Offset in UTF-16 code units to the start of the entity</li> <li><code>length</code> (<code>int</code> ): Length of the entity in UTF-16 code units</li> <li><code>url</code> (<code>str</code> ): Optional. For \u201ctext_link\u201d only, URL that will be opened after user taps on the text</li> <li><code>user</code> (User ): Optional. For \u201ctext_mention\u201d only, the mentioned user</li> <li><code>language</code> (<code>str</code> ): Optional. For \u201cpre\u201d only, the programming language of the entity text</li> <li><code>custom_emoji_id</code> (<code>str</code> ): Optional. For \u201ccustom_emoji\u201d only, unique identifier of the custom emoji. Use get_custom_emoji_stickers to get full information about the sticker.</li> </ul>"},{"location":"types/MessageId/","title":"\ud83d\udd2e MessageId","text":""},{"location":"types/MessageId/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>message_id</code> (<code>int</code> )</li> </ul>"},{"location":"types/MessageOriginChannel/","title":"\ud83d\udd2e MessageOriginChannel","text":"<p>The message was originally sent to a channel chat.</p>"},{"location":"types/MessageOriginChannel/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> )</li> <li><code>date</code> (<code>int</code> )</li> <li><code>chat</code> (Chat ): Channel chat to which the message was originally sent</li> <li><code>message_id</code> (<code>int</code> ): Unique message identifier inside the chat</li> <li><code>author_signature</code> (<code>str</code> ): Optional. Signature of the original post author</li> </ul>"},{"location":"types/MessageOriginChat/","title":"\ud83d\udd2e MessageOriginChat","text":"<p>The message was originally sent on behalf of a chat to a group chat.</p>"},{"location":"types/MessageOriginChat/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> )</li> <li><code>date</code> (<code>int</code> )</li> <li><code>sender_chat</code> (Chat ): Chat that sent the message originally</li> <li><code>author_signature</code> (<code>str</code> ): Optional. For messages originally sent by an anonymous chat administrator, original message author signature</li> </ul>"},{"location":"types/MessageOriginHiddenUser/","title":"\ud83d\udd2e MessageOriginHiddenUser","text":"<p>The message was originally sent by an unknown user.</p>"},{"location":"types/MessageOriginHiddenUser/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> )</li> <li><code>date</code> (<code>int</code> )</li> <li><code>sender_user_name</code> (<code>str</code> ): Name of the user that sent the message originally</li> </ul>"},{"location":"types/MessageOriginUser/","title":"\ud83d\udd2e MessageOriginUser","text":"<p>The message was originally sent by a known user.</p>"},{"location":"types/MessageOriginUser/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>str</code> )</li> <li><code>date</code> (<code>int</code> )</li> <li><code>sender_user</code> (User ): User that sent the message originally</li> </ul>"},{"location":"types/MessageReactionCountUpdated/","title":"\ud83d\udd2e MessageReactionCountUpdated","text":"<p>This object represents a service message about a change in the list of the current user's reactions to a message.</p>"},{"location":"types/MessageReactionCountUpdated/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>chat</code> (Chat ): The chat containing the message</li> <li><code>message_id</code> (<code>int</code> ): Unique message identifier inside the chat</li> <li><code>date</code> (<code>int</code> ): Date of the change in Unix time</li> <li><code>reactions</code> (List of ReactionCount ): List of reactions that are present on the message</li> </ul>"},{"location":"types/MessageReactionUpdated/","title":"\ud83d\udd2e MessageReactionUpdated","text":"<p>This object represents a service message about a change in the list of the current user's reactions to a message.</p>"},{"location":"types/MessageReactionUpdated/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>chat</code> (Chat ): The chat containing the message the user reacted to</li> <li><code>message_id</code> (<code>int</code> ): Unique identifier of the message inside the chat</li> <li><code>date</code> (<code>int</code> ): Date of the change in Unix time</li> <li><code>old_reaction</code> (List of <code>ReactionType</code> ): Previous list of reaction types that were set by the user</li> <li><code>new_reaction</code> (List of <code>ReactionType</code> ): New list of reaction types that have been set by the user</li> <li><code>user</code> (User ): Optional. The user that changed the reaction, if the user isn't anonymous</li> <li><code>actor_chat</code> (Chat ): Optional. The chat on behalf of which the reaction was changed, if the user is anonymous</li> </ul>"},{"location":"types/OrderInfo/","title":"\ud83d\udd2e OrderInfo","text":"<p>This object represents information about an order.</p>"},{"location":"types/OrderInfo/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>name</code> (<code>str</code> ): Optional. User name</li> <li><code>phone_number</code> (<code>str</code> ): Optional. User's phone number</li> <li><code>email</code> (<code>str</code> ): Optional. User email</li> <li><code>shipping_address</code> (ShippingAddress ): Optional. User shipping address</li> </ul>"},{"location":"types/OwnedGiftRegular/","title":"\ud83d\udd2e OwnedGiftRegular","text":"<p>Describes a regular gift owned by a user or a chat.</p>"},{"location":"types/OwnedGiftRegular/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>gift</code> (Gift ): Information about the regular gift</li> <li><code>owned_gift_id</code> (<code>str</code> ): Optional. Unique identifier of the gift for the bot; for gifts received on behalf of business accounts only</li> <li><code>sender_user</code> (User ): Optional. Sender of the gift if it is a known user</li> <li><code>send_date</code> (<code>int</code> ): Date the gift was sent in Unix time</li> <li><code>text</code> (<code>str</code> ): Optional. Text of the message that was added to the gift</li> <li><code>entities</code> (List of MessageEntity ): Optional. Special entities that appear in the text</li> <li><code>is_private</code> (<code>bool</code> ): Optional. True, if the sender and gift text are shown only to the gift receiver</li> <li><code>is_saved</code> (<code>bool</code> ): Optional. True, if the gift is displayed on the account's profile page</li> <li><code>can_be_upgraded</code> (<code>bool</code> ): Optional. True, if the gift can be upgraded to a unique gift</li> <li><code>was_refunded</code> (<code>bool</code> ): Optional. True, if the gift was refunded and isn't available anymore</li> <li><code>convert_star_count</code> (<code>int</code> ): Optional. Number of Telegram Stars that can be claimed by the receiver instead of the gift</li> <li><code>prepaid_upgrade_star_count</code> (<code>int</code> ): Optional. Number of Telegram Stars that were paid by the sender for the ability to upgrade the gift</li> </ul>"},{"location":"types/OwnedGiftUnique/","title":"\ud83d\udd2e OwnedGiftUnique","text":"<p>Describes a unique gift received and owned by a user or a chat.</p>"},{"location":"types/OwnedGiftUnique/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>gift</code> (UniqueGift ): Information about the unique gift</li> <li><code>owned_gift_id</code> (<code>str</code> ): Optional. Unique identifier of the received gift for the bot; for gifts received on behalf of business accounts only</li> <li><code>sender_user</code> (User ): Optional. Sender of the gift if it is a known user</li> <li><code>send_date</code> (<code>int</code> ): Date the gift was sent in Unix time</li> <li><code>is_saved</code> (<code>bool</code> ): Optional. True, if the gift is displayed on the account's profile page</li> <li><code>can_be_transferred</code> (<code>bool</code> ): Optional. True, if the gift can be transferred to another owner</li> <li><code>transfer_star_count</code> (<code>int</code> ): Optional. Number of Telegram Stars that must be paid to transfer the gift</li> <li><code>next_transfer_date</code> (<code>int</code> )</li> </ul>"},{"location":"types/OwnedGifts/","title":"\ud83d\udd2e OwnedGifts","text":"<p>Contains the list of gifts received and owned by a user or a chat.</p>"},{"location":"types/OwnedGifts/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>total_count</code> (<code>int</code> ): The total number of gifts owned by the user or the chat</li> <li><code>gifts</code> (List of OwnedGiftRegular or OwnedGiftUnique ): The list of gifts</li> <li><code>next_offset</code> (<code>str</code> ): Optional. Offset for the next request. If empty, then there are no more results</li> </ul>"},{"location":"types/PaidMediaInfo/","title":"\ud83d\udd2e PaidMediaInfo","text":"<p>Describes the paid media added to a message.</p>"},{"location":"types/PaidMediaInfo/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>star_count</code> (<code>int</code> ): The number of Telegram Stars that must be paid to buy access to the media</li> <li><code>paid_media</code> (List of <code>PaidMedia</code> ): Information about the paid media</li> </ul>"},{"location":"types/PaidMediaPhoto/","title":"\ud83d\udd2e PaidMediaPhoto","text":"<p>The paid media is a photo.</p>"},{"location":"types/PaidMediaPhoto/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>photo</code> (List of PhotoSize ): The photo</li> </ul>"},{"location":"types/PaidMediaPreview/","title":"\ud83d\udd2e PaidMediaPreview","text":"<p>The paid media isn't available before the payment.</p>"},{"location":"types/PaidMediaPreview/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>width</code> (<code>int</code> ): Optional. Media width as defined by the sender</li> <li><code>height</code> (<code>int</code> ): Optional. Media height as defined by the sender</li> <li><code>duration</code> (<code>int</code> ): Optional. Duration of the media in seconds as defined by the sender</li> </ul>"},{"location":"types/PaidMediaPurchased/","title":"\ud83d\udd2e PaidMediaPurchased","text":"<p>This object contains information about a paid media purchase.</p>"},{"location":"types/PaidMediaPurchased/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>from_user</code> (User ): User who purchased the media</li> <li><code>paid_media_payload</code> (<code>str</code> ): Bot-specified paid media payload</li> </ul>"},{"location":"types/PaidMediaVideo/","title":"\ud83d\udd2e PaidMediaVideo","text":"<p>The paid media is a video.</p>"},{"location":"types/PaidMediaVideo/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>video</code> (Video ): The video</li> </ul>"},{"location":"types/PaidMessagePriceChanged/","title":"\ud83d\udd2e PaidMessagePriceChanged","text":"<p>Describes a service message about a change in the price of paid messages within a chat.</p>"},{"location":"types/PaidMessagePriceChanged/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>paid_message_star_count</code> (<code>int</code> ): The new number of Telegram Stars that must be paid by non-administrator users of the supergroup chat for each sent message</li> </ul>"},{"location":"types/PassportData/","title":"\ud83d\udd2e PassportData","text":""},{"location":"types/PassportData/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>data</code> (List of EncryptedPassportElement )</li> <li><code>credentials</code> (EncryptedCredentials )</li> </ul>"},{"location":"types/PassportElementError/","title":"\ud83d\udd2e PassportElementError","text":""},{"location":"types/PassportElementError/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>source</code> (<code>str</code> )</li> <li><code>type</code> (<code>str</code> )</li> <li><code>field_name</code> (<code>str</code> )</li> <li><code>data_hash</code> (<code>str</code> )</li> <li><code>message</code> (<code>str</code> )</li> </ul>"},{"location":"types/PassportElementErrorDataField/","title":"\ud83d\udd2e PassportElementErrorDataField","text":""},{"location":"types/PassportElementErrorDataField/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>source</code> (<code>str</code> )</li> <li><code>type</code> (<code>str</code> )</li> <li><code>field_name</code> (<code>str</code> )</li> <li><code>data_hash</code> (<code>str</code> )</li> <li><code>message</code> (<code>str</code> )</li> </ul>"},{"location":"types/PassportElementErrorFile/","title":"\ud83d\udd2e PassportElementErrorFile","text":""},{"location":"types/PassportElementErrorFile/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>source</code> (<code>str</code> )</li> <li><code>type</code> (<code>str</code> )</li> <li><code>file_hash</code> (<code>str</code> )</li> <li><code>message</code> (<code>str</code> )</li> </ul>"},{"location":"types/PassportElementErrorFiles/","title":"\ud83d\udd2e PassportElementErrorFiles","text":""},{"location":"types/PassportElementErrorFiles/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>source</code> (<code>str</code> )</li> <li><code>type</code> (<code>str</code> )</li> <li><code>file_hashes</code> (List of <code>str</code> )</li> <li><code>message</code> (<code>str</code> )</li> </ul>"},{"location":"types/PassportElementErrorFrontSide/","title":"\ud83d\udd2e PassportElementErrorFrontSide","text":""},{"location":"types/PassportElementErrorFrontSide/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>source</code> (<code>str</code> )</li> <li><code>type</code> (<code>str</code> )</li> <li><code>file_hash</code> (<code>str</code> )</li> <li><code>message</code> (<code>str</code> )</li> </ul>"},{"location":"types/PassportElementErrorReverseSide/","title":"\ud83d\udd2e PassportElementErrorReverseSide","text":""},{"location":"types/PassportElementErrorReverseSide/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>source</code> (<code>str</code> )</li> <li><code>type</code> (<code>str</code> )</li> <li><code>file_hash</code> (<code>str</code> )</li> <li><code>message</code> (<code>str</code> )</li> </ul>"},{"location":"types/PassportElementErrorSelfie/","title":"\ud83d\udd2e PassportElementErrorSelfie","text":""},{"location":"types/PassportElementErrorSelfie/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>source</code> (<code>str</code> )</li> <li><code>type</code> (<code>str</code> )</li> <li><code>file_hash</code> (<code>str</code> )</li> <li><code>message</code> (<code>str</code> )</li> </ul>"},{"location":"types/PassportElementErrorTranslationFile/","title":"\ud83d\udd2e PassportElementErrorTranslationFile","text":""},{"location":"types/PassportElementErrorTranslationFile/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>source</code> (<code>str</code> )</li> <li><code>type</code> (<code>str</code> )</li> <li><code>file_hash</code> (<code>str</code> )</li> <li><code>message</code> (<code>str</code> )</li> </ul>"},{"location":"types/PassportElementErrorTranslationFiles/","title":"\ud83d\udd2e PassportElementErrorTranslationFiles","text":""},{"location":"types/PassportElementErrorTranslationFiles/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>source</code> (<code>str</code> )</li> <li><code>type</code> (<code>str</code> )</li> <li><code>file_hashes</code> (List of <code>str</code> )</li> <li><code>message</code> (<code>str</code> )</li> </ul>"},{"location":"types/PassportElementErrorUnspecified/","title":"\ud83d\udd2e PassportElementErrorUnspecified","text":""},{"location":"types/PassportElementErrorUnspecified/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>source</code> (<code>str</code> )</li> <li><code>type</code> (<code>str</code> )</li> <li><code>element_hash</code> (<code>str</code> )</li> <li><code>message</code> (<code>str</code> )</li> </ul>"},{"location":"types/PassportFile/","title":"\ud83d\udd2e PassportFile","text":""},{"location":"types/PassportFile/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>file_id</code> (<code>str</code> )</li> <li><code>file_unique_id</code> (<code>str</code> )</li> <li><code>file_size</code> (<code>int</code> )</li> <li><code>file_date</code> (<code>int</code> )</li> </ul>"},{"location":"types/PhotoSize/","title":"\ud83d\udd2e PhotoSize","text":"<p>This object represents one size of a photo or a file / sticker thumbnail.</p>"},{"location":"types/PhotoSize/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>file_id</code> (<code>str</code> ): Identifier for this file, which can be used to download or reuse the file</li> <li><code>file_unique_id</code> (<code>str</code> ): Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</li> <li><code>width</code> (<code>int</code> ): Photo width</li> <li><code>height</code> (<code>int</code> ): Photo height</li> <li><code>file_size</code> (<code>int</code> ): Optional. File size in bytes</li> </ul>"},{"location":"types/Poll/","title":"\ud83d\udd2e Poll","text":"<p>This object contains information about a poll.</p>"},{"location":"types/Poll/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>id</code> (<code>str</code> ): Unique poll identifier</li> <li><code>question</code> (<code>String</code> ): Poll question, 1-300 characters</li> <li><code>options</code> (List of PollOption ): List of poll options</li> <li><code>total_voter_count</code> (<code>int</code> ): Total number of users that voted in the poll</li> <li><code>is_closed</code> (<code>bool</code> ): True, if the poll is closed</li> <li><code>is_anonymous</code> (<code>bool</code> ): True, if the poll is anonymous</li> <li><code>type</code> (<code>str</code> ): Poll type, currently can be \u201cregular\u201d or \u201cquiz\u201d</li> <li><code>allows_multiple_answers</code> (<code>bool</code> ): True, if the poll allows multiple answers</li> <li><code>question_entities</code> (List of MessageEntity ): Optional. Special entities that appear in the question. Currently, only custom emoji entities are allowed in poll questions</li> <li><code>correct_option_id</code> (<code>int</code> ): Optional. 0-based identifier of the correct answer option. Available only for polls in the quiz mode, which are closed, or was sent (not forwarded) by the bot or to the private chat with the bot.</li> <li><code>explanation</code> (<code>String</code> ): Optional. Text that is shown when a user chooses an incorrect answer or taps on the lamp icon in a quiz-style poll, 0-200 characters</li> <li><code>explanation_entities</code> (List of MessageEntity ): Optional. Special entities like usernames, URLs, bot commands, etc. that appear in the explanation</li> <li><code>open_period</code> (<code>int</code> ): Optional. Amount of time in seconds the poll will be active after creation</li> <li><code>close_date</code> (<code>int</code> ): Optional. Point in time (Unix timestamp) when the poll will be automatically closed</li> </ul>"},{"location":"types/PollAnswer/","title":"\ud83d\udd2e PollAnswer","text":"<p>This object represents an answer of a user in a non-anonymous poll.</p>"},{"location":"types/PollAnswer/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>poll_id</code> (<code>str</code> ): Unique poll identifier</li> <li><code>option_ids</code> (List of <code>int</code> ): 0-based identifiers of answer options, chosen by the user. May be empty if the user retracted their vote.</li> <li><code>voter_chat</code> (Chat ): Optional. The chat that changed the answer to the poll, if the voter is anonymous</li> <li><code>user</code> (User ): Optional. The user, who changed the answer to the poll</li> </ul>"},{"location":"types/PollOption/","title":"\ud83d\udd2e PollOption","text":"<p>This object contains information about one answer option in a poll.</p>"},{"location":"types/PollOption/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>text</code> (<code>String</code> ): Option text, 1-100 characters</li> <li><code>voter_count</code> (<code>int</code> ): Number of users that voted for this option</li> <li><code>text_entities</code> (List of MessageEntity ): Optional. Special entities that appear in the option text. Currently, only custom emoji entities are allowed in poll option texts</li> </ul>"},{"location":"types/PreCheckoutQuery/","title":"\ud83d\udd2e PreCheckoutQuery","text":"<p>This object contains information about an incoming pre-checkout query.</p>"},{"location":"types/PreCheckoutQuery/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>id</code> (<code>str</code> ): Unique query identifier</li> <li><code>from_user</code> (User )</li> <li><code>currency</code> (<code>str</code> ): Three-letter ISO 4217 currency code</li> <li><code>total_amount</code> (<code>int</code> ): Total price in the smallest units of the currency (integer, not float/double). For example, for a price of US$ 1.45 pass amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</li> <li><code>invoice_payload</code> (<code>str</code> ): Bot specified invoice payload</li> <li><code>shipping_option_id</code> (<code>str</code> ): Optional. Identifier of the shipping option chosen by the user</li> <li><code>order_info</code> (OrderInfo ): Optional. Order information provided by the user</li> </ul>"},{"location":"types/PreparedInlineMessage/","title":"\ud83d\udd2e PreparedInlineMessage","text":"<p>Describes an inline message to be sent by a user of a Mini App.</p>"},{"location":"types/PreparedInlineMessage/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>id</code> (<code>str</code> ): Unique identifier of the prepared message</li> <li><code>expiration_date</code> (<code>int</code> ): Expiration date of the prepared message, in Unix time. Expired prepared messages can no longer be used</li> </ul>"},{"location":"types/ProximityAlertTriggered/","title":"\ud83d\udd2e ProximityAlertTriggered","text":"<p>This object represents the content of a service message, sent whenever a user in the chat triggers a proximity alert set by another user.</p>"},{"location":"types/ProximityAlertTriggered/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>traveler</code> (User ): User that triggered the alert</li> <li><code>watcher</code> (User ): User that set the alert</li> <li><code>distance</code> (<code>int</code> ): The distance between the users</li> </ul>"},{"location":"types/ReactionCount/","title":"\ud83d\udd2e ReactionCount","text":"<p>This object represents a reaction added to a message along with the number of times it was added.</p>"},{"location":"types/ReactionCount/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>type</code> (<code>ReactionType</code> ): Type of the reaction</li> <li><code>total_count</code> (<code>int</code> ): Number of times the reaction was added</li> </ul>"},{"location":"types/ReactionTypeCustomEmoji/","title":"\ud83d\udd2e ReactionTypeCustomEmoji","text":"<p>This object represents a custom emoji reaction type.</p>"},{"location":"types/ReactionTypeCustomEmoji/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>custom_emoji_id</code> (<code>str</code> ): Identifier of the custom emoji</li> </ul>"},{"location":"types/ReactionTypeEmoji/","title":"\ud83d\udd2e ReactionTypeEmoji","text":"<p>This object represents an emoji reaction type.</p>"},{"location":"types/ReactionTypeEmoji/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>emoji</code> (<code>str</code> ): Reaction emoji. List is available on the API doc.</li> </ul>"},{"location":"types/ReactionTypePaid/","title":"\ud83d\udd2e ReactionTypePaid","text":"<p>The reaction is paid.</p>"},{"location":"types/RefundedPayment/","title":"\ud83d\udd2e RefundedPayment","text":""},{"location":"types/RefundedPayment/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>currency</code> (<code>str</code> )</li> <li><code>total_amount</code> (<code>int</code> )</li> <li><code>invoice_payload</code> (<code>str</code> )</li> <li><code>telegram_payment_charge_id</code> (<code>str</code> )</li> <li><code>provider_payment_charge_id</code> (<code>str</code> )</li> </ul>"},{"location":"types/ReplyKeyboardMarkup/","title":"\ud83d\udd2e ReplyKeyboardMarkup","text":"<p>This object represents a custom keyboard with reply options (see Introduction to bots for details and examples).</p>"},{"location":"types/ReplyKeyboardMarkup/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>keyboard</code> (List of List of KeyboardButton or <code>str</code> ): :obj:<code>list</code> of button rows, each represented by an :obj:<code>list</code> of :class:<code>tgram.types.KeyboardButton</code> or :obj:<code>str</code> objects</li> <li><code>is_persistent</code> (<code>bool</code> ): **Optional. Use this parameter if you want to show the keyboard to specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply (has reply_to_message_id), sender of the original message.</li> </ul> <p>Example: A user requests to change the bot's language, bot replies to the request with a keyboard to select the new language. Other users in the group don't see the keyboard. - <code>resize_keyboard</code> (<code>bool</code> ): Optional. Requests clients to resize the keyboard vertically for optimal fit (e.g., make the keyboard smaller if there are just two rows of buttons). Defaults to false, in which case the custom keyboard is always of the same height as the app's standard keyboard. - <code>one_time_keyboard</code> (<code>bool</code> ): Optional. Requests clients to hide the keyboard as soon as it's been used. The keyboard will still be available, but clients will automatically display the usual letter-keyboard in the chat - the user can press a special button in the input field to see the custom keyboard again. Defaults to false. - <code>input_field_placeholder</code> (<code>str</code> ): Optional. The placeholder to be shown in the input field when the keyboard is active; 1-64 characters - <code>selective</code> (<code>bool</code> ): Optional. Use this parameter if you want to show the keyboard to specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply to a message in the same chat and forum topic, sender of the original message. Example: A user requests to change the bot's language, bot replies to the request with a keyboard to select the new language. Other users in the group don't see the keyboard.**</p>"},{"location":"types/ReplyKeyboardRemove/","title":"\ud83d\udd2e ReplyKeyboardRemove","text":"<p>Upon receiving a message with this object, Telegram clients will remove the current custom keyboard and display the default letter-keyboard. By default, custom keyboards are displayed until a new keyboard is sent by a bot. An exception is made for one-time keyboards that are hidden immediately after the user presses a button (see ReplyKeyboardMarkup).</p>"},{"location":"types/ReplyKeyboardRemove/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>selective</code> (<code>bool</code> ): Optional. Use this parameter if you want to remove the keyboard for specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply (has reply_to_message_id), sender of the original message.Example: A user votes in a poll, bot returns confirmation message in reply to the vote and removes the keyboard for that user, while still showing the keyboard with poll options to users who haven't voted yet.</li> </ul>"},{"location":"types/ReplyParameters/","title":"\ud83d\udd2e ReplyParameters","text":"<p>Describes reply parameters for the message that is being sent.</p>"},{"location":"types/ReplyParameters/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>message_id</code> (<code>int</code> ): Identifier of the message that will be replied to in the current chat, or in the chat chat_id if it is specified</li> <li><code>chat_id</code> (<code>int</code> or <code>str</code> ): Optional. If the message to be replied to is from a different chat, unique identifier for the chat or username of the channel (in the format @channelusername). Not supported for messages sent on behalf of a business account and messages from channel direct messages chats.</li> <li><code>allow_sending_without_reply</code> (<code>bool</code> ): Optional. Pass True if the message should be sent even if the specified message to be replied to is not found. Always False for replies in another chat or forum topic. Always True for messages sent on behalf of a business account.</li> <li><code>quote</code> (<code>str</code> ): Optional. Quoted part of the message to be replied to; 0-1024 characters after entities parsing. The quote must be an exact substring of the message to be replied to, including bold, italic, underline, strikethrough, spoiler, and custom_emoji entities. The message will fail to send if the quote isn't found in the original message.</li> <li><code>quote_parse_mode</code> (<code>str</code> ): Optional. Mode for parsing entities in the quote. See formatting options for more details.</li> <li><code>quote_entities</code> (List of MessageEntity ): Optional. A JSON-serialized list of special entities that appear in the quote. It can be specified instead of quote_parse_mode.</li> <li><code>quote_position</code> (<code>int</code> ): Optional. Position of the quote in the original message in UTF-16 code units</li> <li><code>checklist_task_id</code> (<code>int</code> ): Optional. Identifier of the specific checklist task to be replied to</li> </ul>"},{"location":"types/Response/","title":"\ud83d\udd2e Response","text":"<p>dict() -&gt; new empty dictionary</p>"},{"location":"types/Response/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>ok</code> (<code>bool</code> )</li> <li><code>result</code> (<code>dict</code> or <code>bool</code> )</li> <li><code>error_code</code> (<code>int</code> )</li> <li><code>description</code> (<code>str</code> )</li> <li><code>parameters</code> (<code>dict</code> )</li> </ul>"},{"location":"types/ResponseParameters/","title":"\ud83d\udd2e ResponseParameters","text":""},{"location":"types/ResponseParameters/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>migrate_to_chat_id</code> (<code>int</code> )</li> <li><code>retry_after</code> (<code>int</code> )</li> </ul>"},{"location":"types/RevenueWithdrawalStateFailed/","title":"\ud83d\udd2e RevenueWithdrawalStateFailed","text":"<p>The withdrawal failed and the transaction was refunded.</p>"},{"location":"types/RevenueWithdrawalStatePending/","title":"\ud83d\udd2e RevenueWithdrawalStatePending","text":"<p>The withdrawal is in progress.</p>"},{"location":"types/RevenueWithdrawalStateSucceeded/","title":"\ud83d\udd2e RevenueWithdrawalStateSucceeded","text":"<p>The withdrawal succeeded.</p>"},{"location":"types/RevenueWithdrawalStateSucceeded/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>date</code> (<code>int</code> ): Date the withdrawal was completed in Unix time</li> <li><code>url</code> (<code>str</code> ): An HTTPS URL that can be used to see transaction details</li> </ul>"},{"location":"types/SentWebAppMessage/","title":"\ud83d\udd2e SentWebAppMessage","text":"<p>Describes an inline message sent by a Web App on behalf of a user.</p>"},{"location":"types/SentWebAppMessage/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>inline_message_id</code> (<code>str</code> ): Optional. Identifier of the sent inline message. Available only if there is an inline keyboard attached to the message.</li> </ul>"},{"location":"types/SharedUser/","title":"\ud83d\udd2e SharedUser","text":"<p>This object contains information about a user that was shared with the bot using a KeyboardButtonRequestUser button.</p>"},{"location":"types/SharedUser/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>user_id</code> (<code>int</code> ): Identifier of the shared user. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so 64-bit integers or double-precision float types are safe for storing these identifiers. The bot may not have access to the user and could be unable to use this identifier, unless the user is already known to the bot by some other means.</li> <li><code>first_name</code> (<code>str</code> ): Optional. First name of the user, if the name was requested by the bot</li> <li><code>last_name</code> (<code>str</code> ): Optional. Last name of the user, if the name was requested by the bot</li> <li><code>username</code> (<code>str</code> ): Optional. Username of the user, if the username was requested by the bot</li> <li><code>photo</code> (List of PhotoSize ): Optional. Available sizes of the chat photo, if the photo was requested by the bot</li> </ul>"},{"location":"types/ShippingAddress/","title":"\ud83d\udd2e ShippingAddress","text":"<p>This object represents a shipping address.</p>"},{"location":"types/ShippingAddress/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>country_code</code> (<code>str</code> ): Two-letter ISO 3166-1 alpha-2 country code</li> <li><code>state</code> (<code>str</code> ): State, if applicable</li> <li><code>city</code> (<code>str</code> ): City</li> <li><code>street_line1</code> (<code>str</code> ): First line for the address</li> <li><code>street_line2</code> (<code>str</code> ): Second line for the address</li> <li><code>post_code</code> (<code>str</code> ): Address post code</li> </ul>"},{"location":"types/ShippingOption/","title":"\ud83d\udd2e ShippingOption","text":"<p>This object represents one shipping option.</p>"},{"location":"types/ShippingOption/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>id</code> (<code>str</code> ): Shipping option identifier</li> <li><code>title</code> (<code>str</code> ): Option title</li> <li><code>prices</code> (List of LabeledPrice ): List of price portions</li> </ul>"},{"location":"types/ShippingQuery/","title":"\ud83d\udd2e ShippingQuery","text":"<p>This object contains information about an incoming shipping query.</p>"},{"location":"types/ShippingQuery/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>id</code> (<code>str</code> ): Unique query identifier</li> <li><code>from_user</code> (User )</li> <li><code>invoice_payload</code> (<code>str</code> ): Bot specified invoice payload</li> <li><code>shipping_address</code> (ShippingAddress ): User specified shipping address</li> </ul>"},{"location":"types/StarAmount/","title":"\ud83d\udd2e StarAmount","text":"<p>Describes an amount of Telegram Stars.</p>"},{"location":"types/StarAmount/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>amount</code> (<code>int</code> ): Integer amount of Telegram Stars, rounded to 0; can be negative</li> <li><code>nanostar_amount</code> (<code>int</code> ): Optional. The number of 1/1000000000 shares of Telegram Stars; from -999999999 to 999999999; can be negative if and only if amount is non-positive</li> </ul>"},{"location":"types/StarTransaction/","title":"\ud83d\udd2e StarTransaction","text":"<p>Describes a Telegram Star transaction.</p>"},{"location":"types/StarTransaction/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>id</code> (<code>str</code> ): Unique identifier of the transaction. Coincides with the identifer of the original transaction for refund transactions. Coincides with SuccessfulPayment.telegram_payment_charge_id for successful incoming payments from users.</li> <li><code>amount</code> (<code>int</code> ): Number of Telegram Stars transferred by the transaction</li> <li><code>nanostar_amount</code> (<code>int</code> ): Optional. The number of 1/1000000000 shares of Telegram Stars transferred by the transaction; from 0 to 999999999</li> <li><code>date</code> (<code>int</code> ): Date the transaction was created in Unix time</li> <li><code>source</code> (<code>TransactionPartner</code> ): Optional. Source of an incoming transaction (e.g., a user purchasing goods or services, Fragment refunding a failed withdrawal). Only for incoming transactions</li> <li><code>receiver</code> (<code>TransactionPartner</code> ): Optional. Receiver of an outgoing transaction (e.g., a user for a purchase refund, Fragment for a withdrawal). Only for outgoing transactions</li> </ul>"},{"location":"types/StarTransactions/","title":"\ud83d\udd2e StarTransactions","text":"<p>Contains a list of Telegram Star transactions.</p>"},{"location":"types/StarTransactions/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>transactions</code> (List of StarTransaction ): The list of transactions</li> </ul>"},{"location":"types/Sticker/","title":"\ud83d\udd2e Sticker","text":"<p>This object represents a sticker.</p>"},{"location":"types/Sticker/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>file_id</code> (<code>str</code> ): Identifier for this file, which can be used to download or reuse the file</li> <li><code>file_unique_id</code> (<code>str</code> ): Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</li> <li><code>type</code> (<code>str</code> ): Type of the sticker, currently one of \u201cregular\u201d, \u201cmask\u201d, \u201ccustom_emoji\u201d. The type of the sticker is independent from its format, which is determined by the fields is_animated and is_video.</li> <li><code>width</code> (<code>int</code> ): Sticker width</li> <li><code>height</code> (<code>int</code> ): Sticker height</li> <li><code>is_animated</code> (<code>bool</code> ): True, if the sticker is animated</li> <li><code>is_video</code> (<code>bool</code> ): True, if the sticker is a video sticker</li> <li><code>thumbnail</code> (PhotoSize ): Optional. Sticker thumbnail in the .WEBP or .JPG format</li> <li><code>emoji</code> (<code>str</code> ): Optional. Emoji associated with the sticker</li> <li><code>set_name</code> (<code>str</code> ): Optional. Name of the sticker set to which the sticker belongs</li> <li><code>premium_animation</code> (File ): Optional. Premium animation for the sticker, if the sticker is premium</li> <li><code>mask_position</code> (MaskPosition ): Optional. For mask stickers, the position where the mask should be placed</li> <li><code>custom_emoji_id</code> (<code>str</code> ): Optional. For custom emoji stickers, unique identifier of the custom emoji</li> <li><code>needs_repainting</code> (<code>bool</code> ): Optional. True, if the sticker must be repainted to a text color in messages, the color of the Telegram Premium badge in emoji status, white color on chat photos, or another appropriate color in other places</li> <li><code>file_size</code> (<code>int</code> ): Optional. File size in bytes</li> </ul>"},{"location":"types/StickerSet/","title":"\ud83d\udd2e StickerSet","text":"<p>This object represents a sticker set.</p>"},{"location":"types/StickerSet/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>name</code> (<code>str</code> ): Sticker set name</li> <li><code>title</code> (<code>str</code> ): Sticker set title</li> <li><code>sticker_type</code> (<code>str</code> ): Type of stickers in the set, currently one of \u201cregular\u201d, \u201cmask\u201d, \u201ccustom_emoji\u201d</li> <li><code>stickers</code> (List of Sticker ): List of all set stickers</li> <li><code>thumbnail</code> (PhotoSize ): Optional. Sticker set thumbnail in the .WEBP, .TGS, or .WEBM format</li> </ul>"},{"location":"types/Story/","title":"\ud83d\udd2e Story","text":"<p>This object represents a story.</p>"},{"location":"types/Story/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>chat</code> (Chat ): Chat that posted the story</li> <li><code>id</code> (<code>int</code> ): Unique identifier for the story in the chat</li> </ul>"},{"location":"types/StoryArea/","title":"\ud83d\udd2e StoryArea","text":"<p>Describes a clickable area on a story media.</p>"},{"location":"types/StoryArea/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>position</code> (StoryAreaPosition ): Position of the area</li> <li><code>type</code> (<code>StoryAreaType</code> ): Type of the area</li> </ul>"},{"location":"types/StoryAreaPosition/","title":"\ud83d\udd2e StoryAreaPosition","text":"<p>Describes the position of a clickable area within a story.</p>"},{"location":"types/StoryAreaPosition/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>x_percentage</code> (<code>float</code> ): The abscissa of the area's center, as a percentage of the media width</li> <li><code>y_percentage</code> (<code>float</code> ): The ordinate of the area's center, as a percentage of the media height</li> <li><code>width_percentage</code> (<code>float</code> ): The width of the area's rectangle, as a percentage of the media width</li> <li><code>height_percentage</code> (<code>float</code> ): The height of the area's rectangle, as a percentage of the media height</li> <li><code>rotation_angle</code> (<code>float</code> ): The clockwise rotation angle of the rectangle, in degrees; 0-360</li> <li><code>corner_radius_percentage</code> (<code>float</code> ): The radius of the rectangle corner rounding, as a percentage of the media width</li> </ul>"},{"location":"types/StoryAreaTypeLink/","title":"\ud83d\udd2e StoryAreaTypeLink","text":"<p>Describes a story area pointing to an HTTP or tg:// link.</p>"},{"location":"types/StoryAreaTypeLink/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>url</code> (<code>str</code> ): HTTP or tg:// URL to be opened when the area is clicked</li> </ul>"},{"location":"types/StoryAreaTypeLocation/","title":"\ud83d\udd2e StoryAreaTypeLocation","text":"<p>Describes a story area pointing to a location.</p>"},{"location":"types/StoryAreaTypeLocation/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>latitude</code> (<code>float</code> ): Location latitude in degrees</li> <li><code>longitude</code> (<code>float</code> ): Location longitude in degrees</li> <li><code>address</code> (LocationAddress ): Optional. Address of the location</li> </ul>"},{"location":"types/StoryAreaTypeSuggestedReaction/","title":"\ud83d\udd2e StoryAreaTypeSuggestedReaction","text":"<p>Describes a story area pointing to a suggested reaction.</p>"},{"location":"types/StoryAreaTypeSuggestedReaction/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>reaction_type</code> (<code>ReactionType</code> ): Type of the reaction</li> <li><code>is_dark</code> (<code>bool</code> ): Optional. Pass True if the reaction area has a dark background</li> <li><code>is_flipped</code> (<code>bool</code> ): Optional. Pass True if reaction area corner is flipped</li> </ul>"},{"location":"types/StoryAreaTypeUniqueGift/","title":"\ud83d\udd2e StoryAreaTypeUniqueGift","text":"<p>Describes a story area pointing to a unique gift.</p>"},{"location":"types/StoryAreaTypeUniqueGift/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>name</code> (<code>str</code> ): Unique name of the gift</li> </ul>"},{"location":"types/StoryAreaTypeWeather/","title":"\ud83d\udd2e StoryAreaTypeWeather","text":"<p>Describes a story area containing weather information.</p>"},{"location":"types/StoryAreaTypeWeather/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>temperature</code> (<code>float</code> ): Temperature, in degree Celsius</li> <li><code>emoji</code> (<code>str</code> ): Emoji representing the weather</li> <li><code>background_color</code> (<code>int</code> ): A color of the area background in the ARGB format</li> </ul>"},{"location":"types/SuccessfulPayment/","title":"\ud83d\udd2e SuccessfulPayment","text":"<p>This object contains basic information about a successful payment.</p>"},{"location":"types/SuccessfulPayment/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>currency</code> (<code>str</code> ): Three-letter ISO 4217 currency code</li> <li><code>total_amount</code> (<code>int</code> ): Total price in the smallest units of the currency (integer, not float/double). For example, for a price of US$ 1.45 pass amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</li> <li><code>invoice_payload</code> (<code>str</code> ): Bot specified invoice payload</li> <li><code>subscription_expiration_date</code> (<code>int</code> )</li> <li><code>is_recurring</code> (<code>bool</code> )</li> <li><code>is_first_recurring</code> (<code>bool</code> )</li> <li><code>telegram_payment_charge_id</code> (<code>str</code> ): Telegram payment identifier</li> <li><code>provider_payment_charge_id</code> (<code>str</code> ): Provider payment identifier</li> <li><code>shipping_option_id</code> (<code>str</code> ): Optional. Identifier of the shipping option chosen by the user</li> <li><code>order_info</code> (OrderInfo ): Optional. Order information provided by the user</li> </ul>"},{"location":"types/SuggestedPostApprovalFailed/","title":"\ud83d\udd2e SuggestedPostApprovalFailed","text":"<p>Describes a service message about the failed approval of a suggested post.</p>"},{"location":"types/SuggestedPostApprovalFailed/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>suggested_post_message</code> (Message ): Optional. Message containing the suggested post whose approval has failed.</li> <li><code>price</code> (SuggestedPostPrice ): Expected price of the post.</li> </ul>"},{"location":"types/SuggestedPostApproved/","title":"\ud83d\udd2e SuggestedPostApproved","text":"<p>Describes a service message about the approval of a suggested post.</p>"},{"location":"types/SuggestedPostApproved/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>suggested_post_message</code> (Message ): Optional. Message containing the suggested post.</li> <li><code>price</code> (SuggestedPostPrice ): Optional. Amount paid for the post.</li> <li><code>send_date</code> (<code>int</code> ): Date when the post will be published.</li> </ul>"},{"location":"types/SuggestedPostDeclined/","title":"\ud83d\udd2e SuggestedPostDeclined","text":"<p>Describes a service message about the rejection of a suggested post.</p>"},{"location":"types/SuggestedPostDeclined/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>suggested_post_message</code> (Message ): Optional. Message containing the suggested post.</li> <li><code>comment</code> (<code>str</code> ): Optional. Comment with which the post was declined.</li> </ul>"},{"location":"types/SuggestedPostInfo/","title":"\ud83d\udd2e SuggestedPostInfo","text":"<p>Contains information about a suggested post.</p>"},{"location":"types/SuggestedPostInfo/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>state</code> (<code>str</code> ): State of the suggested post. Can be \"pending\", \"approved\", or \"declined\".</li> <li><code>price</code> (SuggestedPostPrice ): Optional. Proposed price of the post.</li> <li><code>send_date</code> (<code>int</code> ): Optional. Proposed send date of the post.</li> </ul>"},{"location":"types/SuggestedPostPaid/","title":"\ud83d\udd2e SuggestedPostPaid","text":"<p>Describes a service message about a successful payment for a suggested post.</p>"},{"location":"types/SuggestedPostPaid/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>suggested_post_message</code> (Message ): Optional. Message containing the suggested post.</li> <li><code>currency</code> (<code>str</code> ): Currency in which the payment was made. \"XTR\" for Telegram Stars or \"TON\" for toncoins.</li> <li><code>amount</code> (<code>int</code> ): Optional. The amount of the currency that was received by the channel in nanotoncoins; for payments in toncoins only.</li> <li><code>star_amount</code> (StarAmount ): Optional. The amount of Telegram Stars that was received by the channel; for payments in Telegram Stars only.</li> </ul>"},{"location":"types/SuggestedPostParameters/","title":"\ud83d\udd2e SuggestedPostParameters","text":"<p>Contains parameters of a post that is being suggested by the bot.</p>"},{"location":"types/SuggestedPostParameters/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>price</code> (SuggestedPostPrice ): Optional. Proposed price for the post.</li> <li><code>send_date</code> (<code>int</code> ): Optional. Proposed send date of the post.</li> </ul>"},{"location":"types/SuggestedPostPrice/","title":"\ud83d\udd2e SuggestedPostPrice","text":"<p>Describes the price of a suggested post.</p>"},{"location":"types/SuggestedPostPrice/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>currency</code> (<code>str</code> ): Currency in which the post will be paid. Must be \"XTR\" for Telegram Stars or \"TON\" for toncoins.</li> <li><code>amount</code> (<code>int</code> ): The amount of the currency that will be paid for the post in the smallest units of the currency.</li> </ul>"},{"location":"types/SuggestedPostRefunded/","title":"\ud83d\udd2e SuggestedPostRefunded","text":"<p>Describes a service message about a payment refund for a suggested post.</p>"},{"location":"types/SuggestedPostRefunded/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>suggested_post_message</code> (Message ): Optional. Message containing the suggested post.</li> <li><code>reason</code> (<code>str</code> ): Reason for the refund. \"post_deleted\" or \"payment_refunded\".</li> </ul>"},{"location":"types/SwitchInlineQueryChosenChat/","title":"\ud83d\udd2e SwitchInlineQueryChosenChat","text":"<p>Represents an inline button that switches the current user to inline mode in a chosen chat,</p>"},{"location":"types/SwitchInlineQueryChosenChat/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>query</code> (<code>str</code> ): Optional. The default inline query to be inserted in the input field. If left empty, only the bot's username will be inserted</li> <li><code>allow_user_chats</code> (<code>bool</code> ): Optional. True, if private chats with users can be chosen</li> <li><code>allow_bot_chats</code> (<code>bool</code> ): Optional. True, if private chats with bots can be chosen</li> <li><code>allow_group_chats</code> (<code>bool</code> ): Optional. True, if group and supergroup chats can be chosen</li> <li><code>allow_channel_chats</code> (<code>bool</code> ): Optional. True, if channel chats can be chosen</li> </ul>"},{"location":"types/TextQuote/","title":"\ud83d\udd2e TextQuote","text":"<p>This object contains information about the quoted part of a message that is replied to by the given message.</p>"},{"location":"types/TextQuote/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>text</code> (<code>String</code> ): Text of the quoted part of a message that is replied to by the given message</li> <li><code>position</code> (<code>int</code> ): Approximate quote position in the original message in UTF-16 code units as specified by the sender</li> <li><code>entities</code> (List of MessageEntity ): Optional. Special entities that appear in the quote. Currently, only bold, italic, underline, strikethrough, spoiler, and custom_emoji entities are kept in quotes.</li> <li><code>is_manual</code> (<code>bool</code> ): Optional. True, if the quote was chosen manually by the message sender. Otherwise, the quote was added automatically by the server.</li> </ul>"},{"location":"types/TransactionPartnerAffiliateProgram/","title":"\ud83d\udd2e TransactionPartnerAffiliateProgram","text":"<p>Describes the affiliate program that issued the affiliate commission received via this transaction.</p>"},{"location":"types/TransactionPartnerAffiliateProgram/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>sponsor_user</code> (User ): Optional. Information about the bot that sponsored the affiliate program</li> <li><code>commission_per_mille</code> (<code>int</code> ): The number of Telegram Stars received by the bot for each 1000 Telegram Stars received by the affiliate program sponsor from referred users</li> </ul>"},{"location":"types/TransactionPartnerChat/","title":"\ud83d\udd2e TransactionPartnerChat","text":"<p>Describes a transaction with a chat.</p>"},{"location":"types/TransactionPartnerChat/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>chat</code> (Chat ): Information about the chat</li> <li><code>gift</code> (Gift ): Optional. The gift sent to the chat by the bot</li> </ul>"},{"location":"types/TransactionPartnerFragment/","title":"\ud83d\udd2e TransactionPartnerFragment","text":"<p>Describes a withdrawal transaction with Fragment.</p>"},{"location":"types/TransactionPartnerFragment/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>withdrawal_state</code> (<code>RevenueWithdrawalState</code> ): Optional. State of the transaction if the transaction is outgoing</li> </ul>"},{"location":"types/TransactionPartnerOther/","title":"\ud83d\udd2e TransactionPartnerOther","text":"<p>Describes a transaction with an unknown source or recipient.</p>"},{"location":"types/TransactionPartnerTelegramAds/","title":"\ud83d\udd2e TransactionPartnerTelegramAds","text":""},{"location":"types/TransactionPartnerTelegramApi/","title":"\ud83d\udd2e TransactionPartnerTelegramApi","text":""},{"location":"types/TransactionPartnerTelegramApi/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>request_count</code> (<code>int</code> )</li> </ul>"},{"location":"types/TransactionPartnerUser/","title":"\ud83d\udd2e TransactionPartnerUser","text":"<p>Describes a transaction with a user.</p>"},{"location":"types/TransactionPartnerUser/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>user</code> (User ): Information about the user</li> <li><code>transaction_type</code> (<code>str</code> ): Type of the transaction, currently one of \u201cinvoice_payment\u201d, \u201cpaid_media_payment\u201d, \u201cgift_purchase\u201d, \u201cpremium_purchase\u201d, \u201cbusiness_account_transfer\u201d</li> <li><code>affiliate</code> (AffiliateInfo ): Optional. Information about the affiliate that received a commission via this transaction. Can be available only for \u201cinvoice_payment\u201d and \u201cpaid_media_payment\u201d transactions.</li> <li><code>invoice_payload</code> (<code>str</code> ): Optional. Bot-specified invoice payload. Can be available only for \u201cinvoice_payment\u201d transactions.</li> <li><code>subscription_period</code> (<code>int</code> ): Optional. The duration of the paid subscription. Can be available only for \u201cinvoice_payment\u201d transactions.</li> <li><code>paid_media</code> (List of <code>PaidMedia</code> ): Optional. Information about the paid media bought by the user; for \u201cpaid_media_payment\u201d transactions only</li> <li><code>paid_media_payload</code> (<code>str</code> ): Optional. Bot-specified paid media payload. Can be available only for \u201cpaid_media_payment\u201d transactions.</li> <li><code>gift</code> (Gift ): Optional. The gift sent to the user by the bot; for \u201cgift_purchase\u201d transactions only</li> <li><code>premium_subscription_duration</code> (<code>int</code> ): Optional. Number of months the gifted Telegram Premium subscription will be active for; for \u201cpremium_purchase\u201d transactions only</li> </ul>"},{"location":"types/UniqueGift/","title":"\ud83d\udd2e UniqueGift","text":"<p>This object describes a unique gift that was upgraded from a regular gift.</p>"},{"location":"types/UniqueGift/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>base_name</code> (<code>str</code> ): Human-readable name of the regular gift from which this unique gift was upgraded</li> <li><code>name</code> (<code>str</code> ): Unique name of the gift. This name can be used in https://t.me/nft/... links and story areas</li> <li><code>number</code> (<code>int</code> ): Unique number of the upgraded gift among gifts upgraded from the same regular gift</li> <li><code>model</code> (UniqueGiftModel ): Model of the gift</li> <li><code>symbol</code> (UniqueGiftSymbol ): Symbol of the gift</li> <li><code>backdrop</code> (UniqueGiftBackdrop ): Backdrop of the gift</li> <li><code>publisher_chat</code> (Chat ): Optional. Information about the chat that published the gift</li> </ul>"},{"location":"types/UniqueGiftBackdrop/","title":"\ud83d\udd2e UniqueGiftBackdrop","text":"<p>This object describes the backdrop of a unique gift.</p>"},{"location":"types/UniqueGiftBackdrop/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>name</code> (<code>str</code> ): Name of the backdrop</li> <li><code>colors</code> (UniqueGiftBackdropColors ): Colors of the backdrop</li> <li><code>rarity_per_mille</code> (<code>int</code> ): The number of unique gifts that receive this backdrop for every 1000 gifts upgraded</li> </ul>"},{"location":"types/UniqueGiftBackdropColors/","title":"\ud83d\udd2e UniqueGiftBackdropColors","text":"<p>This object describes the colors of the backdrop of a unique gift.</p>"},{"location":"types/UniqueGiftBackdropColors/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>center_color</code> (<code>int</code> ): The color in the center of the backdrop in RGB format</li> <li><code>edge_color</code> (<code>int</code> ): The color on the edges of the backdrop in RGB format</li> <li><code>symbol_color</code> (<code>int</code> ): The color to be applied to the symbol in RGB format</li> <li><code>text_color</code> (<code>int</code> ): The color for the text on the backdrop in RGB format</li> </ul>"},{"location":"types/UniqueGiftInfo/","title":"\ud83d\udd2e UniqueGiftInfo","text":"<p>Describes a service message about a unique gift that was sent or received.</p>"},{"location":"types/UniqueGiftInfo/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>gift</code> (UniqueGift ): Information about the gift</li> <li><code>origin</code> (<code>str</code> ): Origin of the gift. Currently, either \u201cupgrade\u201d for gifts upgraded from regular gifts, \u201ctransfer\u201d for gifts transferred from other users or channels, or \u201cresale\u201d for gifts bought from other users</li> <li><code>last_resale_star_count</code> (<code>int</code> )</li> <li><code>owned_gift_id</code> (<code>str</code> ): Optional. Unique identifier of the received gift for the bot; only present for gifts received on behalf of business accounts</li> <li><code>transfer_star_count</code> (<code>int</code> ): Optional. Number of Telegram Stars that must be paid to transfer the gift; omitted if the bot cannot transfer the gift</li> <li><code>next_transfer_date</code> (<code>int</code> )</li> </ul>"},{"location":"types/UniqueGiftModel/","title":"\ud83d\udd2e UniqueGiftModel","text":"<p>This object describes the model of a unique gift.</p>"},{"location":"types/UniqueGiftModel/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>name</code> (<code>str</code> ): Name of the model</li> <li><code>sticker</code> (Sticker ): The sticker that represents the unique gift</li> <li><code>rarity_per_mille</code> (<code>int</code> ): The number of unique gifts that receive this model for every 1000 gifts upgraded</li> </ul>"},{"location":"types/UniqueGiftSymbol/","title":"\ud83d\udd2e UniqueGiftSymbol","text":"<p>This object describes the symbol shown on the pattern of a unique gift.</p>"},{"location":"types/UniqueGiftSymbol/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>name</code> (<code>str</code> ): Name of the symbol</li> <li><code>sticker</code> (Sticker ): The sticker that represents the unique gift</li> <li><code>rarity_per_mille</code> (<code>int</code> ): The number of unique gifts that receive this model for every 1000 gifts upgraded</li> </ul>"},{"location":"types/Update/","title":"\ud83d\udd2e Update","text":"<p>This object represents an incoming update.At most one of the optional parameters can be present in any given update.</p>"},{"location":"types/Update/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>update_id</code> (<code>int</code> ): The update's unique identifier. Update identifiers start from a certain positive number and increase sequentially. This ID becomes especially handy if you're using webhooks, since it allows you to ignore repeated updates or to restore the correct update sequence, should they get out of order. If there are no new updates for at least a week, then identifier of the next update will be chosen randomly instead of sequentially.</li> <li><code>message</code> (Message ): Optional. New incoming message of any kind - text, photo, sticker, etc.</li> <li><code>edited_message</code> (Message ): Optional. New version of a message that is known to the bot and was edited</li> <li><code>channel_post</code> (Message ): Optional. New incoming channel post of any kind - text, photo, sticker, etc.</li> <li><code>edited_channel_post</code> (Message ): Optional. New version of a channel post that is known to the bot and was edited</li> <li><code>business_connection</code> (BusinessConnection ): Optional. The bot was connected to or disconnected from a business account, or a user edited an existing connection with the bot</li> <li><code>business_message</code> (Message ): Optional. New non-service message from a connected business account</li> <li><code>edited_business_message</code> (Message ): Optional. New version of a non-service message from a connected business account that is known to the bot and was edited</li> <li><code>deleted_business_messages</code> (BusinessMessagesDeleted ): Optional. Service message: the chat connected to the business account was deleted</li> <li><code>message_reaction</code> (MessageReactionUpdated ): Optional. A reaction to a message was changed by a user. The bot must be an administrator in the chat and must explicitly specify \"message_reaction\" in the list of allowed_updates to receive these updates. The update isn't received for reactions set by bots.</li> <li><code>message_reaction_count</code> (MessageReactionCountUpdated ): Optional. Reactions to a message with anonymous reactions were changed. The bot must be an administrator in the chat and must explicitly specify \"message_reaction_count\" in the list of allowed_updates to receive these updates.</li> <li><code>inline_query</code> (InlineQuery ): Optional. New incoming inline query</li> <li><code>chosen_inline_result</code> (ChosenInlineResult ): Optional. The result of an inline query that was chosen by a user and sent to their chat partner. Please see our documentation on the feedback collecting for details on how to enable these updates for your bot.</li> <li><code>callback_query</code> (CallbackQuery ): Optional. New incoming callback query</li> <li><code>shipping_query</code> (ShippingQuery ): Optional. New incoming shipping query. Only for invoices with flexible price</li> <li><code>pre_checkout_query</code> (PreCheckoutQuery ): Optional. New incoming pre-checkout query. Contains full information about checkout</li> <li><code>purchased_paid_media</code> (PaidMediaPurchased ): Optional. A user purchased paid media with a non-empty payload sent by the bot in a non-channel chat</li> <li><code>poll</code> (Poll ): Optional. New poll state. Bots receive only updates about stopped polls and polls, which are sent by the bot</li> <li><code>poll_answer</code> (PollAnswer ): Optional. A user changed their answer in a non-anonymous poll. Bots receive new votes only in polls that were sent by the bot itself.</li> <li><code>my_chat_member</code> (ChatMemberUpdated ): Optional. The bot's chat member status was updated in a chat. For private chats, this update is received only when the bot is blocked or unblocked by the user.</li> <li><code>chat_member</code> (ChatMemberUpdated ): Optional. A chat member's status was updated in a chat. The bot must be an administrator in the chat and must explicitly specify \u201cchat_member\u201d in the list of allowed_updates to receive these updates.</li> <li><code>chat_join_request</code> (ChatJoinRequest ): Optional. A request to join the chat has been sent. The bot must have the can_invite_users administrator right in the chat to receive these updates.</li> <li><code>chat_boost</code> (ChatBoostUpdated ): Optional. A chat boost was added or changed. The bot must be an administrator in the chat to receive these updates.</li> <li><code>removed_chat_boost</code> (ChatBoostRemoved ): Optional. A chat boost was removed. The bot must be an administrator in the chat to receive these updates.</li> </ul>"},{"location":"types/User/","title":"\ud83d\udd2e User","text":"<p>This object represents a Telegram user or bot.</p>"},{"location":"types/User/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>id</code> (<code>int</code> ): Unique identifier for this user or bot. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier.</li> <li><code>is_bot</code> (<code>bool</code> ): True, if this user is a bot</li> <li><code>first_name</code> (<code>str</code> ): User's or bot's first name</li> <li><code>last_name</code> (<code>str</code> ): Optional. User's or bot's last name</li> <li><code>username</code> (<code>str</code> ): Optional. User's or bot's username</li> <li><code>language_code</code> (<code>str</code> ): Optional. IETF language tag of the user's language</li> <li><code>is_premium</code> (<code>bool</code> ): Optional. :obj:<code>bool</code>, if this user is a Telegram Premium user</li> <li><code>added_to_attachment_menu</code> (<code>bool</code> ): Optional. :obj:<code>bool</code>, if this user added the bot to the attachment menu</li> <li><code>can_join_groups</code> (<code>bool</code> ): Optional. True, if the bot can be invited to groups. Returned only in getMe.</li> <li><code>can_read_all_group_messages</code> (<code>bool</code> ): Optional. True, if privacy mode is disabled for the bot. Returned only in getMe.</li> <li><code>supports_inline_queries</code> (<code>bool</code> ): Optional. True, if the bot supports inline queries. Returned only in getMe.</li> <li><code>can_connect_to_business</code> (<code>bool</code> ): Optional. True, if the bot can be connected to a Telegram Business account to receive its messages. Returned only in getMe.</li> <li><code>has_main_web_app</code> (<code>bool</code> ): Optional. True, if the bot has a main Web App. Returned only in getMe.</li> </ul>"},{"location":"types/UserChatBoosts/","title":"\ud83d\udd2e UserChatBoosts","text":"<p>This object represents a list of boosts added to a chat by a user.</p>"},{"location":"types/UserChatBoosts/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>boosts</code> (List of ChatBoost ): The list of boosts added to the chat by the user</li> </ul>"},{"location":"types/UserProfilePhotos/","title":"\ud83d\udd2e UserProfilePhotos","text":"<p>This object represent a user's profile pictures.</p>"},{"location":"types/UserProfilePhotos/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>total_count</code> (<code>int</code> ): Total number of profile pictures the target user has</li> <li><code>photos</code> (List of List of PhotoSize ): Requested profile pictures (in up to 4 sizes each)</li> </ul>"},{"location":"types/UsersShared/","title":"\ud83d\udd2e UsersShared","text":"<p>This object contains information about the users whose identifiers were shared with the bot</p>"},{"location":"types/UsersShared/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>request_id</code> (<code>int</code> ): Identifier of the request</li> <li><code>users</code> (List of SharedUser ): Information about users shared with the bot</li> </ul>"},{"location":"types/Venue/","title":"\ud83d\udd2e Venue","text":"<p>This object represents a venue.</p>"},{"location":"types/Venue/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>location</code> (Location ): Venue location. Can't be a live location</li> <li><code>title</code> (<code>str</code> ): Name of the venue</li> <li><code>address</code> (<code>str</code> ): Address of the venue</li> <li><code>foursquare_id</code> (<code>str</code> ): Optional. Foursquare identifier of the venue</li> <li><code>foursquare_type</code> (<code>str</code> ): Optional. Foursquare type of the venue. (For example, \u201carts_entertainment/default\u201d, \u201carts_entertainment/aquarium\u201d or \u201cfood/icecream\u201d.)</li> <li><code>google_place_id</code> (<code>str</code> ): Optional. Google Places identifier of the venue</li> <li><code>google_place_type</code> (<code>str</code> ): Optional. Google Places type of the venue. (See supported types.)</li> </ul>"},{"location":"types/Video/","title":"\ud83d\udd2e Video","text":"<p>This object represents a video file.</p>"},{"location":"types/Video/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>file_id</code> (<code>str</code> ): Identifier for this file, which can be used to download or reuse the file</li> <li><code>file_unique_id</code> (<code>str</code> ): Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</li> <li><code>width</code> (<code>int</code> ): Video width as defined by sender</li> <li><code>height</code> (<code>int</code> ): Video height as defined by sender</li> <li><code>duration</code> (<code>int</code> ): Duration of the video in seconds as defined by sender</li> <li><code>thumbnail</code> (PhotoSize ): Optional. Video thumbnail</li> <li><code>cover</code> (List of PhotoSize ): Optional. Video thumbnail</li> <li><code>start_timestamp</code> (<code>int</code> ): Optional. Timestamp in seconds from which the video will play in the message</li> <li><code>file_name</code> (<code>str</code> ): Optional. Original filename as defined by sender</li> <li><code>mime_type</code> (<code>str</code> ): Optional. MIME type of the file as defined by sender</li> <li><code>file_size</code> (<code>int</code> ): Optional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.</li> </ul>"},{"location":"types/VideoChatEnded/","title":"\ud83d\udd2e VideoChatEnded","text":"<p>This object represents a service message about a video chat ended in the chat.</p>"},{"location":"types/VideoChatEnded/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>duration</code> (<code>int</code> ): Video chat duration in seconds</li> </ul>"},{"location":"types/VideoChatParticipantsInvited/","title":"\ud83d\udd2e VideoChatParticipantsInvited","text":"<p>This object represents a service message about new members invited to a video chat.</p>"},{"location":"types/VideoChatParticipantsInvited/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>users</code> (List of User ): New members that were invited to the video chat</li> </ul>"},{"location":"types/VideoChatScheduled/","title":"\ud83d\udd2e VideoChatScheduled","text":"<p>This object represents a service message about a video chat scheduled in the chat.</p>"},{"location":"types/VideoChatScheduled/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>start_date</code> (<code>int</code> ): Point in time (Unix timestamp) when the video chat is supposed to be started by a chat administrator</li> </ul>"},{"location":"types/VideoChatStarted/","title":"\ud83d\udd2e VideoChatStarted","text":"<p>This object represents a service message about a video chat started in the chat. Currently holds no information.</p>"},{"location":"types/VideoChatStarted/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>duration</code> (<code>int</code> )</li> </ul>"},{"location":"types/VideoNote/","title":"\ud83d\udd2e VideoNote","text":"<p>This object represents a video message (available in Telegram apps as of v.4.0).</p>"},{"location":"types/VideoNote/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>file_id</code> (<code>str</code> ): Identifier for this file, which can be used to download or reuse the file</li> <li><code>file_unique_id</code> (<code>str</code> ): Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</li> <li><code>length</code> (<code>int</code> ): Video width and height (diameter of the video message) as defined by sender</li> <li><code>duration</code> (<code>int</code> ): Duration of the video in seconds as defined by sender</li> <li><code>thumbnail</code> (PhotoSize ): Optional. Video thumbnail</li> <li><code>file_size</code> (<code>int</code> ): Optional. File size in bytes</li> </ul>"},{"location":"types/Voice/","title":"\ud83d\udd2e Voice","text":"<p>This object represents a voice note.</p>"},{"location":"types/Voice/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>file_id</code> (<code>str</code> ): Identifier for this file, which can be used to download or reuse the file</li> <li><code>file_unique_id</code> (<code>str</code> ): Unique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.</li> <li><code>duration</code> (<code>int</code> ): Duration of the audio in seconds as defined by sender</li> <li><code>mime_type</code> (<code>str</code> ): Optional. MIME type of the file as defined by sender</li> <li><code>file_size</code> (<code>int</code> ): Optional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.</li> </ul>"},{"location":"types/WebAppData/","title":"\ud83d\udd2e WebAppData","text":"<p>Describes data sent from a Web App to the bot.</p>"},{"location":"types/WebAppData/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>data</code> (<code>str</code> ): The data. Be aware that a bad client can send arbitrary data in this field.</li> <li><code>button_text</code> (<code>str</code> ): Text of the web_app keyboard button from which the Web App was opened. Be aware that a bad client can send arbitrary data in this field.</li> </ul>"},{"location":"types/WebAppInfo/","title":"\ud83d\udd2e WebAppInfo","text":"<p>Describes a Web App.</p>"},{"location":"types/WebAppInfo/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>url</code> (<code>str</code> ): An HTTPS URL of a Web App to be opened with additional data as specified in Initializing Web Apps</li> </ul>"},{"location":"types/WebhookInfo/","title":"\ud83d\udd2e WebhookInfo","text":"<p>Describes the current status of a webhook.</p>"},{"location":"types/WebhookInfo/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>url</code> (<code>str</code> ): Webhook URL, may be empty if webhook is not set up</li> <li><code>has_custom_certificate</code> (<code>bool</code> ): True, if a custom certificate was provided for webhook certificate checks</li> <li><code>pending_update_count</code> (<code>int</code> ): Number of updates awaiting delivery</li> <li><code>ip_address</code> (<code>str</code> ): Optional. Currently used webhook IP address</li> <li><code>last_error_date</code> (<code>int</code> ): Optional. Unix time for the most recent error that happened when trying to deliver an update via webhook</li> <li><code>last_error_message</code> (<code>str</code> ): Optional. Error message in human-readable format for the most recent error that happened when trying to deliver an update via webhook</li> <li><code>last_synchronization_error_date</code> (<code>int</code> ): Optional. Unix time of the most recent error that happened when trying to synchronize available updates with Telegram datacenters</li> <li><code>max_connections</code> (<code>int</code> ): Optional. The maximum allowed number of simultaneous HTTPS connections to the webhook for update delivery</li> <li><code>allowed_updates</code> (List of <code>str</code> ): Optional. A list of update types the bot is subscribed to. Defaults to all update types except chat_member</li> </ul>"},{"location":"types/WriteAccessAllowed/","title":"\ud83d\udd2e WriteAccessAllowed","text":"<p>This object represents a service message about a user allowing a bot to write</p>"},{"location":"types/WriteAccessAllowed/#properties","title":"\u2699\ufe0f Properties","text":"<ul> <li><code>from_request</code> (<code>bool</code> ): Optional. True, if the access was granted after the user accepted an explicit request from a Web App sent by the method requestWriteAccess</li> <li><code>web_app_name</code> (<code>str</code> ): Optional. Name of the Web App which was launched from a link</li> <li><code>from_attachment_menu</code> (<code>bool</code> ): Optional. True, if the access was granted when the bot was added to the attachment or side menu</li> </ul>"}]}